{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/about-page/about-page.component.html","webpack:///./src/app/components/about-page/about-page.component.scss","webpack:///./src/app/components/about-page/about-page.component.ts","webpack:///./src/app/components/chatroom-item/chatroom-item.component.html","webpack:///./src/app/components/chatroom-item/chatroom-item.component.scss","webpack:///./src/app/components/chatroom-item/chatroom-item.component.ts","webpack:///./src/app/components/chatroom-list/chatroom-list.component.html","webpack:///./src/app/components/chatroom-list/chatroom-list.component.scss","webpack:///./src/app/components/chatroom-list/chatroom-list.component.ts","webpack:///./src/app/components/error-page/error-page.component.html","webpack:///./src/app/components/error-page/error-page.component.scss","webpack:///./src/app/components/error-page/error-page.component.ts","webpack:///./src/app/components/footer/footer.component.html","webpack:///./src/app/components/footer/footer.component.scss","webpack:///./src/app/components/footer/footer.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/impressum-page/impressum-page.component.html","webpack:///./src/app/components/impressum-page/impressum-page.component.scss","webpack:///./src/app/components/impressum-page/impressum-page.component.ts","webpack:///./src/app/components/login-page/login-page.component.html","webpack:///./src/app/components/login-page/login-page.component.scss","webpack:///./src/app/components/login-page/login-page.component.ts","webpack:///./src/app/components/match-list/match-list.component.html","webpack:///./src/app/components/match-list/match-list.component.scss","webpack:///./src/app/components/match-list/match-list.component.ts","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.scss","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile-page/profile-page.component.html","webpack:///./src/app/components/profile-page/profile-page.component.scss","webpack:///./src/app/components/profile-page/profile-page.component.ts","webpack:///./src/app/components/register-page/register-page.component.css","webpack:///./src/app/components/register-page/register-page.component.html","webpack:///./src/app/components/register-page/register-page.component.ts","webpack:///./src/app/components/result-page/result-page.component.html","webpack:///./src/app/components/result-page/result-page.component.scss","webpack:///./src/app/components/result-page/result-page.component.ts","webpack:///./src/app/components/search-page/search-page.component.html","webpack:///./src/app/components/search-page/search-page.component.scss","webpack:///./src/app/components/search-page/search-page.component.ts","webpack:///./src/app/models/match.ts","webpack:///./src/app/services/activities-offers-cities-store.service.ts","webpack:///./src/app/services/auth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/chat.service.ts","webpack:///./src/app/services/match-store.service.ts","webpack:///./src/app/services/search.service.ts","webpack:///./src/app/services/user-store.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { AuthGuard } from './services/auth.guard';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegisterPageComponent } from './components/register-page/register-page.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { AboutPageComponent } from './components/about-page/about-page.component';\nimport { SearchPageComponent } from './components/search-page/search-page.component';\nimport { ChatroomListComponent } from './components/chatroom-list/chatroom-list.component';\nimport { ChatroomItemComponent } from './components/chatroom-item/chatroom-item.component';\nimport { LoginPageComponent } from './components/login-page/login-page.component';\nimport { MatchListComponent } from './components/match-list/match-list.component';\nimport { ProfilePageComponent } from './components/profile-page/profile-page.component';\nimport { ResultPageComponent } from './components/result-page/result-page.component';\nimport { ImpressumPageComponent } from './components/impressum-page/impressum-page.component';\nimport { ErrorPageComponent } from './components/error-page/error-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/login',\n    pathMatch: 'full'\n  },\n  {\n    path: 'login',\n    component: LoginPageComponent\n  },\n  {\n    path: 'register',\n    component: RegisterPageComponent\n  },\n  {\n    path: 'home',\n    component: HomeComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'matches',\n    component: MatchListComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'chats',\n    component: ChatroomListComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'chats/:id',\n    component: ChatroomItemComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'profile',\n    component: ProfilePageComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'search',\n    component: SearchPageComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'search/result/:id',\n    component: ResultPageComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'impressum',\n    component: ImpressumPageComponent\n  },\n  {\n    path: 'about',\n    component: AboutPageComponent\n  },\n  {\n    path: '**',\n    component: ErrorPageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<div class=\\\"footer-wrap\\\">\\n<app-navbar></app-navbar>\\n<div class=\\\"container container-wrap\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n<app-footer></app-footer>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'tandem-frontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\n// components\nimport { RegisterPageComponent } from './components/register-page/register-page.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginPageComponent } from './components/login-page/login-page.component';\nimport { MatchListComponent } from './components/match-list/match-list.component';\nimport { ChatroomListComponent } from './components/chatroom-list/chatroom-list.component';\nimport { ChatroomItemComponent } from './components/chatroom-item/chatroom-item.component';\nimport { ProfilePageComponent } from './components/profile-page/profile-page.component';\nimport { SearchPageComponent } from './components/search-page/search-page.component';\nimport { ResultPageComponent } from './components/result-page/result-page.component';\nimport { ImpressumPageComponent } from './components/impressum-page/impressum-page.component';\nimport { AboutPageComponent } from './components/about-page/about-page.component';\nimport { ErrorPageComponent } from './components/error-page/error-page.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\n\n// services\nimport { AuthService } from './services/auth.service';\nimport { AuthGuard } from './services/auth.guard';\nimport { UserStoreService } from './services/user-store.service';\nimport { MatchStoreService } from './services/match-store.service';\nimport { ActivitiesOffersCitiesStoreService } from './services/activities-offers-cities-store.service';\nimport { SearchService } from './services/search.service';\nimport { ChatService } from './services/chat.service';\n\n// imports for firebase\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFirestoreModule, FirestoreSettingsToken } from '@angular/fire/firestore';\nimport { environment } from '../environments/environment';\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http);\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterPageComponent,\n    HomeComponent,\n    LoginPageComponent,\n    MatchListComponent,\n    ChatroomListComponent,\n    ChatroomItemComponent,\n    ProfilePageComponent,\n    SearchPageComponent,\n    ResultPageComponent,\n    ImpressumPageComponent,\n    AboutPageComponent,\n    ErrorPageComponent,\n    FooterComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    FontAwesomeModule,\n    NgxPaginationModule,\n    NgMultiSelectDropDownModule.forRoot(),\n    FormsModule,\n    BsDatepickerModule.forRoot()\n  ],\n  providers: [\n    UserStoreService,\n    AuthService,\n    AuthGuard,\n    MatchStoreService,\n    ActivitiesOffersCitiesStoreService,\n    ChatService,\n    SearchService,\n    { provide: FirestoreSettingsToken, useValue: {} } // To solve the timestampInSnapshot-Error\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"row mt-4\\\">\\n  <div class=\\\"col-2 col-md-1\\\"></div>\\n  <div class=\\\"col-8 col-md-10\\\">\\n    <div class=\\\"card m-4 text-center shadow-sm\\\">\\n\\n      <h1 class=\\\"card-title font-weight-light mt-2\\\">Über uns</h1>\\n      <hr class=\\\"my-1 border-warning\\\">\\n      <div class=\\\"card-body\\\">\\n        <blockquote class=\\\"blockquote mb-0\\\">\\n          <p>\\\"Eine Investition in Wissen bringt immer noch die besten Zinsen.\\\"</p>\\n          <footer class=\\\"blockquote-footer\\\">Benjamin Fanklin</footer>\\n        </blockquote>\\n\\n        <br />\\n        <div class=\\\"card-text\\\">\\n          Wir möchten Dir deine Investition so einfach wie möglich machen und bieten Dir deshalb eine Plattform,\\n          mit dieser Du jeder Zeit dein eigenes Wissen mit anderen teilen und auch neues erlangen kannst.\\n\\n          Das Tandem Team besteht aus Studenten des 6. Semester an der HWR Berlin.\\n        </div>\\n\\n      </div>\\n\\n\\n      <br />\\n      <img src=\\\"../../../assets/images/Team-Foto.jpg\\\" class=\\\"card-img-top\\\" alt=\\\"...\\\">\\n      <div class=\\\"card-body\\\">\\n        <p class=\\\"card-text\\\">Hier das Team von links nach rechts: <br />\\n          Arne, Eric, Pascal, Joe und Louis</p>\\n      </div>\\n\\n    </div>\\n  </div>\\n  <div class=\\\"col-2 col-md-1\\\"></div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWJvdXQtcGFnZS9hYm91dC1wYWdlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about-page',\n  templateUrl: './about-page.component.html',\n  styleUrls: ['./about-page.component.scss']\n})\nexport class AboutPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<h1>TandemPartner Chat</h1>\\n\\n<ng-container *ngIf=\\\"chatroom$ | async as chat\\\">\\n  <ng-container *ngIf=\\\" authService.user$ | async as user\\\">\\n\\n    <div #chatBox class=\\\"chat\\\">\\n\\n      <div class=\\\"msg animated zoomInUp\\\" *ngFor=\\\"let message of chat.messages; trackBy: trackByCreated\\\"> <!-- TODO trackBy seems not working.-->\\n\\n        <div class=\\\"user\\\">\\n          <!-- <img [src]=\\\"message.user?.photoURL\\\" width=\\\"50px\\\"> -->\\n          <div><span class=\\\"tag is-dark\\\"> {{ message.user?.firstname || message.user?.uid }}</span></div>\\n\\n        </div>\\n\\n        <p>{{ message.content }}</p>\\n\\n      </div>\\n\\n    </div>\\n\\n    <div class=\\\"form\\\">\\n      <input class=\\\"input\\\" [(ngModel)]=\\\"newMessage\\\" maxlength=\\\"100\\\" (keydown.enter)=\\\"submit(chat.id)\\\">\\n\\n      <button (click)=\\\"submit(chat.id)\\\" class=\\\"button is-info\\\" [disabled]=\\\"!newMessage\\\">Send</button>\\n\\n    </div>\\n  </ng-container>\\n</ng-container>\\n\"","module.exports = \".chat {\\n  padding: 10px;\\n  margin: 70px auto 100px;\\n  width: 100%; }\\n\\n.msg {\\n  display: flex;\\n  align-items: flex-start;\\n  margin-left: auto;\\n  order: 2;\\n  text-align: left;\\n  border-bottom: 1px solid #e9e9e9;\\n  padding: 10px;\\n  width: 90vw;\\n  font-size: 1.3em;\\n  -webkit-animation-delay: 0ms;\\n          animation-delay: 0ms;\\n  -webkit-animation-duration: 600ms;\\n          animation-duration: 600ms; }\\n\\n.msg .user {\\n    margin-right: 10px;\\n    min-width: 100px;\\n    border-right: 1px solid #e9e9e9; }\\n\\n.form {\\n  display: flex;\\n  position: fixed;\\n  bottom: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100px;\\n  padding: 20px 10vw;\\n  background: rgba(255, 255, 255, 0.8); }\\n\\n.top {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 70px;\\n  padding: 20px 10vw;\\n  background: rgba(255, 255, 255, 0.8);\\n  z-index: 99; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jb25zdGFudGluYmVlci9XZWJQcm9nMTkvdGFuZGVtUGFydG5lcjMvYW5ndWxhci9zcmMvYXBwL2NvbXBvbmVudHMvY2hhdHJvb20taXRlbS9jaGF0cm9vbS1pdGVtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixXQUFXLEVBQUE7O0FBR2I7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLGlCQUFpQjtFQUNqQixRQUFRO0VBQ1IsZ0JBQWdCO0VBQ2hCLGdDQUFnQztFQUNoQyxhQUFhO0VBQ2IsV0FBVztFQUNYLGdCQUFnQjtFQUNoQiw0QkFBb0I7VUFBcEIsb0JBQW9CO0VBQ3BCLGlDQUF5QjtVQUF6Qix5QkFBeUIsRUFBQTs7QUFYM0I7SUFjSSxrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLCtCQUErQixFQUFBOztBQUluQztFQUNFLGFBQWE7RUFDYixlQUFlO0VBQ2YsU0FBUztFQUNULE9BQU87RUFDUCxXQUFXO0VBQ1gsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQixvQ0FBb0MsRUFBQTs7QUFHdEM7RUFDRSxlQUFlO0VBQ2YsTUFBTTtFQUNOLE9BQU87RUFDUCxXQUFXO0VBQ1gsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixvQ0FBb0M7RUFDcEMsV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9jaGF0cm9vbS1pdGVtL2NoYXRyb29tLWl0ZW0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2hhdCB7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIG1hcmdpbjogNzBweCBhdXRvIDEwMHB4O1xuICB3aWR0aDogMTAwJTtcbn1cblxuLm1zZyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgb3JkZXI6IDI7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTllOWU5O1xuICBwYWRkaW5nOiAxMHB4O1xuICB3aWR0aDogOTB2dztcbiAgZm9udC1zaXplOiAxLjNlbTtcbiAgYW5pbWF0aW9uLWRlbGF5OiAwbXM7XG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogNjAwbXM7XG5cbiAgLnVzZXIge1xuICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgICBtaW4td2lkdGg6IDEwMHB4O1xuICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNlOWU5ZTk7XG4gIH1cbn1cblxuLmZvcm0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwcHg7XG4gIHBhZGRpbmc6IDIwcHggMTB2dztcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpO1xufVxuXG4udG9wIHtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDcwcHg7XG4gIHBhZGRpbmc6IDIwcHggMTB2dztcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpO1xuICB6LWluZGV4OiA5OTtcbn1cbiJdfQ== */\"","import { AuthService } from 'src/app/services/auth.service';\nimport { ChatService } from './../../services/chat.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-chatroom-item',\n  templateUrl: './chatroom-item.component.html',\n  styleUrls: ['./chatroom-item.component.scss']\n})\nexport class ChatroomItemComponent implements OnInit {\n\n  chatroom$: Observable<any>;\n  newMessage: string;\n\n  constructor(\n    public chatService: ChatService,\n    private route: ActivatedRoute,\n    public authService: AuthService\n  ) { }\n\n  ngOnInit() {\n    const chatroomId = this.route.snapshot.paramMap.get(`id`);\n    const source = this.chatService.getChatroomById(chatroomId);\n    this.chatroom$ = this.chatService.joinUsers(source);\n  }\n\n  submit(chatId) {\n    if (!this.newMessage) {\n      return alert('you need to enter something');\n    }\n    this.chatService.sendMessage(chatId, this.newMessage)\n    .subscribe();\n    this.newMessage = ``;\n    setTimeout(() => window.scrollTo(0, document.body.scrollHeight), 500);\n  }\n\n  trackByCreated(message) {\n    return message.createdAt;\n  }\n\n}\n","module.exports = \"<div class=\\\"row mt-4\\\">\\n  <div class=\\\"col-1\\\"></div>\\n  <div class=\\\"col-10\\\">\\n    <div class=\\\"card shadow my-3\\\" *ngFor=\\\"let chatroom of userChats$ | async\\\">\\n      <div class=\\\"card-body py-2 accepted-match-cards\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-10\\\">\\n            <!-- TODO map the userA or userB (depending on the currentUser) to a modal to display profile pic and name  -->\\n            <a [routerLink]=\\\"chatroom.id\\\">\\n              <span class=\\\"text-decoration-none text-dark\\\">{{ chatroom.userB }}</span>\\n              <hr class=\\\"border-warning border-bottom mt-0 mb-1\\\">\\n              <p class=\\\"text-muted mb-0\\\">{{ chatroom.messages.length }} {{'chatroomList.messages' | translate }}</p>\\n            </a>\\n          </div>\\n          <div class=\\\"col-2 d-flex align-items-center justify-content-end\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-danger homebutton\\\" (click)=\\\"openModal(chatroom.id)\\\"\\n            data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"{{ 'chatroomList.deleteTooltip' | translate }}\\\">\\n              <fa-icon [icon]=\\\"faTimes\\\"></fa-icon>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-1\\\"></div>\\n</div>\\n\\n<!-- Modal -->\\n<div class=\\\"modal-backdrop fade in\\\" [ngStyle]=\\\"{'display':display}\\\"></div>\\n<div *ngIf=\\\"modalIsOpen\\\" class=\\\"modal\\\" [ngStyle]=\\\"{'display': display}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h5 class=\\\"modal-title\\\">{{ 'home.requestTitle' | translate}} Kochen</h5>\\n          <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeModal()\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"closeModal()\\\">Close</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"deleteChatroom()\\\">DELETE</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2hhdHJvb20tbGlzdC9jaGF0cm9vbS1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { UserStoreService } from './../../services/user-store.service';\nimport { ChatService } from './../../services/chat.service';\nimport { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\n\n@Component({\n  selector: 'app-chatroom-list',\n  templateUrl: './chatroom-list.component.html',\n  styleUrls: ['./chatroom-list.component.scss']\n})\nexport class ChatroomListComponent implements OnInit {\n\n  currentUser = this.authService.getCurrentUser();\n  userChats$;\n\n  faTimes = faTimes;\n\n  // for modal\n  display = 'none';\n  modalIsOpen = false;\n  roomToBeDeleted: string;\n\n  constructor(\n    private authService: AuthService,\n    private chatService: ChatService,\n    private userStoreService: UserStoreService\n  ) { }\n\n  ngOnInit() {\n    this.userChats$ = this.chatService.getAllChatrooms();\n    this.getPartnerName();\n  }\n\n  getPartnerName() {\n    // tslint:disable-next-line:prefer-for-of\n    for (let i = 0; i < this.userChats$.length; i++) {\n      let partnerID = this.userChats$[i].userB;\n      if (partnerID === this.authService.currentUserID) {\n        partnerID = this.userChats$[i].userA;\n        this.userStoreService.getUserById(partnerID).subscribe(user => {\n          this.userChats$[i].userA = user.firstname;\n        });\n      } else {\n        this.userStoreService.getUserById(partnerID).subscribe(user => {\n          this.userChats$[i].userB = user.firstname;\n        });\n      }\n    }\n  }\n\n  deleteChatroom() {\n    this.chatService.deleteChatroom(this.roomToBeDeleted).subscribe();\n  }\n\n  openModal(chatroomId: string) {\n    console.log('id: ' + chatroomId);\n    this.modalIsOpen = true;\n    this.display = 'block';\n    this.roomToBeDeleted = chatroomId;\n\n  }\n\n  closeModal() {\n    this.display = 'none';\n    this.modalIsOpen = false;\n  }\n\n}\n","module.exports = \"<div class=\\\"row my-4\\\">\\n  <div class=\\\"col-2\\\"></div>\\n  <div class=\\\"col-8 text-center\\\">\\n    <h1 class=\\\"card-title font-weight-light mt-2\\\">404 - Page not found</h1>\\n    <br />\\n    <img src=\\\"../../../assets/images/404-error.jpg\\\" class=\\\"img-fluid shadow\\\" alt=\\\"image\\\">\\n  </div>\\n  <div class=\\\"col-2\\\"></div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZXJyb3ItcGFnZS9lcnJvci1wYWdlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error-page.component.html',\n  styleUrls: ['./error-page.component.scss']\n})\nexport class ErrorPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<footer class=\\\"footer text-center small border-top absolute-bottom\\\">\\n  <ul class=\\\"nav flex-column\\\">\\n    <li class=\\\"\\\">\\n      <a class=\\\"text-dark\\\" [routerLink]=\\\"['/impressum']\\\">{{'footer.legalDisclosure' | translate }}</a>\\n    </li>\\n    <li class=\\\"\\\">\\n      <a class=\\\"text-dark\\\" [routerLink]=\\\"['/about']\\\">{{'footer.aboutUs' | translate }}</a>\\n    </li>\\n  </ul>\\n  <p> © 2019 | tandemPartner</p>\\n</footer>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h1 class=\\\"text-center font-weight-light mb-3 mt-4\\\">{{ 'home.openMatchrequests' | translate }}</h1>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-1\\\"></div>\\n  <div class=\\\"col-10\\\">\\n    <div *ngIf=\\\"matchRequests$, else elseBlock\\\">\\n      <!-- show all matchRequests which are saved in the Array of 'matchRequests'-->\\n      <div *ngFor=\\\"let match of matchRequests$ | async | paginate: { itemsPerPage: 5, currentPage: pageNumber }\\\">\\n        <div class=\\\"card shadow my-3\\\">\\n            <h5 class=\\\"card-header\\\">\\n                {{ 'home.requestTitle' | translate}} {{ match.matchedOffer }}\\n            </h5>\\n            <div class=\\\"card-body\\\">\\n              <div class=\\\"card-text\\\">\\n                  <div class=\\\"row\\\">\\n                      <div class=\\\"col-8 col-md-10\\\">\\n                        <a class=\\\"pointer-cursor\\\" (click)=\\\"openModal(match.initiatorID)\\\">\\n                          <p class=\\\"my-0\\\"><small>{{ match.initiatorID }}</small></p>\\n                          <p class=\\\"my-0\\\"><small>Age:</small></p>\\n                          <p class=\\\"my-0\\\"><small>Aktivitäten:</small></p>\\n                        </a>\\n                      </div>\\n                      <div class=\\\"col-4 col-md-2 d-flex justify-content-end my-auto\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-success mr-2 homebutton\\\" (click)=\\\"acceptMatch(match.id)\\\">\\n                          <fa-icon [icon]=\\\"faCheck\\\"></fa-icon>\\n                        </button>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger homebutton\\\" (click)=\\\"declineMatch(match.id)\\\">\\n                          <fa-icon [icon]=\\\"faTimes\\\"></fa-icon>\\n                        </button>\\n                      </div>\\n                  </div>\\n                </div>\\n            </div>\\n          </div>\\n      </div><!--ngFor-->\\n\\n      <!--controls for pagination, which are only visible at the length of matchRequest-array bigger than 5-->\\n      <pagination-controls autoHide=\\\"true\\\"\\n        class=\\\"pagination justify-content-center\\\"\\n        (pageChange)=\\\"pageNumber = $event\\\"\\n        previousLabel=\\\"{{'home.previous' | translate }}\\\"\\n        nextLabel=\\\"{{'home.next' | translate }}\\\"></pagination-controls>\\n    </div><!--ngIf-->\\n\\n    <!-- if there are no matchrequests-->\\n    <ng-template #elseBlock>\\n      <p class=\\\"text-center\\\">{{ 'home.noRequests' | translate}}</p>\\n    </ng-template>\\n  </div>\\n  <div class=\\\"col-1\\\"></div>\\n</div>\\n\\n\\n<!-- Modal -->\\n<div class=\\\"modal-backdrop fade in\\\" [ngStyle]=\\\"{'display':display}\\\"></div>\\n<div *ngIf=\\\"modalIsOpen\\\" class=\\\"modal\\\" [ngStyle]=\\\"{'display': display}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h5 class=\\\"modal-title\\\">{{ 'home.requestTitle' | translate}} Kochen</h5>\\n          <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeModal()\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n           <!-- {{ user.firstname }}-->\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"closeModal()\\\">Close</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Save changes</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\"","import { Match } from './../../models/match';\nimport { MatchStoreService } from './../../services/match-store.service';\nimport { AuthService } from './../../services/auth.service';\nimport { UserStoreService } from 'src/app/services/user-store.service';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/models/user';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  users: User[];\n  user: User;\n  requestUser: User;\n  matchRequests: any[];\n  initiatorFirstname: string;\n\n  matchRequests$;\n\n  openedModal: any;\n\n  // for fontawesome icons\n  faCheck = faCheck;\n  faTimes = faTimes;\n\n  // for pagination\n  pageNumber = 1;\n\n  // for modal\n  display = 'none';\n  modalIsOpen = false;\n\n  constructor(\n    private userStoreService: UserStoreService,\n    private authService: AuthService,\n    private matchStoreService: MatchStoreService\n  ) { }\n\n  // when home-component was called, the written methods in ngOnInit gonna start\n  ngOnInit() {\n    this.matchRequests$ = this.matchStoreService.getAllUnAcceptedMatches();\n  }\n\n  getInitiatorFirstname(id: string) {\n    // this.userStoreService.getUserById(id).subscribe((recievedUser: User) => {\n    //   this.initiatorFirstname = recievedUser.firstname;\n    //   console.log('initiatorFirstname: ' + this.initiatorFirstname);\n    // });\n  }\n\n  acceptMatch(matchId) {\n    const data = {\n      accepted: true\n    }\n    this.matchStoreService.updateMatch(matchId, data)\n    .subscribe();\n  }\n\n  declineMatch(matchId) {\n    this.matchStoreService.deleteMatch(matchId)\n    .subscribe();\n  }\n\n  openModal(id: string) {\n    console.log('id: ' + id);\n    this.modalIsOpen = true;\n    this.display = 'block';\n\n  }\n\n  closeModal() {\n    this.display = 'none';\n    this.modalIsOpen = false;\n  }\n\n}\n","module.exports = \"<div class=\\\"row mt-4\\\">\\n  <div class=\\\"col-1\\\"></div>\\n  <div class=\\\"col-10\\\">\\n    <div class=\\\"card-deck\\\">\\n      <div class=\\\"card m-4 text-center py-2 shadow-sm\\\">\\n        <h4 class=\\\"card-title font-weight-light\\\">Das Entwicklerteam</h4>\\n        <hr class=\\\"my-1 border-warning\\\">\\n        Constantin Beer\\n        <br />Eric Odschuk\\n        <br />Luis Ramer\\n        <br />Arne Schacher\\n        <br />Pascal Vonholdt<br />\\n      </div>\\n\\n      <div class=\\\"card m-4 text-center py-2 shadow-sm\\\">\\n        <h4 class=\\\"card-title font-weight-light\\\">Kontakt</h4>\\n        <hr class=\\\"my-1 border-warning\\\">\\n        <a href=\\\"mailto:tandem.hwr@gmail.com\\\">tandem.hwr@gmail.com</a>\\n        HWR Berlin\\n        <br />6. Semester Wirtschaftsinformatik\\n        <br />Alt-Friedrichsfelde 60\\n        <br />10315 Berlin\\n      </div>\\n\\n    </div>\\n    <div class=\\\"col-1\\\"></div>\\n  </div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW1wcmVzc3VtLXBhZ2UvaW1wcmVzc3VtLXBhZ2UuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-impressum-page',\n  templateUrl: './impressum-page.component.html',\n  styleUrls: ['./impressum-page.component.scss']\n})\nexport class ImpressumPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-1\\\"></div>\\n  <div class=\\\"col-10 d-flex justify-content-center\\\">\\n    <div class=\\\"mx-auto my-5 card shadow\\\">\\n      <img class=\\\"card-img-top mb-4 mt-3 rounded-circle mx-auto shadow\\\" src=\\\"../../../assets/images/tandemLogo.png\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"card-title text-center\\\">tandemPartner<i class=\\\"text-muted\\\">{{'login.tandemSlogan' | translate }}</i></div>\\n        <form class=\\\"m-3\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"loginFormSave()\\\">\\n          <div class=\\\"input-group mb-3\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\" id=\\\"mailIcon\\\">\\n                <fa-icon [icon]=\\\"faAt\\\"></fa-icon>\\n              </span>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"loginFormMail\\\" placeholder=\\\"{{'login.mailPlaceholder' | translate }}\\\" formControlName=\\\"loginFormMail\\\" aria-describedby=\\\"mailIcon\\\" autofocus>\\n          </div>\\n\\n          <div class=\\\"input-group mb-3\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\" id=\\\"passwordIcon\\\">\\n                <fa-icon [icon]=\\\"faLock\\\"></fa-icon>\\n              </span>\\n            </div>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"loginFormPassword\\\" placeholder=\\\"{{'login.passwordPlaceholder' | translate }}\\\" formControlName=\\\"loginFormPassword\\\" aria-describedby=\\\"passwordIcon\\\" autofocus>\\n          </div>\\n\\n          <div class=\\\"btn-toolbar d-flex justify-content-center\\\" role=\\\"toolbar\\\">\\n            <div class=\\\"btn-group mr-2\\\">\\n              <button type=\\\"button\\\" type=\\\"submit\\\" class=\\\"btn btn-warning d-flex mx-auto  mt-2\\\" >{{'login.loginButton' | translate }}</button>\\n            </div>\\n            <div class=\\\"btn-group\\\">\\n              <button type=\\\"button\\\" [routerLink]=\\\"['/register']\\\" class=\\\"btn btn-outline-warning d-flex mx-auto mt-2\\\" >{{'login.registerButton' | translate }}</button>\\n            </div>\\n          </div>\\n\\n        </form>\\n      </div>\\n    </div>\\n\\n  </div>\\n  <div class=\\\"col-1\\\"></div>\\n</div>\\n\"","module.exports = \"img {\\n  height: auto;\\n  width: auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jb25zdGFudGluYmVlci9XZWJQcm9nMTkvdGFuZGVtUGFydG5lcjMvYW5ndWxhci9zcmMvYXBwL2NvbXBvbmVudHMvbG9naW4tcGFnZS9sb2dpbi1wYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtFQUNaLFdBQVcsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4tcGFnZS9sb2dpbi1wYWdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW1nIHtcclxuICBoZWlnaHQ6IGF1dG87XHJcbiAgd2lkdGg6IGF1dG87XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { faAt } from '@fortawesome/free-solid-svg-icons';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\nimport { Md5 } from 'ts-md5';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent implements OnInit {\n\n  md5 = new Md5();\n  loginForm: FormGroup;\n\n  // for icons\n  faAt = faAt;\n  faLock = faLock;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService) {\n    this.loginForm = this.createLoginForm();\n  }\n\n  ngOnInit() {\n  }\n\n  createLoginForm() {\n    return this.formBuilder.group({\n      loginFormMail: ['', Validators.required],\n      loginFormPassword: ['', Validators.required]\n    });\n  }\n\n  loginFormSave() {\n    const mail = this.loginForm.value.loginFormMail;\n    const password = this.md5.appendStr(this.loginForm.value.loginFormMail)\n                    .appendStr(this.loginForm.value.loginFormPassword).end() as string;\n    // const password = this.loginForm.value.loginFormPassword;\n\n    this.authService.login(mail, password);\n  }\n\n  get loginFormMail() {\n    return this.loginForm.get('loginFormMail');\n  }\n\n  get loginFormPassword() {\n    return this.loginForm.get('loginFormPassword');\n  }\n}\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-1\\\"></div>\\n  <div class=\\\"col-10 px-0\\\">\\n    <div class=\\\"card mx-auto my-5 shadow\\\">\\n      <div class=\\\"card-header h5 bg-transparent d-flex justify-content-between border-warning p-0\\\">\\n        <div\\n          class=\\\"col-md-6 font-weight-light text-center pointer-cursor align-self-center border-right btn-outline-warning py-3\\\"\\n          data-toggle=\\\"collapse\\\" href=\\\"#collapseAccepted\\\" [ngClass]=\\\"{'active':acceptedCollapsed === true}\\\"\\n          role=\\\"button\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseAccepted\\\" (click)=\\\"requestsCollapsed=false\\\"\\n          (click)=\\\"acceptedCollapsed=true\\\">\\n          {{ 'matchlist.accpetedMatches' | translate }}\\n        </div>\\n        <div class=\\\"col-md-6 font-weight-light text-center pointer-cursor btn-outline-warning py-3\\\"\\n          [ngClass]=\\\"{'active':requestsCollapsed === true}\\\" data-toggle=\\\"collapse\\\" href=\\\"#collapseRequests\\\"\\n          role=\\\"button\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseRequests\\\" (click)=\\\"acceptedCollapsed=false\\\"\\n          (click)=\\\"requestsCollapsed=true\\\">\\n          {{ 'matchlist.unacceptedMatches' | translate }}\\n        </div>\\n      </div>\\n      <!--card-header-->\\n\\n      <!--show all accepted Matches-->\\n      <div *ngIf=\\\"acceptedCollapsed\\\" class=\\\"card-body\\\" id=\\\"collapseAccepted\\\">\\n        <!-- show all accepted matches which are saved in acceptedMatches[]-->\\n        <div\\n          *ngFor=\\\"let match of acceptedMatches$ | async | paginate: { itemsPerPage: 5, currentPage: pageNumberAcceptedMatches, id: 'firstPagination' }\\\">\\n          <div class=\\\"card shadow my-3\\\">\\n            <h5 class=\\\"card-header bg-white border-warning font-italic\\\">\\n              {{ 'matchlist.matchedOffer' | translate }}: {{ match.matchedOffer }}\\n            </h5>\\n            <div *ngIf=\\\"acceptedMatches$, else noRequestBlock\\\" class=\\\"card-body accepted-match-cards\\\">\\n              <div class=\\\"card-text\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-8 col-md-10\\\">\\n                    <a class=\\\"pointer-cursor\\\" (click)=\\\"openModal(match.initiatorID)\\\">\\n                      <p class=\\\"my-0\\\"><small>{{ validateCurrentUser(match.initiatorID, match.partnerID) }}</small></p>\\n                      <p class=\\\"my-0\\\"><small>Age:</small></p>\\n                      <p class=\\\"my-0\\\"><small>Aktivitäten:</small></p>\\n                    </a>\\n                  </div>\\n                  <div class=\\\"col-4 col-md-2 d-flex justify-content-end my-auto\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-warning homebutton\\\"\\n                      (click)=\\\"contactUser(match.initiatorID, match.partnerID)\\\" data-toggle=\\\"tooltip\\\"\\n                      data-placement=\\\"top\\\" title=\\\"{{ 'matchlist.contactTooltip' | translate }}\\\">\\n                      <fa-icon [icon]=\\\"faEnvelope\\\"></fa-icon>\\n                    </button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <!-- if there are no matchrequests-->\\n            <ng-template #noRequestBlock>\\n              <p class=\\\"text-center\\\">{{ 'home.noRequests' | translate}}</p>\\n            </ng-template>\\n          </div>\\n        </div>\\n        <!--ngFor-->\\n\\n        <!--controls for pagination, which are only visible at the length of matchRequest-array bigger than 5-->\\n        <pagination-controls autoHide=\\\"true\\\" class=\\\"pagination justify-content-center\\\"\\n          (pageChange)=\\\"pageNumberAcceptedMatches = $event\\\" previousLabel=\\\"{{'home.previous' | translate }}\\\"\\n          nextLabel=\\\"{{'home.next' | translate }}\\\" id=\\\"firstPagination\\\">\\n        </pagination-controls>\\n\\n      </div>\\n\\n      <!--show all Matchrequests-->\\n      <div *ngIf=\\\"requestsCollapsed\\\" class=\\\"card-body collapse\\\" id=\\\"collapseRequests\\\">\\n\\n\\n\\n        <!-- show all unaccepted matchrequests which are saved in matchrequests[]-->\\n        <div\\n          *ngFor=\\\"let matchrequest of matchRequests$ | async | paginate: { itemsPerPage: 5, currentPage: pageNumberRequests, id: 'secondPagination' }\\\">\\n          <div class=\\\"card shadow my-3\\\">\\n            <h5 class=\\\"card-header bg-white border-info font-italic\\\">\\n              {{ 'matchlist.matchrequestFor' | translate }}: {{ matchrequest.matchedOffer }}\\n            </h5>\\n            <div class=\\\"card-body unaccepted-match-cards\\\">\\n              <div class=\\\"card-text\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-8 col-md-10\\\">\\n                    <a class=\\\"pointer-cursor\\\" (click)=\\\"openModal(matchrequest.partnerID)\\\">\\n                      <p class=\\\"my-0\\\"><small>{{ matchrequest.partnerID }}</small></p>\\n                      <p class=\\\"my-0\\\"><small>Age:</small></p>\\n                      <p class=\\\"my-0\\\"><small>Aktivitäten:</small></p>\\n                    </a>\\n                  </div>\\n                  <div class=\\\"col-4 col-md-2 d-flex justify-content-end my-auto\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-danger homebutton\\\"\\n                      (click)=\\\"deleteMatchrequest(matchrequest.id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\"\\n                      title=\\\"{{ 'matchlist.deleteTooltip' | translate }}\\\">\\n                      <fa-icon [icon]=\\\"faTrash\\\"></fa-icon>\\n                    </button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <!--ngFor-->\\n\\n        <!--controls for pagination, which are only visible at the length of matchRequest-array bigger than 5-->\\n        <pagination-controls autoHide=\\\"true\\\" class=\\\"pagination justify-content-center\\\"\\n          (pageChange)=\\\"pageNumberRequests = $event\\\" previousLabel=\\\"{{'home.previous' | translate }}\\\"\\n          nextLabel=\\\"{{'home.next' | translate }}\\\" id=\\\"secondPagination\\\">\\n        </pagination-controls>\\n\\n\\n      </div>\\n      <!--second row/card-->\\n\\n    </div>\\n\\n\\n  </div>\\n  <!--col-10-->\\n\\n  <div class=\\\"col-1\\\"></div>\\n</div>\\n\\n\\n<!-- Modal -->\\n<div class=\\\"modal-backdrop fade in\\\" [ngStyle]=\\\"{'display':display}\\\"></div>\\n<div *ngIf=\\\"modalIsOpen\\\" class=\\\"modal\\\" [ngStyle]=\\\"{'display': display}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\">{{ 'home.requestTitle' | translate}} Kochen</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeModal()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <!-- {{ user.firstname }}-->\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"closeModal()\\\">Close</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Save changes</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWF0Y2gtbGlzdC9tYXRjaC1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { UserStoreService } from './../../services/user-store.service';\nimport { Match } from './../../models/match';\nimport { MatchStoreService } from './../../services/match-store.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { faTrash, faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport { Router } from '@angular/router';\nimport { ChatService } from 'src/app/services/chat.service';\n// import { ChatService } from './../../services/chat.service';\n\n@Component({\n  selector: 'app-match-list',\n  templateUrl: './match-list.component.html',\n  styleUrls: ['./match-list.component.scss']\n})\nexport class MatchListComponent implements OnInit {\n\n  matchA: Match[];\n  matchB: Match[];\n  allMatches: Match[];\n  acceptedMatches: Match[];\n  matchrequests: Match[];\n\n  matchRequests$;\n  acceptedMatches$;\n\n  // for fontawesome icons\n  faTrash = faTrash;\n  faEnvelope = faEnvelope;\n\n  // for pagination\n  pageNumberAcceptedMatches = 1;\n  pageNumberRequests = 1;\n\n  // getting active & collapsed state\n  acceptedCollapsed = true;\n  requestsCollapsed = false;\n\n  // for modal\n  display = 'none';\n  modalIsOpen = false;\n\n  openedModal: any;\n\n  constructor(\n    private authService: AuthService,\n    private matchStoreService: MatchStoreService,\n    private router: Router,\n    private chatservice: ChatService,\n    private userStoreService: UserStoreService\n    ) { }\n\n  ngOnInit() {\n    this.matchRequests$ = this.matchStoreService.getAllMatchrequests();\n    this.acceptedMatches$ = this.matchStoreService.getAllAcceptedMatches();\n    // this.matchStoreService.getAllAcceptedMatches().subscribe(); // TODO check if this is neccessary!\n  }\n\n  // calculateAgeForEachUser() {\n  //   // tslint:disable-next-line:prefer-for-of\n  //   for (let i = 0; i < this.userForSpecificRequest.length; i++) {\n  //     const birthdate = this.userForSpecificRequest[i].dateOfBirth;\n  //     const timeDiff = Math.abs(Date.now() - birthdate);\n  //     const age = Math.floor((timeDiff / (1000 * 3600 * 24)) / 365);\n  //     this.userForSpecificRequest[i].dateOfBirth = age;\n  //   }\n  // }\n  //\n  contactUser(initiatorID: string, partnerID: string) {\n    const currentUserID = this.authService.currentUserID;\n    let userB;\n\n    if (initiatorID === currentUserID) {\n      userB = partnerID;\n    }\n    if (partnerID === currentUserID) {\n      userB = initiatorID;\n    }\n\n    this.chatservice.create(currentUserID, userB)\n      .subscribe(response => {\n        if (response.result) {\n          this.router.navigate([`chats/${response.id}`]);\n        } else if (!response.result) {\n          this.router.navigate([`chats/${response.id}`]);\n        }\n      });\n  }\n\n  deleteMatchrequest(matchId: string) {\n    this.matchStoreService.deleteMatch(matchId)\n      .subscribe();\n  }\n\n  openModal(id: string) {\n    console.log('id: ' + id);\n    this.modalIsOpen = true;\n    this.display = 'block';\n    // this.allMatches.forEach( match => {\n    //   if (match.id === id) {\n    //     this.openedModal = match;\n    //   }\n    // });\n  }\n\n  closeModal() {\n    this.display = 'none';\n    this.modalIsOpen = false;\n  }\n\n  // async validateCurrentUser(initiatorID: string, partnerID: string) {\n  //   // let username: string;\n  //   if (this.authService.currentUserID === initiatorID) {\n  //    const user =  await this.userStoreService.getUserById(partnerID).toPromise()\n  //     console.log(user)\n  //    return 'partnerID';\n  //   } else {\n  //     this.userStoreService.getUserById(initiatorID)\n  //     const user =  await this.userStoreService.getUserById(initiatorID).toPromise()\n  //     console.log(user)\n  //     return 'initiatorID';\n  //   }\n  // }\n\n  validateCurrentUser(initiatorID: string, partnerID: string) {\n    if (this.authService.currentUserID === initiatorID) {\n      return partnerID;\n    } else {\n      return initiatorID;\n    }\n  }\n\n}\n","module.exports = \"<header>\\n  <!--when the bug of new logging in is solved, we can use the following line\\n  <nav *ngIf=\\\"router.url !== '/login'\\\" class=\\\"navbar navbar-light navbar-expand-lg shadow\\\">-->\\n\\n  <nav class=\\\"navbar fixed-top navbar-light navbar-expand-lg bg-white shadow\\\">\\n    <!--toggle only visible for screens smaller than lg-->\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarLinks\\\" aria-controls=\\\"navbarLinks\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n          <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\">\\n        <img src=\\\"../../../assets/images/navbarLogo.png\\\" width=\\\"40\\\" height=\\\"40\\\" class=\\\"d-inline-block align-top\\\" alt=\\\"Tandem Logo\\\">\\n      </a>\\n\\n      <!--navbar links-->\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarLinks\\\">\\n        <!--left aligned links-->\\n        <ul *ngIf=\\\"isLoggedIn()\\\" class=\\\"navbar-nav mr-auto\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/home']\\\" [routerLinkActive]=\\\"['active']\\\">{{ 'navbar.homeLink' | translate }}</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\" [routerLinkActive]=\\\"['active']\\\">{{ 'navbar.profileLink' | translate }}</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a *ngIf=\\\"router.url !== '/search/result', else resultBlock\\\" class=\\\"nav-link\\\" [routerLink]=\\\"['/search']\\\" [routerLinkActive]=\\\"['active']\\\">{{ 'navbar.searchLink' | translate }}</a>\\n            <ng-template #resultBlock>\\n              <a class=\\\"nav-link active\\\">{{ 'navbar.searchResults' | translate }}</a>\\n            </ng-template>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/matches']\\\" [routerLinkActive]=\\\"['active']\\\">{{ 'navbar.matchesLink' | translate }}</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/chats']\\\" [routerLinkActive]=\\\"['active']\\\">{{ 'navbar.chatLink' | translate }}</a>\\n          </li>\\n        </ul>\\n\\n        <!-- right aligned links-->\\n        <ul class=\\\"navbar-nav ml-auto\\\">\\n          <!--dropdown menu-->\\n          <li class=\\\"nav-item dropdown\\\">\\n            <!--showing english or german language, via checking whether english language was clicked or not -->\\n            <a class=\\\"nav-link dropdown-toggle pointer-cursor border-right\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" id=\\\"dropdownMenuLink\\\">\\n              {{ 'navbar.lang' | translate }}\\n            </a>\\n            <!--dropdown links-->\\n            <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuLink\\\">\\n              <a class=\\\"dropdown-item pointer-cursor\\\" (click)=\\\"switchLanguage('de')\\\">De</a>\\n              <div class=\\\"dropdown-divider\\\"></div>\\n              <a class=\\\"dropdown-item pointer-cursor\\\" (click)=\\\"switchLanguage('en')\\\" >En</a>\\n            </div>\\n          </li>\\n\\n          <!--username-->\\n          <span *ngIf=\\\"isLoggedIn()\\\" class=\\\"navbar-text font-italic mx-lg-2\\\">\\n            Username\\n          </span>\\n\\n          <!--Logout-->\\n          <li *ngIf=\\\"isLoggedIn()\\\" class=\\\"nav-item border-left\\\">\\n            <a class=\\\"nav-link pointer-cursor\\\" (click)=\\\"logout()\\\">{{ 'navbar.logout' | translate }}</a>\\n          </li>\\n          <!--Login-->\\n          <li *ngIf=\\\"!isLoggedIn() \\\" class=\\\"nav-item border-left\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\">{{ 'navbar.login' | translate }}</a>\\n          </li>\\n        </ul>\\n      </div>\\n  </nav>\\n</header>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuc2NzcyJ9 */\"","import { User } from './../../models/user';\nimport { UserStoreService } from './../../services/user-store.service';\nimport { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  // default value for not showing the page in english\n  showEnglish = false;\n\n  constructor(\n    private translateService: TranslateService,\n    private authService: AuthService,\n    private router: Router,\n    private userStoreService: UserStoreService) {\n    translateService.setDefaultLang('de');\n  }\n\n  ngOnInit() {\n  }\n\n  isLoggedIn() {\n    return this.authService.isloggedIn();\n  }\n\n  switchLanguage(language: string) {\n    this.translateService.use(language);\n    if (language === 'en') {\n      this.showEnglish = true;\n    } else {\n      this.showEnglish = false;\n    }\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n\n}\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-1\\\"></div>\\n  <div class=\\\"col-10\\\">\\n    <div class=\\\"card mx-auto my-5 shadow\\\">\\n        <div class=\\\"card-header bg-warning text-center h5\\\">\\n            {{'profile.headerTitle' | translate }}\\n          </div>\\n      <div class=\\\"card-body\\\">\\n          <form class=\\\"\\\" [formGroup]=\\\"editForm\\\" (ngSubmit)=\\\"editFormSave()\\\" novalidate>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"form-group col-md-6\\\">\\n                  <label for=\\\"editFormFirstname\\\">{{'register.firstname' | translate }}*</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control shadow-sm\\\" id=\\\"editFormFirstname\\\" formControlName=\\\"editFormFirstname\\\" placeholder=\\\"{{'register.firstname' | translate }}\\\">\\n              </div>\\n              <div class=\\\"form-group col-md-6\\\">\\n                  <label for=\\\"editFormLastname\\\">{{'register.lastname' | translate }}*</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control shadow-sm\\\" id=\\\"editFormLastname\\\" formControlName=\\\"editFormLastname\\\" placeholder=\\\"{{'register.lastname' | translate }}\\\">\\n              </div>\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6 form-group\\\">\\n                <label for=\\\"editFormSex\\\">{{'register.sex' | translate }}*</label>\\n                <div class=\\\"form-control shadow-sm bg-light\\\"id=\\\"editFormSex\\\" disabled>{{sex}}</div>\\n\\n              </div>\\n              <div class=\\\"col-md-6 form-group\\\">\\n                  <label>{{'register.mail' | translate }}*</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control shadow-sm\\\" id=\\\"editFormMail\\\" formControlName=\\\"editFormMail\\\" placeholder=\\\"name@example.com\\\">\\n              </div>\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6 form-group\\\">\\n                <label for=\\\"editFormCity\\\">{{'register.city' | translate }}*</label>\\n                <ng-multiselect-dropdown  class=\\\"form-control shadow-sm\\\" id=\\\"editFormCity\\\" #editFormCity=\\\"ngModel\\\"\\n                  [placeholder]=\\\"'register.pleaseChoose' | translate\\\"\\n                  [data]=\\\"cities\\\"\\n                  [(ngModel)]=\\\"selectedCity\\\" [ngModelOptions]=\\\"{ standalone : true }\\\"\\n                  [settings]=\\\"selectCitySettings\\\" required>\\n                </ng-multiselect-dropdown>\\n              </div>\\n              <div class=\\\"col-md-6 form-group\\\">\\n                  <label for=\\\"editFormBirthday\\\">{{'register.birthday' | translate }}*</label>\\n                  <input type=\\\"text\\\"\\n                  [placeholder]=\\\"'register.birthday' | translate\\\"\\n                  class=\\\"form-control shadow-sm bg-light\\\"\\n                  bsDatepicker id=\\\"editFormBirthday\\\" formControlName=\\\"editFormBirthday\\\"\\n                  [bsConfig]=\\\"{ dateInputFormat: 'MM.DD.YYYY', colorTheme: 'theme-orange' }\\\">\\n              </div>\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6 form-group\\\">\\n                <label for=\\\"editFormOffers\\\">{{'register.offers' | translate }}:*</label>\\n                <ng-multiselect-dropdown  class=\\\"form-control shadow-sm\\\" id=\\\"editFormOffers\\\" #editFormOffers=\\\"ngModel\\\"\\n                   [placeholder]=\\\"'register.pleaseChoose' | translate\\\"\\n                   [data]=\\\"offers\\\"\\n                   [(ngModel)]=\\\"selectedOffers\\\" [ngModelOptions]=\\\"{ standalone : true }\\\"\\n                   [settings]=\\\"selectOffersActivitiesSettings\\\" required>\\n                </ng-multiselect-dropdown>\\n              </div>\\n              <div class=\\\"col-md-6 form-group\\\">\\n                <label for=\\\"editFormActivities\\\">{{'register.activities' | translate }}:*</label>\\n                <ng-multiselect-dropdown  class=\\\"form-control shadow-sm\\\" id=\\\"editFormActivities\\\" #editFormActivities=\\\"ngModel\\\"\\n                   [placeholder]=\\\"'register.pleaseChoose' | translate\\\"\\n                   [data]=\\\"activities\\\"\\n                   [(ngModel)]=\\\"selectedActivities\\\" [ngModelOptions]=\\\"{ standalone : true }\\\"\\n                   [settings]=\\\"selectOffersActivitiesSettings\\\" required>\\n                </ng-multiselect-dropdown>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6 form-group\\\">\\n                  <label>{{'profile.newPassword' | translate }}*</label>\\n                  <input type=\\\"password\\\" class=\\\"form-control shadow-sm\\\" id=\\\"editFormPassword\\\" formControlName=\\\"editFormPassword\\\" placeholder=\\\"{{'register.password' | translate }}\\\">\\n              </div>\\n              <div class=\\\"col-md-6 form-group\\\">\\n                  <label>{{'profile.newPasswordConfirm' | translate }}*</label>\\n                  <input type=\\\"password\\\" class=\\\"form-control shadow-sm\\\" id=\\\"editFormPasswordConfirm\\\" formControlName=\\\"editFormPasswordConfirm\\\" placeholder=\\\"{{'register.passwordConfirm' | translate }}\\\">\\n              </div>\\n            </div>\\n\\n            <!--Validator messages-->\\n            <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"editFormFirstname.errors && (editFormFirstname.touched || editFormFirstname.dirty)\\\">\\n                <div *ngIf=\\\"editFormFirstname.errors.required\\\">{{'register.firstname' | translate }} {{'validators.required' | translate }}</div>\\n                <div *ngIf=\\\"editFormFirstname.errors.pattern\\\">{{'validators.letterSpaces' | translate }}</div>\\n              </div>\\n\\n              <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"editFormLastname.errors && (editFormLastname.touched || editFormLastname.dirty)\\\">\\n                <div *ngIf=\\\"editFormLastname.errors.required\\\">{{'register.lastname' | translate }} {{'validators.required' | translate }}</div>\\n                <div *ngIf=\\\"editFormLastname.errors.pattern\\\">{{'validators.letterSpaces' | translate }}</div>\\n              </div>\\n\\n              <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"editFormMail.errors && (editFormMail.touched || editFormMail.dirty)\\\">\\n                <div *ngIf=\\\"editFormMail.errors.required\\\">{{'register.mail' | translate }} {{'validators.required' | translate }}</div>\\n                <div *ngIf=\\\"editFormMail.errors.email\\\">{{'validators.email' | translate }}</div>\\n              </div>\\n\\n              <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"editFormPassword.errors && (editFormPassword.touched || editFormPassword.dirty)\\\">\\n                <div *ngIf=\\\"editFormPassword.errors.pattern\\\">{{'validators.passwordPattern' | translate }}</div>\\n              </div>\\n\\n              <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"editFormPasswordConfirm.errors && (editFormPasswordConfirm.touched || editFormPasswordConfirm.dirty)\\\">\\n                <div *ngIf=\\\"editFormPasswordConfirm.errors.pattern\\\">{{'validators.passwordPattern' | translate }}</div>\\n              </div>\\n\\n              <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"editFormPassword.value != editFormPasswordConfirm.value && editFormPasswordConfirm.value != null\\\">\\n                  {{'validators.passwordMismatch' | translate }}\\n              </div>\\n\\n              <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"editFormOffers.errors && (editFormOffers.touched || editFormOffers.dirty)\\\">\\n                  <div *ngIf=\\\"editFormOffers.errors.required\\\" class=\\\"alert-danger\\\">{{'validators.minOffers' | translate }}</div>\\n              </div>\\n\\n              <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"editFormCity.errors && (editFormCity.touched || editFormCity.dirty)\\\">\\n                <div *ngIf=\\\"editFormCity.errors.required\\\" class=\\\"alert-danger\\\">{{'validators.city' | translate }}</div>\\n            </div>\\n\\n              <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"editFormActivities.errors && (editFormActivities.touched || editFormActivities.dirty)\\\">\\n                  <div *ngIf=\\\"editFormActivities.errors.required\\\" class=\\\"alert-danger\\\">{{'validators.minActivities' | translate }}</div>\\n              </div>\\n              <!--End-Validator messages-->\\n\\n              <div class=\\\"btn-toolbar d-flex justify-content-center\\\" role=\\\"toolbar\\\">\\n              <div class=\\\"btn-group mr-1 mr-md-3\\\">\\n                <button type=\\\"button\\\" type=\\\"submit\\\" class=\\\"btn btn-warning d-flex mx-auto mt-2\\\" [disabled]=\\\"(!editForm.valid || !editFormOffers.valid || !editFormActivities.valid || !editFormCity.valid)\\\">{{'register.saveButton' | translate }}</button>\\n              </div>\\n              <div class=\\\"btn-group ml-md-3 mr-1 mr-md-3\\\">\\n                <button type=\\\"button\\\" [routerLink]=\\\"['/home']\\\" class=\\\"btn btn-outline-warning d-flex mx-auto mt-2\\\" >{{'register.quitButton' | translate }}</button>\\n              </div>\\n              <div class=\\\"btn-group ml-md-3\\\">\\n                <button type=\\\"button\\\"  class=\\\"btn btn-outline-danger d-flex mx-auto mt-2\\\" >{{'profile.deleteButton' | translate }}</button>\\n              </div>\\n            </div>\\n          </form>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-1\\\"></div>\\n</div>\\n\"","module.exports = \"#editFormOffers {\\n  padding: 0;\\n  border: none; }\\n\\n#editFormActivities {\\n  padding: 0;\\n  border: none; }\\n\\n#editFormCity {\\n  padding: 0;\\n  border: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jb25zdGFudGluYmVlci9XZWJQcm9nMTkvdGFuZGVtUGFydG5lcjMvYW5ndWxhci9zcmMvYXBwL2NvbXBvbmVudHMvcHJvZmlsZS1wYWdlL3Byb2ZpbGUtcGFnZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQVU7RUFDVixZQUFZLEVBQUE7O0FBR2Q7RUFDRSxVQUFVO0VBQ1YsWUFBWSxFQUFBOztBQUdkO0VBQ0UsVUFBVTtFQUNWLFlBQVksRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZmlsZS1wYWdlL3Byb2ZpbGUtcGFnZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNlZGl0Rm9ybU9mZmVyc3tcclxuICBwYWRkaW5nOiAwO1xyXG4gIGJvcmRlcjogbm9uZTtcclxufVxyXG5cclxuI2VkaXRGb3JtQWN0aXZpdGllc3tcclxuICBwYWRkaW5nOiAwO1xyXG4gIGJvcmRlcjogbm9uZTtcclxufVxyXG5cclxuI2VkaXRGb3JtQ2l0eSB7XHJcbiAgcGFkZGluZzogMDtcclxuICBib3JkZXI6IG5vbmU7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder, AbstractControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserStoreService } from 'src/app/services/user-store.service';\nimport { User } from 'src/app/models/user';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ActivitiesOffersCitiesStoreService } from '../../services/activities-offers-cities-store.service';\n\n@Component({\n  selector: 'app-profile-page',\n  templateUrl: './profile-page.component.html',\n  styleUrls: ['./profile-page.component.scss']\n})\nexport class ProfilePageComponent implements OnInit {\n\n  currentUser;\n  editForm: FormGroup;\n\n  // for showing available offers, activities & cities\n  offers: any[];\n  activities: any[];\n  cities: string[];\n\n  // for loading/saving the selected fields\n  selectedOffers: any[];\n  selectedActivities: any[];\n  selectedCity;\n  sex: string;\n\n  // for selecting fields\n  selectCitySettings = {};\n  selectOffersActivitiesSettings = {};\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private userStoreService: UserStoreService,\n    private authService: AuthService,\n    private activitiesOffersCitiesStoreService: ActivitiesOffersCitiesStoreService) {\n\n    this.editForm = this.createEditForm();\n  }\n\n  async ngOnInit() {\n    // initialzie all available offers & activities\n    this.offers = this.activitiesOffersCitiesStoreService.getAllOffers();\n    this.activities = this.activitiesOffersCitiesStoreService.getAllActivities();\n    this.cities = this.activitiesOffersCitiesStoreService.getAllCities();\n\n    const user = await this.authService.getCurrentUser();\n\n    this.userStoreService.getUserById(user.uid).subscribe((recievedUser: User) => {\n      this.sex = this.parseSexValueForFrontend(recievedUser.sex);\n      this.selectedActivities = recievedUser.activities;\n      this.selectedOffers = recievedUser.offers,\n        this.selectedCity = Array.of(recievedUser.city);\n      this.editForm.get('editFormFirstname').setValue(recievedUser.firstname);\n      this.editForm.get('editFormLastname').setValue(recievedUser.lastname);\n      this.editForm.get('editFormMail').setValue(user.mail);\n      this.editForm.get('editFormBirthday').setValue(recievedUser.dateOfBirth);\n    });\n\n    this.initializeMultiselectSettings();\n  }\n\n  createEditForm() {\n    // create the formGroup\n    return this.formBuilder.group({\n      // the field only contains letters or spaces\n      editFormFirstname: ['', [Validators.required, Validators.pattern('[a-zA-Z ]*')]],\n\n      // the field only contains letters or spaces\n      editFormLastname: ['', [Validators.required, Validators.pattern('[a-zA-Z ]*')]],\n\n      editFormMail: ['', [Validators.required, Validators.email]],\n\n      editFormBirthday: [{ value: '', disabled: true }],\n\n      // at least 6 characters, must contain at least 1 uppercase letter, 1 lowercase letter, and 1 number, can contain special characters\n      // tslint:disable-next-line:max-line-length\n      editFormPassword: ['', [Validators.pattern('^(?=[^A-Z]*[A-Z])(?=[^a-z]*[a-z])(?=\\\\D*\\\\d).{6,16}$')]],\n\n      // at least 6 characters, must contain at least 1 uppercase letter, 1 lowercase letter, and 1 number, can contain special characters\n      // tslint:disable-next-line:max-line-length\n      editFormPasswordConfirm: ['', [Validators.pattern('^(?=[^A-Z]*[A-Z])(?=[^a-z]*[a-z])(?=\\\\D*\\\\d).{6,16}$')]]\n        // adds the custom validator for validating the passwords og their matching\n    }, { validator: this.passwordMatchValidator});\n\n  }\n\n  initializeMultiselectSettings() {\n\n    this.selectCitySettings = {\n      singleSelection: true,\n      idField: 'item_id',\n      textField: 'item_text',\n      enableCheckAll: false,\n      allowSearchFilter: true,\n      closeDropDownOnSelection: true\n    };\n    // selecting settings for the select fields of offers and activities\n    this.selectOffersActivitiesSettings = {\n      singleSelection: false,\n      idField: 'item_id',\n      textField: 'item_text',\n      enableCheckAll: false,\n      itemsShowLimit: 3,\n      allowSearchFilter: true\n    };\n  }\n\n  parseSexValueForFrontend(sex: string): string {\n    if (sex === 'm') {\n      return 'male';\n    } else if (sex === 'f') {\n      return 'female';\n    } else {\n      return 'there was no choice of sex';\n    }\n  }\n\n  parseSexValueForBackend(sex: string): string {\n    if (sex === 'male' || sex === 'männlich') {\n      return 'm';\n    } else if (sex === 'female' || sex === 'weiblich') {\n      return 'f';\n    } else {\n      return 'there was no choice of sex';\n    }\n  }\n\n  // validate the passwords whether they are matching\n  passwordMatchValidator(control: AbstractControl): { invalid: boolean } {\n    if (control.get('editFormPassword').value !== control.get('editFormPasswordConfirm').value) {\n      return { invalid: true };\n    }\n  }\n\n  // validate the input & select fields and send the mail & password to Firebase Authentication\n  // after that the rest of userdata incl. the recieved UserID will be send to the API(Firebase Cloud Functions)\n  editFormSave() {\n\n    if (this.editForm.invalid) {\n      return;\n    }\n    // get data from the inputfields\n    const userdata = {\n      firstname: this.editForm.value.editFormFirstname,\n      lastname: this.editForm.value.editFormLastname,\n      city: this.selectedCity,\n      dateOfBirth: this.editForm.value.editFormBirthday,\n      // get the only one item from selectedSex-Array\n      sex: this.parseSexValueForBackend(this.sex),\n      activities: this.selectedActivities,\n      offers: this.selectedOffers\n    };\n\n\n    // mail and password are gonna be saved at Firebase Authentication and not in userdata\n    const mail = this.editForm.value.editFormMail;\n    const password = this.editForm.value.editFormPassword;\n\n    if (password === !null || password === !undefined || password === !'') {\n      console.log('ausgefülltes password');\n      // this.authService.firebaseUser.updatePassword(password).then();\n    }\n\n    if (mail === !null || mail === !undefined || mail === !'') {\n      console.log('ausgefüllte mail');\n      // this.authService.firebaseUser.updateEmail(mail).then();\n    }\n\n    // // create new user in cloud firestore and take the UID from the new created User\n    // this.userStoreService.updateUser(this.authService.currentUser.uid, userdata).subscribe(() => {\n    //   // then go to page 'home'\n    //   this.router.navigate(['/home']);\n    // });\n\n  }\n\n\n  // getter for the inputfields\n  get editFormFirstname() {\n    return this.editForm.get('editFormFirstname');\n  }\n\n  get editFormLastname() {\n    return this.editForm.get('editFormLastname');\n  }\n\n  get editFormBirthday() {\n    return this.editForm.get('editFormBirthday');\n  }\n\n  get editFormMail() {\n    return this.editForm.get('editFormMail');\n  }\n\n  get editFormPassword() {\n    return this.editForm.get('editFormPassword');\n  }\n  get editFormPasswordConfirm() {\n    return this.editForm.get('editFormPasswordConfirm');\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVnaXN0ZXItcGFnZS9yZWdpc3Rlci1wYWdlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-1\\\"></div>\\n  <div class=\\\"col-10\\\">\\n    <div class=\\\"card mx-auto my-5 shadow\\\">\\n      <div class=\\\"card-header bg-warning text-center h5\\\">\\n        {{'register.headerTitle' | translate }}\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <form class=\\\"\\\" [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"registerFormSave()\\\" novalidate>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label for=\\\"registerFormFirstname\\\">{{'register.firstname' | translate }}*</label>\\n              <input type=\\\"text\\\" class=\\\"form-control shadow-sm\\\" id=\\\"registerFormFirstname\\\"\\n                formControlName=\\\"registerFormFirstname\\\" placeholder=\\\"{{'register.firstname' | translate }}\\\">\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label for=\\\"registerFormLastname\\\">{{'register.lastname' | translate }}*</label>\\n              <input type=\\\"text\\\" class=\\\"form-control shadow-sm\\\" id=\\\"registerFormLastname\\\"\\n                formControlName=\\\"registerFormLastname\\\" placeholder=\\\"{{'register.lastname' | translate }}\\\">\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 form-group\\\">\\n              <label for=\\\"registerFormSex\\\">{{'register.sex' | translate }}*</label>\\n              <ng-multiselect-dropdown class=\\\"form-control shadow-sm\\\" id=\\\"registerFormSex\\\" #registerFormSex=\\\"ngModel\\\"\\n                [placeholder]=\\\"'register.pleaseChoose' | translate\\\" [data]=\\\"sexes\\\" [(ngModel)]=\\\"selectedSex\\\"\\n                [ngModelOptions]=\\\"{ standalone : true }\\\" [settings]=\\\"selectSexSettings\\\" required>\\n              </ng-multiselect-dropdown>\\n\\n            </div>\\n            <div class=\\\"col-md-6 form-group\\\">\\n              <label>{{'register.mail' | translate }}*</label>\\n              <input type=\\\"text\\\" class=\\\"form-control shadow-sm\\\" id=\\\"registerFormMail\\\" formControlName=\\\"registerFormMail\\\"\\n                placeholder=\\\"name@example.com\\\">\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 form-group\\\">\\n              <label for=\\\"registerFormCity\\\">{{'register.city' | translate }}*</label>\\n              <ng-multiselect-dropdown class=\\\"form-control shadow-sm\\\" id=\\\"registerFormCity\\\" #registerFormCity=\\\"ngModel\\\"\\n                [placeholder]=\\\"'register.pleaseChoose' | translate\\\" [data]=\\\"cities\\\" [(ngModel)]=\\\"selectedCity\\\"\\n                [ngModelOptions]=\\\"{ standalone : true }\\\" [settings]=\\\"selectCitySettings\\\" required>\\n              </ng-multiselect-dropdown>\\n            </div>\\n            <div class=\\\"col-md-6 form-group\\\">\\n              <label for=\\\"registerFormBirthday\\\">{{'register.birthday' | translate }}*</label>\\n              <input type=\\\"text\\\" [placeholder]=\\\"'register.birthdayShort' | translate\\\" class=\\\"form-control shadow-sm\\\"\\n                bsDatepicker id=\\\"registerFormBirthday\\\" formControlName=\\\"registerFormBirthday\\\"\\n                [bsConfig]=\\\"{ dateInputFormat: 'DD.MM.YYYY', colorTheme: 'theme-orange' }\\\">\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 form-group\\\">\\n              <label for=\\\"registerFormOffers\\\">{{'register.offers' | translate }}:*</label>\\n              <ng-multiselect-dropdown class=\\\"form-control shadow-sm\\\" id=\\\"registerFormOffers\\\"\\n                #registerFormOffers=\\\"ngModel\\\" [placeholder]=\\\"'register.pleaseChoose' | translate\\\" [data]=\\\"offers\\\"\\n                [(ngModel)]=\\\"selectedOffers\\\" [ngModelOptions]=\\\"{ standalone : true }\\\"\\n                [settings]=\\\"selectOffersActivitiesSettings\\\" required>\\n              </ng-multiselect-dropdown>\\n            </div>\\n            <div class=\\\"col-md-6 form-group\\\">\\n              <label for=\\\"registerFormActivities\\\">{{'register.activities' | translate }}:*</label>\\n              <ng-multiselect-dropdown class=\\\"form-control shadow-sm\\\" id=\\\"registerFormActivities\\\"\\n                #registerFormActivities=\\\"ngModel\\\" [placeholder]=\\\"'register.pleaseChoose' | translate\\\"\\n                [data]=\\\"activities\\\" [(ngModel)]=\\\"selectedActivities\\\" [ngModelOptions]=\\\"{ standalone : true }\\\"\\n                [settings]=\\\"selectOffersActivitiesSettings\\\" required>\\n              </ng-multiselect-dropdown>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 form-group\\\">\\n              <label>{{'register.password' | translate }}*</label>\\n              <input type=\\\"password\\\" class=\\\"form-control shadow-sm\\\" id=\\\"registerFormPassword\\\"\\n                formControlName=\\\"registerFormPassword\\\" placeholder=\\\"{{'register.password' | translate }}\\\">\\n            </div>\\n            <div class=\\\"col-md-6 form-group\\\">\\n              <label>{{'register.passwordConfirm' | translate }}*</label>\\n              <input type=\\\"password\\\" class=\\\"form-control shadow-sm\\\" id=\\\"registerFormPasswordConfirm\\\"\\n                formControlName=\\\"registerFormPasswordConfirm\\\" placeholder=\\\"{{'register.passwordConfirm' | translate }}\\\">\\n            </div>\\n          </div>\\n\\n          <!--Validator messages-->\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"registerFormFirstname.errors && (registerFormFirstname.touched || registerFormFirstname.dirty)\\\">\\n            <div *ngIf=\\\"registerFormFirstname.errors.required\\\">{{'register.firstname' | translate }}\\n              {{'validators.required' | translate }}</div>\\n            <div *ngIf=\\\"registerFormFirstname.errors.pattern\\\">{{'validators.letterSpaces' | translate }}</div>\\n          </div>\\n\\n          <!--Validator messages-->\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"registerFormFirstname.errors && (registerFormFirstname.touched || registerFormFirstname.dirty)\\\">\\n            <div *ngIf=\\\"registerFormFirstname.errors.required\\\">{{'register.firstname' | translate }}\\n              {{'validators.required' | translate }}</div>\\n            <div *ngIf=\\\"registerFormFirstname.errors.pattern\\\">{{'validators.letterSpaces' | translate }}</div>\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"registerFormLastname.errors && (registerFormLastname.touched || registerFormLastname.dirty)\\\">\\n            <div *ngIf=\\\"registerFormLastname.errors.required\\\">{{'register.lastname' | translate }}\\n              {{'validators.required' | translate }}</div>\\n            <div *ngIf=\\\"registerFormLastname.errors.pattern\\\">{{'validators.letterSpaces' | translate }}</div>\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"registerFormMail.errors && (registerFormMail.touched || registerFormMail.dirty)\\\">\\n            <div *ngIf=\\\"registerFormMail.errors.required\\\">{{'register.mail' | translate }}\\n              {{'validators.required' | translate }}</div>\\n            <div *ngIf=\\\"registerFormMail.errors.email\\\">{{'validators.email' | translate }}</div>\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"registerFormPassword.errors && (registerFormPassword.touched || registerFormPassword.dirty)\\\">\\n            <div *ngIf=\\\"registerFormPassword.errors.required\\\">{{'register.password' | translate }}\\n              {{'validators.required' | translate }}</div>\\n            <div *ngIf=\\\"registerFormPassword.errors.pattern\\\">{{'validators.passwordPattern' | translate }}</div>\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"registerFormPasswordConfirm.errors && (registerFormPasswordConfirm.touched || registerFormPasswordConfirm.dirty)\\\">\\n            <div *ngIf=\\\"registerFormPasswordConfirm.errors.required\\\">{{'register.passwordConfirm' | translate }}\\n              {{'validators.required' | translate }}</div>\\n            <div *ngIf=\\\"registerFormPassword.errors.pattern\\\">{{'validators.passwordPattern' | translate }}</div>\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"registerFormPassword.value != registerFormPasswordConfirm.value && registerFormPasswordConfirm.value != null\\\">\\n            {{'validators.passwordMismatch' | translate }}\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"registerFormSex.errors && (registerFormSex.touched || registerFormSex.dirty)\\\">\\n            <div *ngIf=\\\"registerFormSex.errors.required\\\" class=\\\"alert-danger\\\">{{'register.sex' | translate }}\\n              {{'validators.required' | translate }}</div>\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"registerFormOffers.errors && (registerFormOffers.touched || registerFormOffers.dirty)\\\">\\n            <div *ngIf=\\\"registerFormOffers.errors.required\\\" class=\\\"alert-danger\\\">{{'validators.minOffers' | translate }}\\n            </div>\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"registerFormActivities.errors && (registerFormActivities.touched || registerFormActivities.dirty)\\\">\\n            <div *ngIf=\\\"registerFormActivities.errors.required\\\" class=\\\"alert-danger\\\">\\n              {{'validators.minActivities' | translate }}</div>\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"registerFormCity.errors && (registerFormCity.touched || registerFormCity.dirty)\\\">\\n            <div *ngIf=\\\"registerFormCity.errors.required\\\" class=\\\"alert-danger\\\">{{'validators.city' | translate }}</div>\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"registerFormBirthday.errors && (registerFormBirthday.touched || registerFormBirthday.dirty)\\\">\\n            <div *ngIf=\\\"registerFormBirthday.errors.required\\\" class=\\\"alert-danger\\\">\\n              {{'validators.birthday' | translate }}</div>\\n          </div>\\n          <!--End-Validator messages-->\\n\\n          <div class=\\\"btn-toolbar d-flex justify-content-center\\\" role=\\\"toolbar\\\">\\n            <div class=\\\"btn-group mr-1 mr-md-3\\\">\\n              <button type=\\\"button\\\" type=\\\"submit\\\" class=\\\"btn btn-warning d-flex mx-auto mt-2\\\"\\n                [disabled]=\\\"(!registerForm.valid || !registerFormOffers.valid || !registerFormActivities.valid || !registerFormCity.valid)\\\">{{'register.saveButton' | translate }}</button>\\n            </div>\\n            <div class=\\\"btn-group ml-md-3\\\">\\n              <button type=\\\"button\\\" [routerLink]=\\\"['/login']\\\"\\n                class=\\\"btn btn-outline-warning d-flex mx-auto mt-2\\\">{{'register.quitButton' | translate }}</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      <p class=\\\"d-flex justify-content-end text-black-50 mr-4\\\"><small>*\\n          {{'register.requiredExplanation' | translate }}</small></p>\\n    </div>\\n    <!--card-->\\n  </div>\\n  <!--col-10-->\\n  <div class=\\\"col-1\\\"></div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder, AbstractControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserStoreService } from 'src/app/services/user-store.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ActivitiesOffersCitiesStoreService } from '../../services/activities-offers-cities-store.service';\nimport { Md5 } from 'ts-md5';\n\n@Component({\n  selector: 'app-register-page',\n  templateUrl: './register-page.component.html',\n  styleUrls: ['./register-page.component.css']\n})\nexport class RegisterPageComponent implements OnInit {\n\n  md5 = new Md5();\n  registerForm: FormGroup;\n\n  sexes = ['female', 'male'];\n  offers: any[];\n  activities: any[];\n  cities: string[];\n\n  selectedOffers: any[];\n  selectedActivities: any[];\n  selectedCity: any;     // TODO check if this is seen as an array.\n  selectedSex: any[];\n\n  selectOffersActivitiesSettings = {};\n  selectSexSettings = {};\n  selectCitySettings = {};\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private userStoreService: UserStoreService,\n    private authService: AuthService,\n    private activitiesOffersCitiesStoreService: ActivitiesOffersCitiesStoreService) {\n\n    this.registerForm = this.createRegisterForm();\n  }\n\n  ngOnInit() {\n    // initialzie all available offers & activities\n    this.offers = this.activitiesOffersCitiesStoreService.getAllOffers();\n    this.activities = this.activitiesOffersCitiesStoreService.getAllActivities();\n    this.cities = this.activitiesOffersCitiesStoreService.getAllCities();\n\n    this.initializeMultiselectSettings();\n  }\n\n  createRegisterForm() {\n    // create the formGroup\n    return this.formBuilder.group({\n      // the field only contains letters or spaces\n      registerFormFirstname: ['', [Validators.required, Validators.pattern('[a-zA-Z ]*')]],\n\n      // the field only contains letters or spaces\n      registerFormLastname: ['', [Validators.required, Validators.pattern('[a-zA-Z ]*')]],\n\n      registerFormMail: ['', [Validators.required, Validators.email]],\n\n      registerFormBirthday: ['', Validators.required],\n\n      // at least 6 characters, must contain at least 1 uppercase letter, 1 lowercase letter, and 1 number, can contain special characters\n      // tslint:disable-next-line:max-line-length\n      registerFormPassword: ['', [Validators.required, Validators.pattern('^(?=[^A-Z]*[A-Z])(?=[^a-z]*[a-z])(?=\\\\D*\\\\d).{6,16}$')]],\n\n      // at least 6 characters, must contain at least 1 uppercase letter, 1 lowercase letter, and 1 number, can contain special characters\n      // tslint:disable-next-line:max-line-length\n      registerFormPasswordConfirm: ['', [Validators.required, Validators.pattern('^(?=[^A-Z]*[A-Z])(?=[^a-z]*[a-z])(?=\\\\D*\\\\d).{6,16}$')]]\n        // adds the custom validator for validating the passwords og their matching\n    }, { validator: this.passwordMatchValidator});\n\n  }\n\n  initializeMultiselectSettings() {\n    // selecting settings for the select fields of choosing the sex\n    this.selectSexSettings = {\n      singleSelection: true,\n      idField: 'item_id',\n      textField: 'item_text',\n      enableCheckAll: false,\n      allowSearchFilter: false,\n      closeDropDownOnSelection: true\n    };\n\n    this.selectCitySettings = {\n      singleSelection: true,\n      idField: 'item_id',\n      textField: 'item_text',\n      enableCheckAll: false,\n      allowSearchFilter: true,\n      closeDropDownOnSelection: true\n    };\n\n    // selecting settings for the select fields of offers and activities\n    this.selectOffersActivitiesSettings = {\n      singleSelection: false,\n      idField: 'item_id',\n      textField: 'item_text',\n      enableCheckAll: false,\n      itemsShowLimit: 3,\n      allowSearchFilter: true\n    };\n  }\n\n  // validate the passwords whether they are matching\n  passwordMatchValidator(control: AbstractControl): { invalid: boolean } {\n    if (control.get('registerFormPassword').value !== control.get('registerFormPasswordConfirm').value) {\n      return { invalid: true };\n    }\n  }\n\n  // validate the input & select fields and send the mail & password to Firebase Authentication\n  // after that the rest of userdata incl. the recieved UserID will be send to the API(Firebase Cloud Functions)\n  registerFormSave() {\n\n    if (this.registerForm.invalid) {\n      return;\n    }\n    // get data from the inputfields\n    const userdata = {\n      firstname: this.registerForm.value.registerFormFirstname,\n      lastname: this.registerForm.value.registerFormLastname,\n      city: this.selectedCity[0],\n      dateOfBirth: this.registerForm.value.registerFormBirthday,\n      // get the only one item from selectedSex-Array\n      sex: this.parseSexValueForBackend(this.selectedSex[0]),\n      activities: this.selectedActivities,\n      offers: this.selectedOffers,\n      mail: this.registerForm.value.registerFormMail,\n      password: this.md5.appendStr(this.registerForm.value.registerFormMail)\n        .appendStr(this.registerForm.value.registerFormPassword).end()\n    };\n    // create new user in Firebase Authentication and Cloud Firestore\n    this.userStoreService.createUser(userdata).subscribe(() => {\n      // then go to page 'login'\n      this.router.navigate(['/login']);\n    });\n\n  }\n\n  // shorten the male/female-word and return one letter or 'no choice'\n  parseSexValueForBackend(sex: string): string {\n    if (sex === 'male' || sex === 'männlich') {\n      return 'm';\n    } else if (sex === 'female' || sex === 'weiblich') {\n      return 'f';\n    } else {\n      return 'there was no choice of sex';\n    }\n  }\n\n  // getter for the inputfields\n  get registerFormFirstname() {\n    return this.registerForm.get('registerFormFirstname');\n  }\n\n  get registerFormLastname() {\n    return this.registerForm.get('registerFormLastname');\n  }\n\n  get registerFormBirthday() {\n    return this.registerForm.get('registerFormBirthday');\n  }\n\n  get registerFormMail() {\n    return this.registerForm.get('registerFormMail');\n  }\n\n  get registerFormPassword() {\n    return this.registerForm.get('registerFormPassword');\n  }\n\n  get registerFormPasswordConfirm() {\n    return this.registerForm.get('registerFormPasswordConfirm');\n  }\n\n}\n","module.exports = \"<div class=\\\"row my-5\\\">\\n  <div class=\\\"col-1\\\"></div>\\n  <div class=\\\"col-10\\\">\\n    <div *ngIf=\\\"searchResults$, else elseBlock\\\"> <!-- TODO Need something else to check, if there are any results -->\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header bg-transparent text-center border-warning\\\">\\n          <h2 class=\\\"font-weight-light\\\">{{ 'result.results' | translate }}</h2>\\n        </div>\\n        <div class=\\\"card-body mx-5\\\">\\n          <!-- show all accepted matches which are saved in acceptedMatches[]-->\\n          <div\\n            *ngFor=\\\"let user of searchResults$ | async | paginate: { itemsPerPage: 5, currentPage: pageNumber } \\\"> <!--  -->\\n            <div class=\\\"card shadow my-3\\\">\\n              <div class=\\\"card-body accepted-match-cards\\\">\\n                <div class=\\\"card-text\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-8 col-md-10\\\">\\n                      <p class=\\\"my-0\\\"><small><b>{{ user.firstname }} {{ user.lastname }}</b></small></p>\\n                      <p class=\\\"my-0\\\"><small><i>{{ parseSexValueForFrontend(user.sex) }}</i></small></p>\\n                      <p class=\\\"my-0\\\"><small><i>{{ user.city }}</i></small></p>\\n                      <p class=\\\"my-0\\\"><small><i>{{ user.dateOfBirth }} {{ 'result.age' | translate }}</i></small></p>\\n                      <p class=\\\"my-0\\\"><small><i>{{ 'result.activities' | translate }}</i>: {{ user.activities }}</small></p>\\n                    </div>\\n                    <div class=\\\"col-4 col-md-2 d-flex justify-content-end my-auto\\\">\\n                      <button type=\\\"button\\\" class=\\\"btn btn-outline-success homebutton\\\" (click)=\\\"sendMatchrequest(user)\\\"\\n                        data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\"\\n                        title=\\\"{{ 'result.sendMatchrequestTooltip' | translate }}\\\">\\n                        <fa-icon [icon]=\\\"faUserCheck\\\"></fa-icon>\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <!--ngFor-->\\n\\n          <!--controls for pagination, which are only visible at the length of matchRequest-array bigger than 5-->\\n          <pagination-controls autoHide=\\\"true\\\" class=\\\"pagination justify-content-center\\\"\\n            (pageChange)=\\\"pageNumber = $event\\\" previousLabel=\\\"{{'home.previous' | translate }}\\\"\\n            nextLabel=\\\"{{'home.next' | translate }}\\\">\\n          </pagination-controls>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- if there are no matchrequests-->\\n    <ng-template #elseBlock>\\n      <p class=\\\"text-center\\\">{{ 'result.noResults' | translate}}</p>\\n    </ng-template>\\n  </div>\\n  <!--col-10-->\\n  <div class=\\\"col-1\\\"></div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVzdWx0LXBhZ2UvcmVzdWx0LXBhZ2UuY29tcG9uZW50LnNjc3MifQ== */\"","import { Searchrequest } from './../../models/searchrequest';\nimport { ActivatedRoute } from '@angular/router';\nimport { SearchService } from './../../services/search.service';\nimport { AuthService } from './../../services/auth.service';\nimport { MatchStoreService } from './../../services/match-store.service';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user';\nimport { faUserCheck } from '@fortawesome/free-solid-svg-icons';\nimport { Match } from '../..//models/match';\n\n@Component({\n  selector: 'app-result-page',\n  templateUrl: './result-page.component.html',\n  styleUrls: ['./result-page.component.scss']\n})\nexport class ResultPageComponent implements OnInit {\n\n  // input variables for searchparams and the Link for getting the result is required!!\n  faUserCheck = faUserCheck;\n\n  // for pagination the array\n  pageNumber: 1;\n\n  userForSpecificRequest: User[] = [];\n  usersToBeExcludedArray: string[] = [];\n\n  searchResults$;\n\n  matchedOffer;\n\n  constructor(\n    private matchStoreService: MatchStoreService,\n    private authService: AuthService,\n    private searchService: SearchService,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    const searchRequestId = this.route.snapshot.paramMap.get('id');\n    this.searchService.getSearchRequestById(searchRequestId).subscribe((searchRequest: Searchrequest) => {\n      console.log(searchRequest);\n      this.matchedOffer = searchRequest.offerParam; // TODO check, if the error message occures again\n      this.searchResults$ = this.searchService.getSearchResult(searchRequest);\n      this.searchService.getSearchResult(searchRequest).subscribe();\n    });\n  }\n\n  calculateAgeForEachUser(birthdate: any) {\n    const timeDiff = Math.abs(Date.now() - birthdate);\n    const age = Math.floor((timeDiff / (1000 * 3600 * 24)) / 365);\n    return age;\n  }\n\n  parseSexValueForFrontend(sex: string): string {\n    if (sex === 'm') {\n      return 'male';\n    } else if (sex === 'f') {\n      return 'female';\n    }\n  }\n\n  sendMatchrequest(partner: User) {\n    const newMatch: Match = new Match(this.authService.currentUserID, partner.uid, this.matchedOffer, false);\n    this.matchStoreService.createMatch(newMatch).subscribe();\n  }\n\n\n\n}\n","module.exports = \"<div *ngIf=\\\"router.url === '/search'\\\" class=\\\"row\\\">\\n  <div class=\\\"col-1\\\"></div>\\n  <div class=\\\"col-10\\\">\\n    <div class=\\\"card mx-auto my-5 shadow\\\">\\n      <!--header-->\\n      <div class=\\\"card-header h5 bg-transparent d-flex justify-content-between border-warning p-0\\\">\\n        <div class=\\\"col-md-6 font-weight-light text-center pointer-cursor align-self-center border-right btn-outline-warning py-3\\\"\\n          data-toggle=\\\"collapse\\\" href=\\\"#collapseNewSearch\\\"\\n          [ngClass]=\\\"{'active':newSearchCollapsed === true}\\\"\\n          role=\\\"button\\\" aria-expanded=\\\"false\\\"\\n          aria-controls=\\\"collapseNewSearch\\\" (click)=\\\"recentRequestCollapsed=false\\\" (click)=\\\"newSearchCollapsed=true\\\">\\n          {{'search.newSearch' | translate }}\\n        </div>\\n        <div class=\\\"col-md-6 font-weight-light text-center pointer-cursor btn-outline-warning py-3\\\"\\n            [ngClass]=\\\"{'active':recentRequestCollapsed === true}\\\"\\n            data-toggle=\\\"collapse\\\" href=\\\"#collapseRecentSearches\\\"\\n            role=\\\"button\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseRecentSearches\\\"\\n            (click)=\\\"newSearchCollapsed=false\\\" (click)=\\\"recentRequestCollapsed=true\\\">\\n            {{'search.recentSearches' | translate }}\\n        </div>\\n      </div><!--header-->\\n\\n      <!--new search area-->\\n      <div *ngIf=\\\"newSearchCollapsed\\\" class=\\\"card-body\\\" id=\\\"collapseNewSearch\\\">\\n        <form class=\\\"\\\" [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"newSearchSave()\\\" novalidate>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label for=\\\"searchFormOffer\\\">{{'search.offer' | translate }}:*</label>\\n              <ng-multiselect-dropdown  class=\\\"form-control shadow-sm\\\" id=\\\"searchFormOffer\\\" #searchFormOffer=\\\"ngModel\\\"\\n                [placeholder]=\\\"'search.offer' | translate\\\"\\n                [data]=\\\"offers\\\"\\n                [(ngModel)]=\\\"selectedOffer\\\" [ngModelOptions]=\\\"{ standalone : true }\\\"\\n                [settings]=\\\"selectOnlyOneSettings\\\" required>\\n              </ng-multiselect-dropdown>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 form-group\\\">\\n              <label for=\\\"searchFormCity\\\">{{'search.city' | translate }}</label>\\n              <ng-multiselect-dropdown  class=\\\"form-control shadow-sm\\\" id=\\\"searchFormCity\\\" #searchFormCity=\\\"ngModel\\\"\\n                [placeholder]=\\\"'register.pleaseChoose' | translate\\\"\\n                [data]=\\\"cities\\\"\\n                [(ngModel)]=\\\"selectedCity\\\" [ngModelOptions]=\\\"{ standalone : true }\\\"\\n                [settings]=\\\"selectOnlyOneSettings\\\">\\n              </ng-multiselect-dropdown>\\n            </div>\\n            <div class=\\\"col-md-6 form-group\\\">\\n              <label for=\\\"searchFormSex\\\">{{'register.sex' | translate }}:</label>\\n              <ng-multiselect-dropdown  class=\\\"form-control shadow-sm\\\" id=\\\"searchFormSex\\\" #searchFormSex=\\\"ngModel\\\"\\n                [placeholder]=\\\"'register.pleaseChoose' | translate\\\"\\n                [data]=\\\"sexes\\\"\\n                [(ngModel)]=\\\"selectedSex\\\" [ngModelOptions]=\\\"{ standalone : true }\\\"\\n                [settings]=\\\"selectSexSettings\\\">\\n              </ng-multiselect-dropdown>\\n            </div>\\n            </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 form-group\\\">\\n                <label>{{'search.minAge' | translate }}</label>\\n                <input type=\\\"number\\\" class=\\\"form-control shadow-sm\\\" id=\\\"searchFormMinAge\\\" formControlName=\\\"searchFormMinAge\\\" placeholder=\\\"{{'search.minAge' | translate }}\\\">\\n            </div>\\n            <div class=\\\"col-md-6 form-group\\\">\\n                <label>{{'search.maxAge' | translate }}</label>\\n                <input type=\\\"number\\\" class=\\\"form-control shadow-sm\\\" id=\\\"searchFormMaxAge\\\" formControlName=\\\"searchFormMaxAge\\\" placeholder=\\\"{{'search.maxAge' | translate }}\\\">\\n            </div>\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"searchFormOffer.errors && (searchFormOffer.touched || searchFormOffer.dirty)\\\">\\n            <div *ngIf=\\\"searchFormOffer.errors.required\\\" class=\\\"alert-danger\\\">{{'validators.minOffers' | translate }}</div>\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"searchFormMinAge.value > searchFormMaxAge.value && searchFormMaxAge.touched\\\">\\n            {{'validators.ageMismatch' | translate }}\\n          </div>\\n\\n          <div class=\\\"row\\\" role=\\\"toolbar\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <button type=\\\"button\\\" type=\\\"submit\\\" class=\\\"btn btn-warning d-flex mx-auto ml-md-auto mt-2\\\"\\n                      [disabled]=\\\"!searchFormOffer.valid || (searchFormMinAge.value > searchFormMaxAge.value  && searchFormMaxAge.touched)\\\">\\n                      {{'search.searchButton' | translate }}\\n              </button>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n              <button type=\\\"button\\\" [routerLink]=\\\"['/home']\\\" class=\\\"btn btn-outline-warning d-flex mx-auto mr-md-auto mt-2\\\" >{{'register.quitButton' | translate }}</button>\\n            </div>\\n          </div>\\n\\n        </form>\\n      </div>\\n\\n      <!--recent searchrequests area-->\\n      <div *ngIf=\\\"recentRequestCollapsed\\\" class=\\\"card-body collapse\\\" id=\\\"collapseRecentSearches\\\">\\n        <div *ngFor=\\\"let request of recentSearchRequests$ | async\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n              <a class=\\\"pointer-cursor\\\" (click)=\\\"useRecentSearchrequest(request.id)\\\">\\n                <h5 class=\\\"font-weight-light\\\">{{request.offerParam}}</h5>\\n                <h6 class=\\\"font-weight-light\\\">{{request.minAgeParam}} - {{request.maxAgeParam}} Jahre </h6>\\n                <h6 class=\\\"font-weight-light\\\">{{request.sexParam}}</h6>\\n              </a>\\n            </div>\\n          </div>\\n        </div><!--ngfor-->\\n      </div><!--recent searchrequests-->\\n\\n    </div>\\n  </div><!--col-10-->\\n  <div class=\\\"col-1\\\"></div>\\n</div>\\n<app-result-page *ngIf=\\\"router.url === '/search/result'\\\"></app-result-page>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2VhcmNoLXBhZ2Uvc2VhcmNoLXBhZ2UuY29tcG9uZW50LnNjc3MifQ== */\"","import { AuthService } from './../../services/auth.service';\nimport { Searchrequest } from './../../models/searchrequest';\nimport { ActivitiesOffersCitiesStoreService } from './../../services/activities-offers-cities-store.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, AbstractControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { SearchService } from 'src/app/services/search.service';\nimport { first } from 'rxjs/operators';\nimport { DocumentReference } from '@angular/fire/firestore';\n\n@Component({\n  selector: 'app-search-page',\n  templateUrl: './search-page.component.html',\n  styleUrls: ['./search-page.component.scss']\n})\nexport class SearchPageComponent implements OnInit {\n\n  searchForm: FormGroup;\n\n  // where the data for the select fields comes from\n  sexes = ['female', 'male', 'both'];\n  offers: string[];\n  cities: string[];\n\n  // where the selected data will be saved\n  selectedOffer: string;\n  selectedCity: string;\n  selectedSex: string;\n\n  // settings for select fields\n  selectOnlyOneSettings = {};\n  selectSexSettings = {};\n\n  recentSearchrequests: Searchrequest[];\n\n  recentSearchRequests$;\n\n  // getting active & collapsed state\n  newSearchCollapsed = true;\n  recentRequestCollapsed = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private activitiesOffersCitiesStoreService: ActivitiesOffersCitiesStoreService,\n    private searchService: SearchService,\n    private authService: AuthService\n  ) {\n    this.searchForm = this.createSearchForm();\n  }\n\n  ngOnInit() {\n    // initialzie all available offers & cities\n    this.offers = this.activitiesOffersCitiesStoreService.getAllOffers();\n    this.cities = this.activitiesOffersCitiesStoreService.getAllCities();\n\n    this.initializeMultiselectSettings();\n\n    // tslint:disable-next-line:max-line-length\n    // this.searchService.getRecentSearchrequestsForSpecificUser(this.authService.currentUserID)\n    // .subscribe((requests: Searchrequest[]) => {\n    //   this.recentSearchrequests = requests;\n    // });\n    this.recentSearchRequests$ = this.searchService.getRecentSearchRequests();\n  }\n\n  createSearchForm() {\n    // create the formGroup\n    return this.formBuilder.group({\n      searchFormMinAge: [''],\n\n      searchFormMaxAge: ['']\n    }, { validator: this.ageCheckValidator });\n  }\n\n  initializeMultiselectSettings() {\n    this.selectOnlyOneSettings = {\n      singleSelection: true,\n      idField: 'item_id',\n      textField: 'item_text',\n      enableCheckAll: false,\n      allowSearchFilter: true,\n      closeDropDownOnSelection: true\n    };\n\n    this.selectSexSettings = {\n      singleSelection: true,\n      idField: 'item_id',\n      textField: 'item_text',\n      enableCheckAll: false,\n      allowSearchFilter: false,\n      closeDropDownOnSelection: true,\n    };\n  }\n\n  ageCheckValidator(control: AbstractControl): { invalid: boolean } {\n    if (control.get('searchFormMinAge').value > control.get('searchFormMaxAge').value) {\n      return { invalid: true };\n    }\n  }\n\n  newSearchSave() {\n\n    const searchdata = {\n      offerParam: this.selectedOffer[0],\n      cityParam: this.selectedCity[0],\n      sexParam: this.parseSexValueForBackend(this.selectedSex[0]),\n      minAgeParam: this.searchForm.value.searchFormMinAge,\n      maxAgeParam: this.searchForm.value.searchFormMaxAge,\n      createdAt: Date.now(),\n      uid: this.authService.currentUserID\n    };\n\n    this.searchService.createSearchrequest(searchdata)\n      .subscribe(response => {\n        this.router.navigate([`/search/result/${response.id}`]);\n      });\n  }\n\n  useRecentSearchrequest(searchRequestId) {\n    this.router.navigate([`/search/result/${searchRequestId}`]);\n  }\n\n  // shorten the male/female-word and return one letter or 'no choice'\n  parseSexValueForBackend(sex: string): string {\n    if (sex === 'male' || sex === 'männlich') {\n      return 'm';\n    } else if (sex === 'female' || sex === 'weiblich') {\n      return 'f';\n    } else if (sex === 'both' || sex === 'egal') {\n      return 'b';\n    } else {\n      return 'there was no choice of sex';\n    }\n  }\n\n  get searchFormMinAge() {\n    return this.searchForm.get('searchFormMinAge');\n  }\n\n  get searchFormMaxAge() {\n    return this.searchForm.get('searchFormMaxAge');\n  }\n\n}\n","export class Match {\n  constructor(\n    public initiatorID: string,\n    public partnerID: string,\n    public matchedOffer: string,\n    public accepted: boolean\n  ) {}\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActivitiesOffersCitiesStoreService {\n\n  offers = ['spanisch', 'kochen'];\n  activities = ['kochen', 'turnen', 'schwimmen', 'rudern'];\n  cities = ['Hamburg', 'Berlin', 'München', 'Hannover'];\n\n  constructor() { }\n\n  getAllOffers() {\n    return this.offers;\n  }\n\n  getAllActivities() {\n    return this.activities;\n  }\n\n  getAllCities() {\n    return this.cities;\n  }\n}\n","import { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  async canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n    ): Promise<boolean> {\n    const user = await this.authService.getCurrentUser();\n    // console.log('Auth Guard');\n    // console.log(user);\n    if (!user) {\n      this.router.navigate(['/']);\n    }\n    return !!user;\n  }\n}\n","import { UserStoreService } from 'src/app/services/user-store.service';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\nimport { Observable, of } from 'rxjs';\nimport { switchMap, first } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  user$: Observable<any>;\n  currentUserID: string;\n  currentUsername: string;\n\n  isLoggedIn = false;\n  // store the URL so we can redirect after logging in\n  redirectUrl: string;\n\n  constructor(\n    private angularFireAuth: AngularFireAuth,\n    private angularFirestore: AngularFirestore,\n    private router: Router) {\n\n      this.user$ = this.angularFireAuth.authState.pipe(\n        switchMap(user => {\n          if (user) {\n            this.currentUserID = user.uid;\n            this.currentUsername = user.displayName;\n            return this.angularFirestore.doc<any>(`users/${user.uid}`).valueChanges();\n          } else {\n            return of(null);\n          }\n        })\n      );\n  }\n\n  isloggedIn(): boolean {\n    const user = this.angularFireAuth.auth.currentUser;\n    // console.log(this.user$);\n    if (user) {\n      return this.isLoggedIn = true;\n    } else {\n      return this.isLoggedIn = false;\n    }\n  }\n\n  getCurrentUser() {\n    return this.user$.pipe(first()).toPromise();\n  }\n\n  getCurrentUsername() {\n    return this.currentUsername;\n  }\n  async logout() {\n    await this.angularFireAuth.auth.signOut();\n    this.isLoggedIn = false;\n    localStorage.removeItem('user');\n    this.router.navigate(['/login']);\n  }\n\n  async login(mail: string, password: string) {\n    try {\n      await this.angularFireAuth.auth.signInWithEmailAndPassword(mail, password);\n      this.isLoggedIn = true;\n      this.router.navigate(['/home']);\n    } catch (error) {\n      alert('Not able to sign in!' + error.message);\n    }\n  }\n}\n","import { IdResponse } from '../models/idResponse';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, switchMap } from 'rxjs/operators';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n\n  // TODO change if using over web\n  private apiUrl = 'https://us-central1-livechattandem.cloudfunctions.net/chatrooms';\n  // private apiUrl2 = 'http://localhost:5000/livechattandem/us-central1/chatrooms';\n  private apiUrl2 = 'https://us-central1-livechattandem.cloudfunctions.net/chatrooms';\n  private headers: Headers = new Headers();\n\n  constructor(\n    private authService: AuthService,\n    private angularFirestore: AngularFirestore,\n    private http: HttpClient,\n  ) {\n    this.headers.append('Content-Type', 'application/json');\n  }\n\n  // Create a new chatroom by calling the corresponding endpoint.\n  create(userA, userB) {\n    const data = {\n      userA,\n      userB,\n      updated: Date.now(),\n      messages: []\n    };\n    return this.http.post<IdResponse>(`${this.apiUrl2}`, data);\n  }\n\n  // Send a message to the Cloud Firestore database by valling the corresponding endpoint.\n  sendMessage(chatroomId, content) {\n    const uid = this.authService.currentUserID;\n    const data = {\n      uid,\n      content,\n      createdAt: Date.now()\n    };\n    return this.http.put(`${this.apiUrl2}/${chatroomId}`, data);\n  }\n\n  // Get all chatrooms of the current user and return it as an observable array with realtime changes.\n  getAllChatrooms() {\n    const resultA = this.queryChatrooms('userA');\n\n    const resultB = this.queryChatrooms('userB');\n\n    return combineLatest(resultA, resultB).pipe(\n      map(([users, otherUsers]) => users.concat(otherUsers)));\n  }\n\n  // Query chatrooms by field name.\n  private queryChatrooms(fieldName) {\n    return this.authService.user$.pipe(\n      switchMap(user => {\n        return this.angularFirestore\n          .collection('chatrooms', ref => ref.where(fieldName, '==', user ? user.uid : ''))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data();\n                const id = a.payload.doc.id;\n                return { id, ...data };\n              });\n            })\n          );\n      })\n    );\n  }\n\n  // Get an chatroom by it's doc-id and return it as an observable with realtime changes.\n  getChatroomById(chatroomId: string) {\n    return this.angularFirestore\n      .collection<any>(`chatrooms`)\n      .doc(chatroomId)\n      .snapshotChanges()\n      .pipe(\n        map(doc => {\n          return { id: doc.payload.id, ...doc.payload.data() };\n        })\n      );\n  }\n\n  // Get the corresponding user to every message as an observable with realtime changes.\n  joinUsers(chat$: Observable<any>) {\n    let chat;\n    const joinKeys = {};\n\n    return chat$.pipe(\n      switchMap(c => {\n        // Unique User IDs\n        chat = c;\n        const uids = Array.from(new Set(c.messages.map(value => value.uid)));\n        // Firestore User Doc Reads\n        const userDocs = uids.map(u =>\n          this.angularFirestore.doc(`users/${u}`).valueChanges()\n        );\n\n        return userDocs.length ? combineLatest(userDocs) : of([]);\n      }),\n      map(array => {\n        array.forEach(v => (joinKeys[(v as any).uid] = v));\n        chat.messages = chat.messages.map(v => {\n          return { ...v, user: joinKeys[v.uid] };\n        });\n\n        return chat;\n      })\n    );\n  }\n\n  deleteChatroom(chatroomId: string) {\n    return this.http.delete(`${this.apiUrl}/${chatroomId}`);\n  }\n\n}\n","import { AngularFirestore } from '@angular/fire/firestore';\nimport { Match } from './../models/match';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { switchMap, map } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { combineLatest } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchStoreService {\n\n  // private apiUrl = 'http://localhost:5000/livechattandem/us-central1';\n  private apiUrl = 'https://us-central1-livechattandem.cloudfunctions.net';\n\n\n  constructor(\n    private http: HttpClient,\n    private angularFirestore: AngularFirestore,\n    private authService: AuthService) {\n  }\n\n  createMatch(match: Match) {\n    return this.http.post(`${this.apiUrl}/matches/`, match);\n  }\n\n  getAllUnAcceptedMatches() {\n    return this.queryMatches('partnerID', false);\n  }\n\n  getAllAcceptedMatches() {\n    const resultA = this.queryMatches('partnerID', true);\n    const resultB = this.queryMatches('initiatorID', true);\n\n    return combineLatest(resultA, resultB).pipe(\n      map(([users, otherUsers]) => users.concat(otherUsers)));\n  }\n\n  getAllMatchrequests() {\n    return this.queryMatches('initiatorID', false);\n  }\n\n  private queryMatches(fieldNameOfRole, boolValueOfAccepted) {\n    return this.authService.user$.pipe(\n      switchMap(user => {\n        return this.angularFirestore\n          .collection('matches', ref => ref.where(fieldNameOfRole, '==', user ? user.uid : '')\n            .where('accepted', '==', boolValueOfAccepted))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data() as Match;\n                const id = a.payload.doc.id;\n                return { id, ...data };\n              });\n            })\n          );\n      })\n    );\n  }\n\n  updateMatch(matchId: string, data: any) {\n    return this.http.put(`${this.apiUrl}/matches/${matchId}`, data);\n  }\n\n  deleteMatch(matchId: string) {\n    return this.http.delete(`${this.apiUrl}/matches/${matchId}`);\n  }\n}\n","import { MatchStoreService } from './match-store.service';\nimport { Searchrequest } from './../models/searchrequest';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { collection } from 'rxfire/firestore';\nimport { map, switchMap, filter } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\nimport { User } from '../models/user';\nimport { IdResponse } from '../models/idResponse';\nimport { combineLatest, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n\n  // private apiUrl = 'http://localhost:5000/livechattandem/us-central1';\n  private apiUrl = 'https://us-central1-livechattandem.cloudfunctions.net';\n  private headers: Headers = new Headers();\n\n  constructor(\n    private http: HttpClient,\n    private angularFirestore: AngularFirestore,\n    private authService: AuthService,\n    private matchStoreService: MatchStoreService\n  ) {\n    this.headers.append('Content-Type', 'application/json');\n  }\n\n  createSearchrequest(searchdata: any) {\n    return this.http.post<IdResponse>(`${this.apiUrl}/searches/`, searchdata);\n  }\n\n  getRecentSearchRequests() {\n    return this.angularFirestore\n      .collection(`users/${this.authService.currentUserID}/searches`)\n      .snapshotChanges()\n      .pipe(\n        map(actions => {\n          return actions.map(a => {\n            const data = a.payload.doc.data();\n            const id = a.payload.doc.id;\n            return { id, ...data };\n          });\n        })\n      );\n  }\n\n  getSearchRequestById(searchRequestId) {\n    return this.angularFirestore\n      .collection<any>('users')\n      .doc<User>(this.authService.currentUserID)\n      .collection('searches')\n      .doc<Searchrequest>(searchRequestId).valueChanges();\n  }\n\n  getSearchResult(searchRequest: Searchrequest) {\n    return this.getUsersToBeExcludedArray().pipe(\n      switchMap(userArray => {\n        return this.angularFirestore\n          .collection<any>('users', ref => ref.where('offers', 'array-contains', searchRequest.offerParam)\n            .where('city', '==', searchRequest.cityParam)\n            .where('sex', '==', searchRequest.sexParam))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data() as User;\n                return { ...data };\n              });\n            }),\n            map(users => {\n              const filteredUsers: User[] = [];\n              users.map(user => {\n                if (userArray.includes(user.uid) === false) {\n                  filteredUsers.push(user);\n                }\n              });\n              return filteredUsers;\n            })\n          );\n      })\n    );\n  }\n\n  getUsersToBeExcludedArray() {\n    const allAcceptedMatches = this.matchStoreService.getAllAcceptedMatches().pipe(\n      map(matches => {\n        const userArray: string[] = [];\n        matches.map(match => {\n          userArray.push(match.initiatorID);\n          userArray.push(match.partnerID);\n        });\n        return userArray;\n      })\n    );\n\n    const allUnAcceptedMatches = this.matchStoreService.getAllUnAcceptedMatches().pipe(\n      map(matches => {\n        const userArray: string[] = [];\n        matches.map(match => {\n          userArray.push(match.initiatorID);\n          userArray.push(match.partnerID);\n        });\n        return userArray;\n      })\n    );\n\n    const matchRequests = this.matchStoreService.getAllMatchrequests().pipe(\n      map(matches => {\n        const userArray: string[] = [];\n        matches.map(match => {\n          userArray.push(match.initiatorID);\n          userArray.push(match.partnerID);\n        });\n        return userArray;\n      })\n    );\n\n    const resultA = combineLatest(allAcceptedMatches, allUnAcceptedMatches).pipe(\n      map(([acceptedUser, unAcceptedUser]) => acceptedUser.concat(unAcceptedUser))\n    );\n\n    return combineLatest(resultA, matchRequests).pipe(\n      map(([resultAUser, matchRequestUser]) => resultAUser.concat(matchRequestUser))\n    );\n\n  }\n}\n","import { AngularFirestore } from '@angular/fire/firestore';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../models/user';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserStoreService {\n\n  // private apiUrl = 'http://localhost:5000/livechattandem/us-central1';\n  private apiUrl = 'https://us-central1-livechattandem.cloudfunctions.net';\n  private headers: Headers = new Headers();\n\n  constructor(\n    private http: HttpClient,\n    private angularFirestore: AngularFirestore) {\n    this.headers.append('Content-Type', 'application/json');\n   }\n\n   getAllUsers() {\n     return this.http.get(`${this.apiUrl}/users`);\n   }\n\n   getUserById(uid) {\n    return this.angularFirestore\n    .collection<any>(`users`)\n    .doc<User>(uid).valueChanges();\n   }\n\n   createUser(user: any) {\n    // generate new API-User\n    const data = {\n      firstname: user.firstname,\n      lastname: user.lastname,\n      dateOfBirth: user.dateOfBirth,\n      sex: user.sex,\n      city: user.city,\n      activities: user.activities,\n      offers: user.offers,\n      mail: user.mail,\n      password: user.password\n    };\n\n    return this.http.post(`${this.apiUrl}/users/`, data);\n  }\n\n   updateUser(id: any, user: any) {\n    const data = {\n      uid: id,\n      firstname: user.firstname,\n      lastname: user.lastname,\n      dateOfBirth: user.dateOfBirth,\n      sex: user.sex,\n      city: user.city,\n      activities: user.activities,\n      offers: user.offers,\n      mail: user.mail,\n      password: user.password\n    };\n\n    return this.http.put(`${this.apiUrl}/users/${id}`, data);\n  }\n\n  public deleteUser(id: string) {\n    return this.http.delete(`${this.apiUrl}/users/${id}`);\n  }\n\n  // private errorHandler(error: Error | any) {\n  //   return Observable.throw(error);\n  // }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyA60SCLQd6f7KOT_UmUml5RgMnAC3F5E_A',\n    projectId: 'livechattandem'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}