{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/about-page/about-page.component.html","webpack:///./src/app/components/about-page/about-page.component.scss","webpack:///./src/app/components/about-page/about-page.component.ts","webpack:///./src/app/components/chatroom-item/chatroom-item.component.html","webpack:///./src/app/components/chatroom-item/chatroom-item.component.scss","webpack:///./src/app/components/chatroom-item/chatroom-item.component.ts","webpack:///./src/app/components/chatroom-list/chatroom-list.component.html","webpack:///./src/app/components/chatroom-list/chatroom-list.component.scss","webpack:///./src/app/components/chatroom-list/chatroom-list.component.ts","webpack:///./src/app/components/error-page/error-page.component.html","webpack:///./src/app/components/error-page/error-page.component.scss","webpack:///./src/app/components/error-page/error-page.component.ts","webpack:///./src/app/components/footer/footer.component.html","webpack:///./src/app/components/footer/footer.component.scss","webpack:///./src/app/components/footer/footer.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/impressum-page/impressum-page.component.html","webpack:///./src/app/components/impressum-page/impressum-page.component.scss","webpack:///./src/app/components/impressum-page/impressum-page.component.ts","webpack:///./src/app/components/login-page/login-page.component.html","webpack:///./src/app/components/login-page/login-page.component.scss","webpack:///./src/app/components/login-page/login-page.component.ts","webpack:///./src/app/components/match-list/match-list.component.html","webpack:///./src/app/components/match-list/match-list.component.scss","webpack:///./src/app/components/match-list/match-list.component.ts","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.scss","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile-page/profile-page.component.html","webpack:///./src/app/components/profile-page/profile-page.component.scss","webpack:///./src/app/components/profile-page/profile-page.component.ts","webpack:///./src/app/components/register-page/register-page.component.css","webpack:///./src/app/components/register-page/register-page.component.html","webpack:///./src/app/components/register-page/register-page.component.ts","webpack:///./src/app/components/result-page/result-page.component.html","webpack:///./src/app/components/result-page/result-page.component.scss","webpack:///./src/app/components/result-page/result-page.component.ts","webpack:///./src/app/components/search-page/search-page.component.html","webpack:///./src/app/components/search-page/search-page.component.scss","webpack:///./src/app/components/search-page/search-page.component.ts","webpack:///./src/app/models/match.ts","webpack:///./src/app/pipes/sort.pipe.ts","webpack:///./src/app/services/auth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/chat.service.ts","webpack:///./src/app/services/match-store.service.ts","webpack:///./src/app/services/search.service.ts","webpack:///./src/app/services/user-store.service.ts","webpack:///./src/app/services/utility-store.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { AuthGuard } from './services/auth.guard';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RegisterPageComponent } from './components/register-page/register-page.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { AboutPageComponent } from './components/about-page/about-page.component';\nimport { SearchPageComponent } from './components/search-page/search-page.component';\nimport { ChatroomListComponent } from './components/chatroom-list/chatroom-list.component';\nimport { ChatroomItemComponent } from './components/chatroom-item/chatroom-item.component';\nimport { LoginPageComponent } from './components/login-page/login-page.component';\nimport { MatchListComponent } from './components/match-list/match-list.component';\nimport { ProfilePageComponent } from './components/profile-page/profile-page.component';\nimport { ResultPageComponent } from './components/result-page/result-page.component';\nimport { ImpressumPageComponent } from './components/impressum-page/impressum-page.component';\nimport { ErrorPageComponent } from './components/error-page/error-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/login',\n    pathMatch: 'full'\n  },\n  {\n    path: 'login',\n    component: LoginPageComponent\n  },\n  {\n    path: 'register',\n    component: RegisterPageComponent\n  },\n  {\n    path: 'home',\n    component: HomeComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'matches',\n    component: MatchListComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'chats',\n    component: ChatroomListComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'chats/:id',\n    component: ChatroomItemComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'profile',\n    component: ProfilePageComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'search',\n    component: SearchPageComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'result/:id',\n    component: ResultPageComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'impressum',\n    component: ImpressumPageComponent\n  },\n  {\n    path: 'about',\n    component: AboutPageComponent\n  },\n  {\n    path: '**',\n    component: ErrorPageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<div class=\\\"footer-wrap\\\">\\n<app-navbar></app-navbar>\\n<div class=\\\"container container-wrap\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n<app-footer></app-footer>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { UtilityStoreService } from './services/utility-store.service';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'tandem-frontend';\n\n  constructor(\n    private utilitiesService: UtilityStoreService\n  ) {\n\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\n// components\nimport { RegisterPageComponent } from './components/register-page/register-page.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginPageComponent } from './components/login-page/login-page.component';\nimport { MatchListComponent } from './components/match-list/match-list.component';\nimport { ChatroomListComponent } from './components/chatroom-list/chatroom-list.component';\nimport { ChatroomItemComponent } from './components/chatroom-item/chatroom-item.component';\nimport { ProfilePageComponent } from './components/profile-page/profile-page.component';\nimport { SearchPageComponent } from './components/search-page/search-page.component';\nimport { ResultPageComponent } from './components/result-page/result-page.component';\nimport { ImpressumPageComponent } from './components/impressum-page/impressum-page.component';\nimport { AboutPageComponent } from './components/about-page/about-page.component';\nimport { ErrorPageComponent } from './components/error-page/error-page.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\n\n// services\nimport { AuthService } from './services/auth.service';\nimport { AuthGuard } from './services/auth.guard';\nimport { UserStoreService } from './services/user-store.service';\nimport { MatchStoreService } from './services/match-store.service';\nimport { UtilityStoreService } from './services/utility-store.service';\nimport { SearchService } from './services/search.service';\nimport { ChatService } from './services/chat.service';\n\n// imports for firebase\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFirestoreModule, FirestoreSettingsToken } from '@angular/fire/firestore';\nimport { environment } from '../environments/environment';\nimport { SortPipe } from './pipes/sort.pipe';\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http);\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterPageComponent,\n    HomeComponent,\n    LoginPageComponent,\n    MatchListComponent,\n    ChatroomListComponent,\n    ChatroomItemComponent,\n    ProfilePageComponent,\n    SearchPageComponent,\n    ResultPageComponent,\n    ImpressumPageComponent,\n    AboutPageComponent,\n    ErrorPageComponent,\n    FooterComponent,\n    NavbarComponent,\n    SortPipe\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }),\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    AngularFirestoreModule,\n    FontAwesomeModule,\n    NgxPaginationModule,\n    NgMultiSelectDropDownModule.forRoot(),\n    FormsModule,\n    BsDatepickerModule.forRoot()\n  ],\n  providers: [\n    UserStoreService,\n    AuthService,\n    AuthGuard,\n    MatchStoreService,\n    UtilityStoreService,\n    ChatService,\n    SearchService,\n    { provide: FirestoreSettingsToken, useValue: {} } // To solve the timestampInSnapshot-Error\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"row mt-4\\\">\\n  <div class=\\\"col-1\\\"></div>\\n  <div class=\\\"col-12 col-md-10\\\">\\n    <div class=\\\"card m-4 text-center shadow-sm\\\">\\n\\n      <h1 class=\\\"card-title font-weight-light mt-2\\\">{{ 'about.heading' | translate }}</h1>\\n      <hr class=\\\"my-1 border-warning\\\">\\n      <div class=\\\"card-body\\\">\\n        <blockquote class=\\\"blockquote mb-0\\\">\\n          <p>{{ 'about.blockquote' | translate }}</p>\\n          <footer class=\\\"blockquote-footer\\\">Benjamin Fanklin</footer>\\n        </blockquote>\\n\\n        <br />\\n        <div class=\\\"card-text\\\">\\n          {{ 'about.explanation' | translate }}\\n        </div>\\n\\n      </div>\\n\\n\\n      <br />\\n      <img src=\\\"../../../assets/images/Team-Foto.jpg\\\" class=\\\"card-img-top\\\" alt=\\\"...\\\">\\n      <div class=\\\"card-body\\\">\\n        <p class=\\\"card-text\\\">{{ 'about.imageExplanation' | translate }}<br />\\n          Arne, Eric, Pascal, Joe und Luis</p>\\n      </div>\\n\\n    </div>\\n  </div>\\n  <div class=\\\"col-1\\\"></div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWJvdXQtcGFnZS9hYm91dC1wYWdlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about-page',\n  templateUrl: './about-page.component.html',\n  styleUrls: ['./about-page.component.scss']\n})\nexport class AboutPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"row mt-4\\\">\\n  <div class=\\\"col-1\\\"></div>\\n  <div class=\\\"col-12\\\">\\n    <ng-container *ngIf=\\\"chatroom$ | async as chat\\\">\\n      <ng-container *ngIf=\\\" authService.user$ | async as user\\\">\\n\\n        <div #chatBox class=\\\"card shadow mb-2\\\">\\n          <div class=\\\"card-body\\\">\\n            <div *ngFor=\\\"let message of chat.messages; trackBy: trackByCreated\\\"><!-- TODO trackBy seems not working.-->\\n              <div *ngIf=\\\"message.user?.uid !== authService.currentUserID; else positionRight\\\" class=\\\"card col-10 col-md-8 shadow-sm mb-3\\\" role=\\\"alert\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\"\\n                data-autohide=\\\"false\\\">\\n\\n\\n                <div class=\\\"toast-header border-info\\\">\\n                  <strong class=\\\"mr-auto\\\">{{ message.user?.firstname }}</strong>\\n                  <small class=\\\"text-muted\\\">{{ message.createdAt | date: 'dd.MM.yyyy' }}</small>\\n                </div>\\n                <div class=\\\"toast-body small\\\">\\n                  {{ message.content }}\\n                </div>\\n              </div><!--ngif message.user.uid !== currentUserID-->\\n              <ng-template #positionRight>\\n                <div class=\\\"card col-10 offset-2 col-md-8 offset-md-4 shadow-sm mb-3\\\" role=\\\"alert\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\"\\n                data-autohide=\\\"false\\\">\\n\\n\\n                <div class=\\\"toast-header border-warning\\\">\\n                  <strong class=\\\"mr-auto\\\">{{ 'chatroomItem.currentUser' | translate }}</strong>\\n                  <small class=\\\"text-muted\\\">{{ message.createdAt | date: 'dd.MM.yyyy' }}</small>\\n                </div>\\n                <div class=\\\"toast-body small\\\">\\n                  {{ message.content }}\\n                </div>\\n              </div>\\n              </ng-template>\\n            </div>\\n          </div>\\n\\n\\n        <form>\\n          <div class=\\\"form-row mb-3 mx-3\\\">\\n\\n            <div class=\\\"col-md-8 offset-md-4\\\">\\n              <div class=\\\"input-group\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newMessage\\\" name=\\\"messageInput\\\" maxlength=\\\"100\\\"\\n                  (keydown.enter)=\\\"submit(chat.id)\\\" placeholder=\\\"{{ 'chatroomItem.inputPlaceholder' | translate }}\\\" autofocus>\\n                <div class=\\\"input-group-append ml-2\\\">\\n                    <button class=\\\"btn btn-outline-warning\\\" type=\\\"button\\\" (click)=\\\"submit(chat.id)\\\"\\n                    [disabled]=\\\"!newMessage\\\">\\n                    <fa-icon [icon]=\\\"faReply\\\"></fa-icon>\\n                  </button>\\n                </div>\\n              </div>\\n\\n            </div>\\n\\n          </div>\\n        </form>\\n      </div>\\n\\n      </ng-container>\\n    </ng-container>\\n  </div>\\n  <div class=\\\"col-1\\\"></div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2hhdHJvb20taXRlbS9jaGF0cm9vbS1pdGVtLmNvbXBvbmVudC5zY3NzIn0= */\"","import { AuthService } from 'src/app/services/auth.service';\nimport { ChatService } from './../../services/chat.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { faReply } from '@fortawesome/free-solid-svg-icons';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-chatroom-item',\n  templateUrl: './chatroom-item.component.html',\n  styleUrls: ['./chatroom-item.component.scss']\n})\nexport class ChatroomItemComponent implements OnInit {\n\n  chatroom$: Observable<any>;\n  newMessage: string;\n\n  faReply = faReply;\n\n  constructor(\n    public chatService: ChatService,\n    private route: ActivatedRoute,\n    public authService: AuthService\n  ) { }\n\n  ngOnInit() {\n    const chatroomId = this.route.snapshot.paramMap.get(`id`);\n    const source = this.chatService.getChatroomById(chatroomId);\n    this.chatroom$ = this.chatService.joinUsers(source);\n  }\n\n  submit(chatId) {\n    if (!this.newMessage) {\n      return alert('you need to enter something');\n    }\n    this.chatService.sendMessage(chatId, this.newMessage)\n    .subscribe();\n    this.newMessage = ``;\n    setTimeout(() => window.scrollTo(0, document.body.scrollHeight), 500);\n  }\n\n  trackByCreated(message) {\n    return message.createdAt;\n  }\n\n}\n","module.exports = \"<div class=\\\"row mt-4\\\">\\n  <div class=\\\"col-1\\\"></div>\\n  <div class=\\\"col-10\\\">\\n    <div class=\\\"card shadow my-3\\\" *ngFor=\\\"let chatroom of userChatsAsUserA$\\\">\\n      <div class=\\\"card-body py-2 accepted-match-cards\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-10\\\">\\n            <!-- TODO map the userA or userB (depending on the currentUser) to a modal to display profile pic and name  -->\\n            <a [routerLink]=\\\"chatroom.id\\\">\\n              <span class=\\\"text-decoration-none text-dark\\\">{{ chatroom.firstname }} {{ chatroom.lastname }}</span>\\n              <hr class=\\\"border-warning border-bottom mt-0 mb-1\\\">\\n              <p class=\\\"text-muted mb-0\\\">{{ chatroom.messages.length }} {{'chatroomList.messages' | translate }}</p>\\n            </a>\\n          </div>\\n          <div class=\\\"col-2 d-flex align-items-center justify-content-end\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-danger homebutton\\\" (click)=\\\"openModal(chatroom.id, 'userChatsAsUserA$')\\\"\\n            data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"{{ 'chatroomList.deleteTooltip' | translate }}\\\">\\n              <fa-icon [icon]=\\\"faTimes\\\"></fa-icon>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"card shadow my-3\\\" *ngFor=\\\"let chatroom of userChatsAsUserB$\\\">\\n      <div class=\\\"card-body py-2 accepted-match-cards\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-10\\\">\\n            <!-- TODO map the userA or userB (depending on the currentUser) to a modal to display profile pic and name  -->\\n            <a [routerLink]=\\\"chatroom.id\\\">\\n              <span class=\\\"text-decoration-none text-dark\\\">{{ chatroom.firstname }} {{ chatroom.lastname }}</span>\\n              <hr class=\\\"border-warning border-bottom mt-0 mb-1\\\">\\n              <p class=\\\"text-muted mb-0\\\">{{ chatroom.messages.length }} {{'chatroomList.messages' | translate }}</p>\\n            </a>\\n          </div>\\n          <div class=\\\"col-2 d-flex align-items-center justify-content-end\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-outline-danger homebutton\\\" (click)=\\\"openModal(chatroom.id, 'userChatsAsUserB$')\\\"\\n            data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"{{ 'chatroomList.deleteTooltip' | translate }}\\\">\\n              <fa-icon [icon]=\\\"faTimes\\\"></fa-icon>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n  <div class=\\\"col-1\\\"></div>\\n</div>\\n\\n<!-- Modal -->\\n<div class=\\\"modal-backdrop fade in\\\" [ngStyle]=\\\"{'display':display}\\\"></div>\\n<div *ngIf=\\\"modalIsOpen\\\" class=\\\"modal\\\" [ngStyle]=\\\"{'display': display}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h5 class=\\\"modal-title\\\">{{ 'chatroomList.deleteModalHeader' | translate }}</h5>\\n          <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeModal()\\\" aria-label=\\\"Close\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n          </button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          {{ 'chatroomList.deleteModalQuestion' | translate}}\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-outline-warning\\\" (click)=\\\"deleteChatroom()\\\">{{ 'chatroomList.deleteButton' | translate }}</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"closeModal()\\\">{{ 'register.quitButton' | translate }}</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2hhdHJvb20tbGlzdC9jaGF0cm9vbS1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { UserStoreService } from './../../services/user-store.service';\nimport { ChatService } from './../../services/chat.service';\nimport { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\n\n@Component({\n  selector: 'app-chatroom-list',\n  templateUrl: './chatroom-list.component.html',\n  styleUrls: ['./chatroom-list.component.scss']\n})\nexport class ChatroomListComponent implements OnInit {\n\n  currentUser = this.authService.getCurrentUser();\n  userChatsAsUserA$: any[] = [];\n  userChatsAsUserB$: any[] = [];\n  userChatsAsUserALength: number;\n  userChatsAsUserBLength: number;\n\n  faTimes = faTimes;\n\n  // for modal\n  display = 'none';\n  modalIsOpen = false;\n  roomToBeDeleted: string;\n  chatsArrayName: string;\n\n  constructor(\n    private authService: AuthService,\n    private chatService: ChatService,\n    private router: Router,\n    private userStoreService: UserStoreService\n  ) {\n    this.chatService.getAllChatroomsAsUserA().subscribe(chatrooms => {\n      this.userChatsAsUserALength = chatrooms.length;\n      this.userChatsAsUserA$ = chatrooms;\n    }, error => {\n      console.log('Error in profile-page - TODO delete this console.log() before finishing WebProg!');\n    });\n    this.chatService.getAllChatroomsAsUserB().subscribe(chatrooms => {\n      this.userChatsAsUserBLength = chatrooms.length;\n      this.userChatsAsUserB$ = chatrooms;\n    }, error => {\n      console.log('Error in profile-page - TODO delete this console.log() before finishing WebProg!');\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  // deleteChatroom() {\n  //   this.chatService.deleteChatroom(this.roomToBeDeleted).subscribe(() => {\n  //     if (this.userChatsAsUserALength === 1 || this.userChatsAsUserBLength === 1) {\n  //       this.router.navigateByUrl('/', { skipLocationChange: true }).then(() =>\n  //         this.router.navigate(['/chats']));\n  //     }\n  //   });\n  //   this.closeModal();\n  // }\n\n  // TODO doesn't work properly\n  deleteChatroom() {\n    let indexNumber: number;\n    if (this.chatsArrayName === 'userChatsAsUserA$') {\n      this.chatService.deleteChatroom(this.roomToBeDeleted).subscribe(() => {\n        for (let index = 0; index < this.userChatsAsUserA$.length; index++) {\n          if (this.userChatsAsUserA$[index].id === this.roomToBeDeleted) {\n            indexNumber = index;\n          }\n        }\n        this.userChatsAsUserA$.splice(indexNumber, 1);\n      });\n    } else {\n      this.chatService.deleteChatroom(this.roomToBeDeleted).subscribe(() => {\n        for (let index = 0; index < this.userChatsAsUserB$.length; index++) {\n          if (this.userChatsAsUserB$[index].id === this.roomToBeDeleted) {\n            indexNumber = index;\n          }\n        }\n        this.userChatsAsUserB$.splice(indexNumber, 1);\n      });\n    }\n    this.closeModal();\n  }\n\n  openModal(chatroomId: string, chatsArrayName: string) {\n    console.log('id: ' + chatroomId);\n    this.modalIsOpen = true;\n    this.display = 'block';\n    this.roomToBeDeleted = chatroomId;\n    this.chatsArrayName = chatsArrayName;\n  }\n\n  closeModal() {\n    this.display = 'none';\n    this.modalIsOpen = false;\n  }\n\n}\n","module.exports = \"<div class=\\\"row my-4\\\">\\n  <div class=\\\"col-2\\\"></div>\\n  <div class=\\\"col-8 text-center\\\">\\n    <h1 class=\\\"card-title font-weight-light mt-2\\\">404 - Page not found</h1>\\n    <br />\\n    <img src=\\\"../../../assets/images/404-error.jpg\\\" class=\\\"img-fluid shadow\\\" alt=\\\"image\\\">\\n  </div>\\n  <div class=\\\"col-2\\\"></div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZXJyb3ItcGFnZS9lcnJvci1wYWdlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error-page.component.html',\n  styleUrls: ['./error-page.component.scss']\n})\nexport class ErrorPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<footer class=\\\"footer text-center small border-top absolute-bottom\\\">\\n  <ul class=\\\"nav flex-column\\\">\\n    <li class=\\\"\\\">\\n      <a class=\\\"text-dark\\\" [routerLink]=\\\"['/impressum']\\\">{{'footer.legalDisclosure' | translate }}</a>\\n    </li>\\n    <li class=\\\"\\\">\\n      <a class=\\\"text-dark\\\" [routerLink]=\\\"['/about']\\\">{{'footer.aboutUs' | translate }}</a>\\n    </li>\\n  </ul>\\n  <p> © 2019 | tandemPartner</p>\\n</footer>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h1 class=\\\"text-center font-weight-light mb-3 mt-4\\\">{{ 'home.openMatchrequests' | translate }}</h1>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-1\\\"></div>\\n  <div class=\\\"col-10\\\">\\n    <div *ngIf=\\\"unAcceptedMatchesLength, else elseBlock\\\">\\n      <!-- show all matchRequests which are saved in the Array of 'matchRequests'-->\\n      <div *ngFor=\\\"let match of unAcceptedMatches$ | paginate: { itemsPerPage: 5, currentPage: pageNumber }\\\">\\n        <div class=\\\"card shadow my-3\\\">\\n          <h5 class=\\\"card-header bg-white border-warning font-italic\\\">\\n            {{ 'home.requestTitle' | translate}} {{ parseOfferForFrontend(match.matchedOffer) }}\\n          </h5>\\n          <div class=\\\"card-body accepted-match-cards\\\">\\n            <div class=\\\"card-text\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-8 col-md-10\\\">\\n                  <a class=\\\"pointer-cursor\\\" (click)=\\\"openModal(match)\\\">\\n                    <p class=\\\"my-0\\\"><small>{{ match.firstname }} {{ match.lastname }}</small></p>\\n                    <!-- <p class=\\\"my-0\\\"><small>Age: {{calculateAgeForModal(match.dateOfBirth)}}</small></p> -->\\n                    <p class=\\\"my-0\\\"><small>Aktivitäten: {{activitiesForModal(parseActivitiesForFrontend(match.activities))}}</small></p>\\n                  </a>\\n                </div>\\n                <div class=\\\"col-4 col-md-2 d-flex justify-content-end my-auto\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-success mr-2 homebutton\\\" (click)=\\\"acceptMatch(match.matchId)\\\">\\n                    <fa-icon [icon]=\\\"faCheck\\\"></fa-icon>\\n                  </button>\\n                  <button type=\\\"button\\\" class=\\\"btn btn-outline-danger homebutton\\\" (click)=\\\"declineMatch(match.matchId)\\\">\\n                    <fa-icon [icon]=\\\"faTimes\\\"></fa-icon>\\n                  </button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <!--ngFor-->\\n\\n      <!--controls for pagination, which are only visible at the length of matchRequest-array bigger than 5-->\\n      <pagination-controls autoHide=\\\"true\\\" class=\\\"pagination justify-content-center\\\" (pageChange)=\\\"pageNumber = $event\\\"\\n        previousLabel=\\\"{{'home.previous' | translate }}\\\" nextLabel=\\\"{{'home.next' | translate }}\\\"></pagination-controls>\\n    </div>\\n    <!--ngIf-->\\n\\n    <!-- if there are no matchrequests-->\\n    <ng-template #elseBlock>\\n      <p class=\\\"text-center\\\">{{ 'home.noRequests' | translate}}</p>\\n    </ng-template>\\n  </div>\\n  <div class=\\\"col-1\\\"></div>\\n</div>\\n\\n\\n<div class=\\\"modal-backdrop fade in\\\" [ngStyle]=\\\"{'display':display}\\\"></div>\\n<div *ngIf=\\\"modalIsOpen\\\" class=\\\"modal\\\" [ngStyle]=\\\"{'display': display}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\">{{ 'modals.details' | translate}} {{firstname}}</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeModal()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <table class=\\\"table table-light\\\">\\n          <tbody>\\n            <tr>\\n              <th class=\\\"font-weight-normal\\\" scope=\\\"row\\\">{{ 'modals.details' | translate}}:</th>\\n              <td>{{firstname}}</td>\\n            </tr>\\n            <tr>\\n              <th class=\\\"font-weight-normal\\\" scope=\\\"row\\\">{{ 'register.lastname' | translate}}:</th>\\n              <td>{{lastname}}</td>\\n            </tr>\\n            <tr>\\n              <th class=\\\"font-weight-normal\\\" scope=\\\"row\\\">{{ 'modals.age' | translate}}:</th>\\n              <td>{{age}}</td>\\n            </tr>\\n            <tr>\\n              <th class=\\\"font-weight-normal\\\" scope=\\\"row\\\">Geschlecht:</th>\\n              <td>{{matchSex}}</td>\\n            </tr>\\n            <tr>\\n              <th class=\\\"font-weight-normal\\\" scope=\\\"row\\\">{{ 'search.city' | translate}}:</th>\\n              <td>{{city}}</td>\\n            </tr>\\n            <tr>\\n              <th class=\\\"font-weight-normal\\\" scope=\\\"row\\\">Interessen:</th>\\n              <td>{{matchActivities}}</td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-success mr-2\\\" (click)=\\\"acceptMatch(matchId)\\\">\\n          {{ 'modals.accept' | translate}}\\n        </button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" (click)=\\\"declineMatch(matchId)\\\">\\n          {{ 'modals.decline' | translate}}\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { TranslateService, DefaultLangChangeEvent } from '@ngx-translate/core';\nimport { UtilityStoreService } from './../../services/utility-store.service';\nimport { Match } from './../../models/match';\nimport { MatchStoreService } from './../../services/match-store.service';\nimport { AuthService } from './../../services/auth.service';\nimport { UserStoreService } from 'src/app/services/user-store.service';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/models/user';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  users: User[];\n  user: User;\n  requestUser: User;\n  matchRequests: any[];\n  initiatorFirstname: string;\n\n  unAcceptedMatches$: any[] = [];\n  unAcceptedMatchesLength: number;\n\n  activities;\n  cities;\n  offers;\n  sex;\n\n  openedModal: any;\n\n  // for fontawesome icons\n  faCheck = faCheck;\n  faTimes = faTimes;\n\n  // for pagination\n  pageNumber = 1;\n\n  // for modal\n  display = 'none';\n  modalIsOpen = false;\n  // modalUser: User;\n  firstname: string;\n  lastname: string;\n  matchSex: string;\n  city: string;\n  matchActivities;\n  age;\n  matchId: string;\n\n  constructor(\n    private userStoreService: UserStoreService,\n    private authService: AuthService,\n    private router: Router,\n    private matchStoreService: MatchStoreService,\n    private utliltyStoreService: UtilityStoreService,\n    private translateService: TranslateService\n  ) {\n    this.matchStoreService.getAllUnAcceptedMatches().subscribe(matches => {\n      this.unAcceptedMatchesLength = matches.length;\n      this.unAcceptedMatches$ = matches;\n    }, error => {\n      console.log('Error in profile-page - TODO delete this console.log() before finishing WebProg!');\n    });\n  }\n\n  // when home-component was called, the written methods in ngOnInit gonna start\n  ngOnInit() {\n    this.setAllUtilities();\n    this.translateService.onDefaultLangChange.subscribe((event: DefaultLangChangeEvent) => {\n      this.setAllUtilities();\n    });\n  }\n\n  setAllUtilities() {\n    this.cities = this.utliltyStoreService.getAllCities(this.translateService.getDefaultLang());\n    this.offers = this.utliltyStoreService.getAllOffers(this.translateService.getDefaultLang());\n    this.activities = this.utliltyStoreService.getAllActivities(this.translateService.getDefaultLang());\n    this.sex = this.utliltyStoreService.getAllSex(this.translateService.getDefaultLang());\n  }\n\n  acceptMatch(matchId) {\n    let indexNumber: number;\n    const data = {\n      accepted: true\n    };\n    this.matchStoreService.updateMatch(matchId, data)\n      .subscribe(() => {\n        // tslint:disable-next-line:prefer-for-of\n        for (let index = 0; index < this.unAcceptedMatches$.length; index++) {\n          if (this.unAcceptedMatches$[index].matchId === matchId) {\n            indexNumber = index;\n          }\n        }\n        // delete match at indexNumber\n        this.unAcceptedMatches$.splice(indexNumber, 1);\n        this.closeModal();\n      });\n  }\n\n  declineMatch(matchId) {\n    let indexNumber: number;\n    this.matchStoreService.deleteMatch(matchId)\n      .subscribe(() => {\n        // tslint:disable-next-line:prefer-for-of\n        for (let index = 0; index < this.unAcceptedMatches$.length; index++) {\n          if (this.unAcceptedMatches$[index].matchId === matchId) {\n            indexNumber = index;\n          }\n        }\n        // delete match at indexNumber\n        this.unAcceptedMatches$.splice(indexNumber, 1);\n        this.closeModal();\n      });\n  }\n\n  openModal(match) {\n    // infos for modal\n    this.matchId = match.matchId;\n    this.modalIsOpen = true;\n    this.display = 'block';\n    this.firstname = match.firstname;\n    this.lastname = match.lastname;\n    this.matchSex = this.parseSexValueForFrontend(match.sex);\n    this.city = this.parseCityForFrontend(match.city);\n    this.matchActivities = this.activitiesForModal(this.parseActivitiesForFrontend(match.activities));\n    this.age = this.parseDateOfBirthForFrontend(match.dateOfBirth);\n  }\n\n  closeModal() {\n    this.display = 'none';\n    this.modalIsOpen = false;\n  }\n\n  activitiesForModal(activities: string[]): string {\n    let arr;\n    arr = '';\n    activities.forEach(element => {\n      arr = element + ', ' + arr;\n    });\n    return arr.substring(0, (arr.length - 2));\n  }\n\n  parseSexValueForFrontend(sexIndex: number): string {\n    return this.sex[sexIndex];\n  }\n\n  parseActivitiesForFrontend(activitiesIndex: number[]) {\n    const activities: string[] = [];\n\n    activitiesIndex.forEach(activityIndex => {\n      activities.push(this.activities[activityIndex]);\n    });\n    return activities;\n  }\n\n  parseOfferForFrontend(selectedOfferIndex: number) {\n    return this.offers[selectedOfferIndex];\n  }\n\n  parseDateOfBirthForFrontend(dateOfBirth: number) {\n    const ageDifMs = Date.now() - dateOfBirth;\n    const ageDate = new Date(ageDifMs);\n    return Math.abs(ageDate.getUTCFullYear() - 1970);\n  }\n\n  parseCityForFrontend(cityIndex: number) {\n    return this.cities[cityIndex];\n  }\n\n}\n","module.exports = \"<div class=\\\"row mt-4\\\">\\n  <div class=\\\"col-1\\\"></div>\\n  <div class=\\\"col-10\\\">\\n    <div class=\\\"card-deck\\\">\\n      <div class=\\\"card m-4 text-center py-2 shadow-sm\\\">\\n        <h4 class=\\\"card-title font-weight-light\\\">{{ 'impressum.team' | translate }}</h4>\\n        <hr class=\\\"my-1 border-warning\\\">\\n        Constantin Beer\\n        <br />Eric Odschuk\\n        <br />Luis Ramer\\n        <br />Arne Schacher\\n        <br />Pascal Vonholdt<br />\\n      </div>\\n\\n      <div class=\\\"card m-4 text-center py-2 shadow-sm\\\">\\n        <h4 class=\\\"card-title font-weight-light\\\">{{ 'impressum.contact' | translate }}</h4>\\n        <hr class=\\\"my-1 border-warning\\\">\\n        <a href=\\\"mailto:tandem.hwr@gmail.com\\\">tandem.hwr@gmail.com</a>\\n        HWR Berlin\\n        <br />6. Semester {{ 'impressum.study' | translate }}\\n        <br />Alt-Friedrichsfelde 60\\n        <br />10315 Berlin\\n      </div>\\n\\n    </div>\\n    <div class=\\\"col-1\\\"></div>\\n  </div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW1wcmVzc3VtLXBhZ2UvaW1wcmVzc3VtLXBhZ2UuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-impressum-page',\n  templateUrl: './impressum-page.component.html',\n  styleUrls: ['./impressum-page.component.scss']\n})\nexport class ImpressumPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-1\\\"></div>\\n  <div class=\\\"col-10 d-flex justify-content-center\\\">\\n    <div class=\\\"mx-auto my-5 card shadow\\\">\\n      <img class=\\\"card-img-top mb-4 mt-3 rounded-circle mx-auto shadow\\\" src=\\\"../../../assets/images/tandemLogo.png\\\">\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"card-title text-center\\\">tandemPartner<i class=\\\"text-muted\\\">{{'login.tandemSlogan' | translate }}</i></div>\\n        <form class=\\\"m-3\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"loginFormSave()\\\">\\n          <div class=\\\"input-group mb-3\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\" id=\\\"mailIcon\\\">\\n                <fa-icon [icon]=\\\"faAt\\\"></fa-icon>\\n              </span>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"loginFormMail\\\" placeholder=\\\"{{'login.mailPlaceholder' | translate }}\\\" formControlName=\\\"loginFormMail\\\" aria-describedby=\\\"mailIcon\\\" autofocus>\\n          </div>\\n\\n          <div class=\\\"input-group mb-3\\\">\\n            <div class=\\\"input-group-prepend\\\">\\n              <span class=\\\"input-group-text\\\" id=\\\"passwordIcon\\\">\\n                <fa-icon [icon]=\\\"faLock\\\"></fa-icon>\\n              </span>\\n            </div>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"loginFormPassword\\\" placeholder=\\\"{{'login.passwordPlaceholder' | translate }}\\\" formControlName=\\\"loginFormPassword\\\" aria-describedby=\\\"passwordIcon\\\" autofocus>\\n          </div>\\n\\n          <div class=\\\"btn-toolbar d-flex justify-content-center\\\" role=\\\"toolbar\\\">\\n            <div class=\\\"btn-group mr-2\\\">\\n              <button type=\\\"button\\\" type=\\\"submit\\\" class=\\\"btn btn-warning d-flex mx-auto  mt-2\\\" >{{'login.loginButton' | translate }}</button>\\n            </div>\\n            <div class=\\\"btn-group\\\">\\n              <button type=\\\"button\\\" [routerLink]=\\\"['/register']\\\" class=\\\"btn btn-outline-warning d-flex mx-auto mt-2\\\" >{{'login.registerButton' | translate }}</button>\\n            </div>\\n          </div>\\n\\n        </form>\\n      </div>\\n    </div>\\n\\n  </div>\\n  <div class=\\\"col-1\\\"></div>\\n</div>\\n\"","module.exports = \"img {\\n  height: auto;\\n  width: auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sb2dpbi1wYWdlL0Q6XFxVc2Vyc1xcQktVXFxBcm5lU2NoYWNoZXJcXERvY3VtZW50c1xcVU5JXFxXSS00MDMgV2ViYW53ZW5kdW5nZW5cXHRhbmRlbVBhcnRuZXIzLS0tRnJvbnRFbmRcXGFuZ3VsYXIvc3JjXFxhcHBcXGNvbXBvbmVudHNcXGxvZ2luLXBhZ2VcXGxvZ2luLXBhZ2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0VBQ1osV0FBVyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9sb2dpbi1wYWdlL2xvZ2luLXBhZ2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbWcge1xyXG4gIGhlaWdodDogYXV0bztcclxuICB3aWR0aDogYXV0bztcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { faAt } from '@fortawesome/free-solid-svg-icons';\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\nimport { Md5 } from 'ts-md5';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginPageComponent implements OnInit {\n\n  md5 = new Md5();\n  loginForm: FormGroup;\n\n  // for icons\n  faAt = faAt;\n  faLock = faLock;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService) {\n    this.loginForm = this.createLoginForm();\n  }\n\n  ngOnInit() {\n  }\n\n  createLoginForm() {\n    return this.formBuilder.group({\n      loginFormMail: ['', Validators.required],\n      loginFormPassword: ['', Validators.required]\n    });\n  }\n\n  loginFormSave() {\n    const mail = this.loginForm.value.loginFormMail;\n    const password = this.md5.appendStr(this.loginForm.value.loginFormMail)\n                    .appendStr(this.loginForm.value.loginFormPassword).end() as string;\n    // const password = this.loginForm.value.loginFormPassword;\n\n    this.authService.login(mail, password);\n  }\n\n  get loginFormMail() {\n    return this.loginForm.get('loginFormMail');\n  }\n\n  get loginFormPassword() {\n    return this.loginForm.get('loginFormPassword');\n  }\n}\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-1\\\"></div>\\n  <div class=\\\"col-10 px-0\\\">\\n    <div class=\\\"card mx-auto my-5 shadow\\\">\\n      <div class=\\\"card-header h5 bg-transparent d-flex justify-content-between border-warning p-0\\\">\\n        <div\\n          class=\\\"col-md-6 font-weight-light text-center pointer-cursor align-self-center border-right btn-outline-warning py-3\\\"\\n          data-toggle=\\\"collapse\\\" href=\\\"#collapseAccepted\\\" [ngClass]=\\\"{'active':acceptedCollapsed === true}\\\"\\n          role=\\\"button\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseAccepted\\\" (click)=\\\"requestsCollapsed=false\\\"\\n          (click)=\\\"acceptedCollapsed=true\\\">\\n          {{ 'matchlist.accpetedMatches' | translate }}\\n        </div>\\n        <div class=\\\"col-md-6 font-weight-light text-center pointer-cursor btn-outline-warning py-3\\\"\\n          [ngClass]=\\\"{'active':requestsCollapsed === true}\\\" data-toggle=\\\"collapse\\\" href=\\\"#collapseRequests\\\"\\n          role=\\\"button\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseRequests\\\" (click)=\\\"acceptedCollapsed=false\\\"\\n          (click)=\\\"requestsCollapsed=true\\\">\\n          {{ 'matchlist.unacceptedMatches' | translate }}\\n        </div>\\n      </div>\\n      <!--card-header-->\\n\\n      <!--show all accepted Matches-->\\n      <div *ngIf=\\\"acceptedCollapsed\\\" class=\\\"card-body\\\" id=\\\"collapseAccepted\\\">\\n        <!-- show all accepted matches which are saved in acceptedMatches[]-->\\n        <div\\n          *ngFor=\\\"let match of acceptedMatchesAsInitiator$ | paginate: { itemsPerPage: 5, currentPage: pageNumberAcceptedMatches, id: 'firstPagination' }\\\">\\n          <div class=\\\"card shadow my-3\\\">\\n            <h5 class=\\\"card-header bg-white border-warning font-italic\\\">\\n              {{ 'matchlist.matchedOffer' | translate }}: {{ parseOfferForFrontend(match.matchedOffer) }}\\n            </h5>\\n            <div *ngIf=\\\"acceptedMatchesAsInitiator$, else noRequestBlock\\\" class=\\\"card-body accepted-match-cards\\\">\\n              <div class=\\\"card-text\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-8 col-md-10\\\">\\n                    <a class=\\\"pointer-cursor\\\" (click)=\\\"openModal(match)\\\">\\n                      <p class=\\\"my-0\\\"><small>{{ match.firstname }} {{ match.lastname }}</small></p>\\n                      <!-- <p class=\\\"my-0\\\"><small>Age: {{calculateAgeForModal(match.dateOfBirth)}}</small></p> -->\\n                      <p class=\\\"my-0\\\"><small>Aktivitäten: {{activitiesForModal(parseActivitiesForFrontend(match.activities))}}</small></p>\\n                    </a>\\n                  </div>\\n                  <div class=\\\"col-4 col-md-2 d-flex justify-content-end my-auto\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-warning homebutton\\\"\\n                      (click)=\\\"contactUser(match.uid)\\\" data-toggle=\\\"tooltip\\\"\\n                      data-placement=\\\"top\\\" title=\\\"{{ 'matchlist.contactTooltip' | translate }}\\\">\\n                      <fa-icon [icon]=\\\"faEnvelope\\\"></fa-icon>\\n                    </button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <!-- if there are no matchrequests-->\\n            <ng-template #noRequestBlock>\\n              <p class=\\\"text-center\\\">{{ 'home.noRequests' | translate}}</p>\\n            </ng-template>\\n          </div>\\n        </div>\\n        <!--ngFor-->\\n\\n        <!-- show all accepted matches which are saved in acceptedMatches[]-->\\n        <div\\n          *ngFor=\\\"let match of acceptedMatchesAsPartner$ | paginate: { itemsPerPage: 5, currentPage: pageNumberAcceptedMatches, id: 'firstPagination' }\\\">\\n          <div class=\\\"card shadow my-3\\\">\\n            <h5 class=\\\"card-header bg-white border-warning font-italic\\\">\\n              {{ 'matchlist.matchedOffer' | translate }}: {{ parseOfferForFrontend(match.matchedOffer) }}\\n            </h5>\\n            <div *ngIf=\\\"acceptedMatchesAsPartner$, else noRequestBlock\\\" class=\\\"card-body accepted-match-cards\\\">\\n              <div class=\\\"card-text\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-8 col-md-10\\\">\\n                    <a class=\\\"pointer-cursor\\\" (click)=\\\"openModal(match)\\\">\\n                      <p class=\\\"my-0\\\"><small>{{ match.firstname }} {{ match.lastname }}</small></p>\\n                      <!-- <p class=\\\"my-0\\\"><small>Age: {{calculateAgeForModal(match.dateOfBirth)}}</small></p> -->\\n                      <p class=\\\"my-0\\\"><small>Aktivitäten: {{activitiesForModal(parseActivitiesForFrontend(match.activities))}}</small></p>\\n                    </a>\\n                  </div>\\n                  <div class=\\\"col-4 col-md-2 d-flex justify-content-end my-auto\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-warning homebutton\\\"\\n                      (click)=\\\"contactUser(match.uid)\\\" data-toggle=\\\"tooltip\\\"\\n                      data-placement=\\\"top\\\" title=\\\"{{ 'matchlist.contactTooltip' | translate }}\\\">\\n                      <fa-icon [icon]=\\\"faEnvelope\\\"></fa-icon>\\n                    </button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <!-- if there are no matchrequests-->\\n            <ng-template #noRequestBlock>\\n              <p class=\\\"text-center\\\">{{ 'home.noRequests' | translate}}</p>\\n            </ng-template>\\n          </div>\\n        </div>\\n        <!--ngFor-->\\n\\n        <!--controls for pagination, which are only visible at the length of matchRequest-array bigger than 5-->\\n        <pagination-controls autoHide=\\\"true\\\" class=\\\"pagination justify-content-center\\\"\\n          (pageChange)=\\\"pageNumberAcceptedMatches = $event\\\" previousLabel=\\\"{{'home.previous' | translate }}\\\"\\n          nextLabel=\\\"{{'home.next' | translate }}\\\" id=\\\"firstPagination\\\">\\n        </pagination-controls>\\n\\n      </div>\\n\\n      <!--show all Matchrequests-->\\n      <div *ngIf=\\\"requestsCollapsed\\\" class=\\\"card-body collapse\\\" id=\\\"collapseRequests\\\">\\n\\n\\n\\n        <!-- show all unaccepted matchrequests which are saved in matchrequests[]-->\\n        <div\\n          *ngFor=\\\"let matchrequest of matchRequests$ | paginate: { itemsPerPage: 5, currentPage: pageNumberRequests, id: 'secondPagination' }\\\">\\n          <div class=\\\"card shadow my-3\\\">\\n            <h5 class=\\\"card-header bg-white border-info font-italic\\\">\\n              {{ 'matchlist.matchrequestFor' | translate }}: {{ parseOfferForFrontend(matchrequest.matchedOffer) }}\\n            </h5>\\n            <div class=\\\"card-body unaccepted-match-cards\\\">\\n              <div class=\\\"card-text\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-8 col-md-10\\\">\\n\\n                    <p class=\\\"my-0\\\"><small>{{ matchrequest.firstname }} {{ matchrequest.lastname }}</small></p>\\n                    <!-- <p class=\\\"my-0\\\"><small>Age: {{calculateAgeForModal(matchrequest.dateOfBirth)}}</small></p> -->\\n                    <p class=\\\"my-0\\\"><small>Aktivitäten: {{activitiesForModal(parseActivitiesForFrontend(matchrequest.activities))}}</small></p>\\n\\n                  </div>\\n                  <div class=\\\"col-4 col-md-2 d-flex justify-content-end my-auto\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-outline-danger homebutton\\\"\\n                      (click)=\\\"deleteMatchrequest(matchrequest.matchId)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\"\\n                      title=\\\"{{ 'matchlist.deleteTooltip' | translate }}\\\">\\n                      <fa-icon [icon]=\\\"faTrash\\\"></fa-icon>\\n                    </button>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <!--ngFor-->\\n\\n        <!--controls for pagination, which are only visible at the length of matchRequest-array bigger than 5-->\\n        <pagination-controls autoHide=\\\"true\\\" class=\\\"pagination justify-content-center\\\"\\n          (pageChange)=\\\"pageNumberRequests = $event\\\" previousLabel=\\\"{{'home.previous' | translate }}\\\"\\n          nextLabel=\\\"{{'home.next' | translate }}\\\" id=\\\"secondPagination\\\">\\n        </pagination-controls>\\n\\n\\n      </div>\\n      <!--second row/card-->\\n\\n    </div>\\n\\n\\n  </div>\\n  <!--col-10-->\\n\\n  <div class=\\\"col-1\\\"></div>\\n</div>\\n\\n\\n\\n<!-- Modal -->\\n<div class=\\\"modal-backdrop fade in\\\" [ngStyle]=\\\"{'display':display}\\\"></div>\\n<div *ngIf=\\\"modalIsOpen\\\" class=\\\"modal\\\" [ngStyle]=\\\"{'display': display}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog modal-dialog-centered\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\">{{ 'modals.details' | translate}} {{firstname}}</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeModal()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <table class=\\\"table table-light\\\">\\n          <tbody>\\n            <tr>\\n              <th class=\\\"font-weight-normal\\\" scope=\\\"row\\\">{{ 'modals.details' | translate}}:</th>\\n              <td>{{firstname}}</td>\\n            </tr>\\n            <tr>\\n              <th class=\\\"font-weight-normal\\\" scope=\\\"row\\\">{{ 'register.lastname' | translate}}:</th>\\n              <td>{{lastname}}</td>\\n            </tr>\\n            <tr>\\n              <th class=\\\"font-weight-normal\\\" scope=\\\"row\\\">{{ 'modals.age' | translate}}:</th>\\n              <td>{{age}}</td>\\n            </tr>\\n            <tr>\\n              <th class=\\\"font-weight-normal\\\" scope=\\\"row\\\">{{ 'register.sex' | translate}}:</th>\\n              <td>{{matchSex}}</td>\\n            </tr>\\n            <tr>\\n              <th class=\\\"font-weight-normal\\\" scope=\\\"row\\\">{{ 'search.city' | translate}}:</th>\\n              <td>{{city}}</td>\\n            </tr>\\n            <tr>\\n              <th class=\\\"font-weight-normal\\\" scope=\\\"row\\\">{{ 'result.activities' | translate}}:</th>\\n              <td>{{matchActivities}}</td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-warning homebutton\\\" (click)=\\\"contactUser(initiatorID, partnerID)\\\"\\n          data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"{{ 'matchlist.contactTooltip' | translate }}\\\">\\n          <fa-icon [icon]=\\\"faEnvelope\\\"></fa-icon>\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWF0Y2gtbGlzdC9tYXRjaC1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { TranslateService, DefaultLangChangeEvent } from '@ngx-translate/core';\nimport { UserStoreService } from './../../services/user-store.service';\nimport { Match } from './../../models/match';\nimport { MatchStoreService } from './../../services/match-store.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { faTrash, faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport { Router } from '@angular/router';\nimport { ChatService } from 'src/app/services/chat.service';\nimport { User } from './../../models/user';\n// import { ChatService } from './../../services/chat.service';\nimport { UtilityStoreService } from 'src/app/services/utility-store.service';\n\n@Component({\n  selector: 'app-match-list',\n  templateUrl: './match-list.component.html',\n  styleUrls: ['./match-list.component.scss']\n})\nexport class MatchListComponent implements OnInit {\n\n  matchA: Match[];\n  matchB: Match[];\n  allMatches: Match[];\n  acceptedMatches: Match[];\n  matchrequests: Match[];\n\n  matchRequests$: any[] = [];\n  acceptedMatchesAsInitiator$: any[] = [];\n  acceptedMatchesAsPartner$: any[] = [];\n\n  matchRequestLength: number;\n\n  offers;\n  activities;\n  cities;\n  sex;\n\n  // for fontawesome icons\n  faTrash = faTrash;\n  faEnvelope = faEnvelope;\n\n  // for pagination\n  pageNumberAcceptedMatches = 1;\n  pageNumberRequests = 1;\n\n  // getting active & collapsed state\n  acceptedCollapsed = true;\n  requestsCollapsed = false;\n\n  // for modal\n  display = 'none';\n  modalIsOpen = false;\n  // modalUser: User;\n  firstname: string;\n  lastname: string;\n  matchSex: string;\n  city: string;\n  matchActivities;\n  age;\n  // initiatorID: string;\n  // partnerID: string;\n\n  constructor(\n    private authService: AuthService,\n    private matchStoreService: MatchStoreService,\n    private router: Router,\n    private chatservice: ChatService,\n    private userStoreService: UserStoreService,\n    private utliltyStoreService: UtilityStoreService,\n    private translateService: TranslateService\n  ) {\n    this.matchStoreService.getAllMatchrequests().subscribe(matches => {\n      this.matchRequestLength = matches.length;\n      this.matchRequests$ = matches;\n    }, error => {\n      console.log('Error in profile-page - TODO delete this console.log() before finishing WebProg!');\n    });\n\n    this.matchStoreService.getAllAcceptedMatchesAsInitiator().subscribe(matches => {\n      this.acceptedMatchesAsInitiator$ = matches;\n    }, error => {\n      console.log('Error in profile-page - TODO delete this console.log() before finishing WebProg!');\n    });\n\n    this.matchStoreService.getAllAcceptedMatchesAsPartner().subscribe(matches => {\n      this.acceptedMatchesAsPartner$ = matches;\n    }, error => {\n      console.log('Error in profile-page - TODO delete this console.log() before finishing WebProg!');\n    });\n  }\n\n  ngOnInit() {\n    this.setAllUtilities();\n    this.translateService.onDefaultLangChange.subscribe((event: DefaultLangChangeEvent) => {\n      this.setAllUtilities();\n    });\n  }\n\n  setAllUtilities() {\n    this.cities = this.utliltyStoreService.getAllCities(this.translateService.getDefaultLang());\n    this.offers = this.utliltyStoreService.getAllOffers(this.translateService.getDefaultLang());\n    this.activities = this.utliltyStoreService.getAllActivities(this.translateService.getDefaultLang());\n    this.sex = this.utliltyStoreService.getAllSex(this.translateService.getDefaultLang());\n  }\n\n  // TODO refactor, because we seperate know between accepted matches as initiator and as partner\n  contactUser(matchUid: string) {\n    const currentUserID = this.authService.currentUserID;\n\n    this.chatservice.create(currentUserID, matchUid)\n      .subscribe(response => {\n        if (response.result) {\n          this.router.navigate([`chats/${response.id}`]);\n        } else if (!response.result) {\n          this.router.navigate([`chats/${response.id}`]);\n        }\n      });\n  }\n\n  // deleteMatchrequest(matchId: string) {\n  //   this.matchStoreService.deleteMatch(matchId)\n  //     .subscribe(() => {\n  //       if (this.matchRequestLength === 1) {\n  //         this.router.navigateByUrl('/', { skipLocationChange: true }).then(() =>\n  //           this.router.navigate(['/matches']));\n  //       }\n  //     });\n  // }\n\n  deleteMatchrequest(matchId: string) {\n    let indexNumber: number;\n    this.matchStoreService.deleteMatch(matchId)\n      .subscribe(() => {\n        // tslint:disable-next-line:prefer-for-of\n        for (let index = 0; index < this.matchRequests$.length; index++) {\n          if (this.matchRequests$[index].matchId === matchId) {\n            indexNumber = index;\n          }\n        }\n        // delete match at indexNumber\n        this.matchRequests$.splice(indexNumber, 1);\n        // this.closeModal();\n      });\n  }\n\n  openModal(match) {\n    // save partnerID and initiatorID for Contact\n    // this.initiatorID = initiatorID;\n    // this.partnerID = partnerID;\n\n    // infos for modal\n    // this.activities = '';\n    this.modalIsOpen = true;\n    this.display = 'block';\n    this.firstname = match.firstname;\n    this.lastname = match.lastname;\n    this.matchSex = this.parseSexValueForFrontend(match.sex);\n    this.city = this.parseCityForFrontend(match.city);\n    this.matchActivities = this.activitiesForModal(this.parseActivitiesForFrontend(match.activities));\n    this.age = this.parseDateOfBirthForFrontend(match.dateOfBirth);\n  }\n\n  activitiesForModal(activities: string[]): string {\n    let arr;\n    arr = '';\n    activities.forEach(element => {\n      arr = element + ', ' + arr;\n    });\n    return arr.substring(0, (arr.length - 2));\n  }\n\n  parseSexValueForFrontend(sexIndex: number): string {\n    return this.sex[sexIndex];\n  }\n\n  closeModal() {\n    this.display = 'none';\n    this.modalIsOpen = false;\n  }\n\n  validateCurrentUser(initiatorID: string, partnerID: string) {\n    if (this.authService.currentUserID === initiatorID) {\n      return partnerID;\n    } else {\n      return initiatorID;\n    }\n  }\n\n  parseActivitiesForFrontend(activitiesIndex: number[]) {\n    const activities: string[] = [];\n\n    activitiesIndex.forEach(activityIndex => {\n      activities.push(this.activities[activityIndex]);\n    });\n    return activities;\n  }\n\n  parseOfferForFrontend(selectedOfferIndex: number) {\n    return this.offers[selectedOfferIndex];\n  }\n\n  parseDateOfBirthForFrontend(dateOfBirth: number) {\n    const ageDifMs = Date.now() - dateOfBirth;\n    const ageDate = new Date(ageDifMs);\n    return Math.abs(ageDate.getUTCFullYear() - 1970);\n  }\n\n  parseCityForFrontend(cityIndex: number) {\n    return this.cities[cityIndex];\n  }\n\n\n}\n","module.exports = \"<header>\\n  <!--when the bug of new logging in is solved, we can use the following line\\n  <nav *ngIf=\\\"router.url !== '/login'\\\" class=\\\"navbar navbar-light navbar-expand-lg shadow\\\">-->\\n\\n  <nav class=\\\"navbar fixed-top navbar-light navbar-expand-lg bg-white shadow\\\">\\n    <!--toggle only visible for screens smaller than lg-->\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarLinks\\\" aria-controls=\\\"navbarLinks\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n          <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/home']\\\">\\n        <img src=\\\"../../../assets/images/navbarLogo.png\\\" width=\\\"40\\\" height=\\\"40\\\" class=\\\"d-inline-block align-top\\\" alt=\\\"Tandem Logo\\\">\\n      </a>\\n\\n      <!--navbar links-->\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarLinks\\\">\\n        <!--left aligned links-->\\n        <ul *ngIf=\\\"isLoggedIn()\\\" class=\\\"navbar-nav mr-auto\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/home']\\\" [routerLinkActive]=\\\"['active']\\\">{{ 'navbar.homeLink' | translate }}</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\" [routerLinkActive]=\\\"['active']\\\">{{ 'navbar.profileLink' | translate }}</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a *ngIf=\\\"router.url !== '/search/result', else resultBlock\\\" class=\\\"nav-link\\\" [routerLink]=\\\"['/search']\\\" [routerLinkActive]=\\\"['active']\\\">{{ 'navbar.searchLink' | translate }}</a>\\n            <ng-template #resultBlock>\\n              <a class=\\\"nav-link active\\\">{{ 'navbar.searchResults' | translate }}</a>\\n            </ng-template>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/matches']\\\" [routerLinkActive]=\\\"['active']\\\">{{ 'navbar.matchesLink' | translate }}</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/chats']\\\" [routerLinkActive]=\\\"['active']\\\">{{ 'navbar.chatLink' | translate }}</a>\\n          </li>\\n        </ul>\\n\\n        <!-- right aligned links-->\\n        <ul class=\\\"navbar-nav ml-auto\\\">\\n          <!--dropdown menu-->\\n          <li class=\\\"nav-item dropdown\\\">\\n            <!--showing english or german language, via checking whether english language was clicked or not -->\\n            <a class=\\\"nav-link dropdown-toggle pointer-cursor\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" id=\\\"dropdownMenuLink\\\">\\n              {{ 'navbar.lang' | translate }}\\n            </a>\\n            <!--dropdown links-->\\n            <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenuLink\\\">\\n              <a class=\\\"dropdown-item pointer-cursor\\\" (click)=\\\"switchLanguage('de')\\\">De</a>\\n              <div class=\\\"dropdown-divider\\\"></div>\\n              <a class=\\\"dropdown-item pointer-cursor\\\" (click)=\\\"switchLanguage('en')\\\" >En</a>\\n            </div>\\n          </li>\\n\\n          <!--username-->\\n          <span *ngIf=\\\"isLoggedIn()\\\" class=\\\"navbar-text font-italic px-2 border-right border-left\\\">\\n\\n           {{ currentUserFirstname }}\\n\\n          </span>\\n\\n          <!--Logout-->\\n          <li *ngIf=\\\"isLoggedIn()\\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link pointer-cursor\\\" (click)=\\\"logout()\\\">{{ 'navbar.logout' | translate }}</a>\\n          </li>\\n          <!--Login-->\\n          <li *ngIf=\\\"!isLoggedIn() \\\" class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\">{{ 'navbar.login' | translate }}</a>\\n          </li>\\n        </ul>\\n      </div>\\n  </nav>\\n</header>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuc2NzcyJ9 */\"","import { User } from './../../models/user';\nimport { UserStoreService } from './../../services/user-store.service';\nimport { AuthService } from './../../services/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  // default value for not showing the page in english\n  showEnglish = false;\n  currentUserFirstname: string;\n\n  // set Username\n  username: string;\n  greeting: string;\n\n  constructor(\n    private translateService: TranslateService,\n    private authService: AuthService,\n    private router: Router,\n    private userStoreService: UserStoreService) {\n    translateService.setDefaultLang('de');\n  }\n\n\n  ngOnInit() {\n    this.authService.user$.subscribe(user => {\n      try {\n        this.currentUserFirstname = user.firstname;\n      } catch {\n      }\n    });\n  }\n\n  isLoggedIn() {\n    return this.authService.isloggedIn();\n  }\n\n  switchLanguage(language: string) {\n    this.translateService.use(language);\n    if (language === 'en') {\n      this.showEnglish = true;\n      this.translateService.setDefaultLang('en');\n    } else {\n      this.showEnglish = false;\n      this.translateService.setDefaultLang('de');\n    }\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n\n}\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-1\\\"></div>\\n  <div class=\\\"col-10\\\">\\n    <div class=\\\"card mx-auto my-5 shadow\\\">\\n      <div class=\\\"card-header bg-warning text-center h5\\\">\\n        {{'profile.headerTitle' | translate }}\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <form class=\\\"\\\" [formGroup]=\\\"editForm\\\" novalidate>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label for=\\\"editFormFirstname\\\">{{'register.firstname' | translate }}*</label>\\n              <input type=\\\"text\\\" class=\\\"form-control shadow-sm\\\" id=\\\"editFormFirstname\\\"\\n                formControlName=\\\"editFormFirstname\\\" placeholder=\\\"{{'register.firstname' | translate }}\\\">\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label for=\\\"editFormLastname\\\">{{'register.lastname' | translate }}*</label>\\n              <input type=\\\"text\\\" class=\\\"form-control shadow-sm\\\" id=\\\"editFormLastname\\\" formControlName=\\\"editFormLastname\\\"\\n                placeholder=\\\"{{'register.lastname' | translate }}\\\">\\n            </div>\\n          </div>\\n\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6 form-group\\\">\\n                <label for=\\\"editFormSex\\\">{{'register.sex' | translate }}*</label>\\n                <div class=\\\"form-control shadow-sm bg-light\\\"id=\\\"editFormSex\\\" disabled>{{selectedSex}}</div>\\n\\n            </div>\\n            <div class=\\\"col-md-6 form-group\\\">\\n              <label>{{'register.mail' | translate }}*</label>\\n              <input type=\\\"text\\\" class=\\\"form-control shadow-sm\\\" id=\\\"editFormMail\\\" formControlName=\\\"editFormMail\\\"\\n                placeholder=\\\"name@example.com\\\">\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 form-group\\\">\\n              <label for=\\\"editFormCity\\\">{{'register.city' | translate }}*</label>\\n              <ng-multiselect-dropdown class=\\\"form-control shadow-sm\\\" id=\\\"editFormCity\\\" #editFormCity=\\\"ngModel\\\"\\n                [placeholder]=\\\"'register.pleaseChoose' | translate\\\" [data]=\\\"cities\\\" [(ngModel)]=\\\"selectedCity\\\"\\n                [ngModelOptions]=\\\"{ standalone : true }\\\" [settings]=\\\"selectCitySettings\\\" required>\\n              </ng-multiselect-dropdown>\\n            </div>\\n            <div class=\\\"col-md-6 form-group\\\">\\n              <label for=\\\"editFormBirthday\\\">{{'register.birthday' | translate }}*</label>\\n              <input type=\\\"text\\\" [placeholder]=\\\"'register.birthday' | translate\\\" class=\\\"form-control shadow-sm bg-light\\\"\\n                bsDatepicker id=\\\"editFormBirthday\\\" formControlName=\\\"editFormBirthday\\\"\\n                [bsConfig]=\\\"{ dateInputFormat: 'DD.MM.YYYY', containerClass: 'theme-orange' }\\\">\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 form-group\\\">\\n              <label for=\\\"editFormOffers\\\">{{'register.offers' | translate }}:*</label>\\n              <ng-multiselect-dropdown class=\\\"form-control shadow-sm\\\" id=\\\"editFormOffers\\\" #editFormOffers=\\\"ngModel\\\"\\n                [placeholder]=\\\"'register.pleaseChoose' | translate\\\" [data]=\\\"offers\\\" [(ngModel)]=\\\"selectedOffers\\\"\\n                [ngModelOptions]=\\\"{ standalone : true }\\\" [settings]=\\\"selectOffersActivitiesSettings\\\" required>\\n              </ng-multiselect-dropdown>\\n            </div>\\n            <div class=\\\"col-md-6 form-group\\\">\\n              <label for=\\\"editFormActivities\\\">{{'register.activities' | translate }}:*</label>\\n              <ng-multiselect-dropdown class=\\\"form-control shadow-sm\\\" id=\\\"editFormActivities\\\"\\n                #editFormActivities=\\\"ngModel\\\" [placeholder]=\\\"'register.pleaseChoose' | translate\\\" [data]=\\\"activities\\\"\\n                [(ngModel)]=\\\"selectedActivities\\\" [ngModelOptions]=\\\"{ standalone : true }\\\"\\n                [settings]=\\\"selectOffersActivitiesSettings\\\" required>\\n              </ng-multiselect-dropdown>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 form-group\\\">\\n              <label>{{'profile.newPassword' | translate }}*</label>\\n              <input type=\\\"password\\\" class=\\\"form-control shadow-sm\\\" id=\\\"editFormPassword\\\"\\n                formControlName=\\\"editFormPassword\\\" placeholder=\\\"{{'register.password' | translate }}\\\">\\n            </div>\\n            <div class=\\\"col-md-6 form-group\\\">\\n              <label>{{'profile.newPasswordConfirm' | translate }}*</label>\\n              <input type=\\\"password\\\" class=\\\"form-control shadow-sm\\\" id=\\\"editFormPasswordConfirm\\\"\\n                formControlName=\\\"editFormPasswordConfirm\\\" placeholder=\\\"{{'register.passwordConfirm' | translate }}\\\">\\n            </div>\\n          </div>\\n\\n          <!--Validator messages-->\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"editFormFirstname.errors && (editFormFirstname.touched || editFormFirstname.dirty)\\\">\\n            <div *ngIf=\\\"editFormFirstname.errors.required\\\">{{'register.firstname' | translate }}\\n              {{'validators.required' | translate }}</div>\\n            <div *ngIf=\\\"editFormFirstname.errors.pattern\\\">{{'validators.letterSpaces' | translate }}</div>\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"editFormLastname.errors && (editFormLastname.touched || editFormLastname.dirty)\\\">\\n            <div *ngIf=\\\"editFormLastname.errors.required\\\">{{'register.lastname' | translate }}\\n              {{'validators.required' | translate }}</div>\\n            <div *ngIf=\\\"editFormLastname.errors.pattern\\\">{{'validators.letterSpaces' | translate }}</div>\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"editFormMail.errors && (editFormMail.touched || editFormMail.dirty)\\\">\\n            <div *ngIf=\\\"editFormMail.errors.required\\\">{{'register.mail' | translate }}\\n              {{'validators.required' | translate }}</div>\\n            <div *ngIf=\\\"editFormMail.errors.email\\\">{{'validators.email' | translate }}</div>\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"editFormPassword.errors && (editFormPassword.touched || editFormPassword.dirty)\\\">\\n            <div *ngIf=\\\"editFormPassword.errors.pattern\\\">{{'validators.passwordPattern' | translate }}</div>\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"editFormPasswordConfirm.errors && (editFormPasswordConfirm.touched || editFormPasswordConfirm.dirty)\\\">\\n            <div *ngIf=\\\"editFormPasswordConfirm.errors.pattern\\\">{{'validators.passwordPattern' | translate }}</div>\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"editFormPassword.value != editFormPasswordConfirm.value && editFormPasswordConfirm.value != null\\\">\\n            {{'validators.passwordMismatch' | translate }}\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"editFormOffers.errors && (editFormOffers.touched || editFormOffers.dirty)\\\">\\n            <div *ngIf=\\\"editFormOffers.errors.required\\\" class=\\\"alert-danger\\\">{{'validators.minOffers' | translate }}\\n            </div>\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"editFormCity.errors && (editFormCity.touched || editFormCity.dirty)\\\">\\n            <div *ngIf=\\\"editFormCity.errors.required\\\" class=\\\"alert-danger\\\">{{'validators.city' | translate }}</div>\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"editFormActivities.errors && (editFormActivities.touched || editFormActivities.dirty)\\\">\\n            <div *ngIf=\\\"editFormActivities.errors.required\\\" class=\\\"alert-danger\\\">\\n              {{'validators.minActivities' | translate }}</div>\\n          </div>\\n\\n\\n          <div  *ngIf=\\\"updateSuccess\\\" class=\\\"alert alert-success mb-2\\\" role=\\\"alert\\\">\\n              {{'validators.updateSuccess' | translate }}\\n          </div>\\n\\n          <div  *ngIf=\\\"invalidPassword\\\" class=\\\"alert alert-danger mb-2\\\" role=\\\"alert\\\">\\n              {{'validators.incorrectPassword' | translate }}\\n          </div>\\n          <!--End-Validator messages-->\\n\\n          <div class=\\\"btn-toolbar d-flex justify-content-center\\\" role=\\\"toolbar\\\">\\n            <div class=\\\"btn-group mr-1 mr-md-3\\\">\\n              <button type=\\\"button\\\" type=\\\"submit\\\" class=\\\"btn btn-warning d-flex mx-auto mt-2\\\" data-toggle=\\\"modal\\\"\\n                data-target=\\\"#confirmModal\\\"\\n                [disabled]=\\\"(!editForm.valid || !editFormOffers.valid || !editFormActivities.valid || !editFormCity.valid)\\\">{{'profile.saveButton' | translate }}</button>\\n            </div>\\n            <div class=\\\"btn-group ml-md-3 mr-1 mr-md-3\\\">\\n              <button type=\\\"button\\\" [routerLink]=\\\"['/home']\\\"\\n                class=\\\"btn btn-outline-warning d-flex mx-auto mt-2\\\">{{'register.quitButton' | translate }}</button>\\n            </div>\\n            <div class=\\\"btn-group ml-md-3\\\">\\n              <button type=\\\"button\\\"  class=\\\"btn btn-outline-danger d-flex mx-auto mt-2\\\" (click)=\\\"openModal()\\\">{{'profile.deleteButton' | translate }}</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-1\\\"></div>\\n</div>\\n\\n<!-- Confirm Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"confirmModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"confirmModalLabel\\\"\\n  aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <form [formGroup]=\\\"modalForm\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"confirmModalLabel\\\">{{ 'profile.modalHeader' | translate }}</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n          <input type=\\\"password\\\" class=\\\"form-control shadow-sm\\\" id=\\\"modalFormPassword\\\" formControlName=\\\"modalFormPassword\\\"\\n          placeholder=\\\"{{'register.passwordConfirm' | translate }}\\\">\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" type=\\\"submit\\\" (click)=\\\"confirmAndValidatePassword()\\\" class=\\\"btn btn-outline-warning\\\" data-dismiss=\\\"modal\\\" [disabled]=\\\"!modalForm.valid\\\">{{ 'profile.confirmButton' | translate }}</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" data-dismiss=\\\"modal\\\">{{ 'register.quitButton' | translate }}</button>\\n      </div>\\n    </form>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- Deletemodal -->\\n<div class=\\\"modal-backdrop fade in\\\" [ngStyle]=\\\"{'display':display}\\\"></div>\\n<div *ngIf=\\\"modalIsOpen\\\" class=\\\"modal\\\" [ngStyle]=\\\"{'display': display}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\">{{ 'profile.deleteButton' | translate}}</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeModal()\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n          {{ 'profile.deleteQuestion' | translate}}\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-outline-warning\\\" (click)=\\\"deleteProfile()\\\">{{ 'profile.deleteButton' | translate}}</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"closeModal()\\\">{{ 'register.quitButton' | translate}}</button>\\n      </div>\\n  </div>\\n  </div>\\n</div>\\n\"","module.exports = \"#editFormOffers {\\n  padding: 0;\\n  border: none; }\\n\\n#editFormActivities {\\n  padding: 0;\\n  border: none; }\\n\\n#editFormCity {\\n  padding: 0;\\n  border: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcm9maWxlLXBhZ2UvRDpcXFVzZXJzXFxCS1VcXEFybmVTY2hhY2hlclxcRG9jdW1lbnRzXFxVTklcXFdJLTQwMyBXZWJhbndlbmR1bmdlblxcdGFuZGVtUGFydG5lcjMtLS1Gcm9udEVuZFxcYW5ndWxhci9zcmNcXGFwcFxcY29tcG9uZW50c1xccHJvZmlsZS1wYWdlXFxwcm9maWxlLXBhZ2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFVO0VBQ1YsWUFBWSxFQUFBOztBQUdkO0VBQ0UsVUFBVTtFQUNWLFlBQVksRUFBQTs7QUFHZDtFQUNFLFVBQVU7RUFDVixZQUFZLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3Byb2ZpbGUtcGFnZS9wcm9maWxlLXBhZ2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjZWRpdEZvcm1PZmZlcnN7XHJcbiAgcGFkZGluZzogMDtcclxuICBib3JkZXI6IG5vbmU7XHJcbn1cclxuXHJcbiNlZGl0Rm9ybUFjdGl2aXRpZXN7XHJcbiAgcGFkZGluZzogMDtcclxuICBib3JkZXI6IG5vbmU7XHJcbn1cclxuXHJcbiNlZGl0Rm9ybUNpdHkge1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgYm9yZGVyOiBub25lO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder, AbstractControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserStoreService } from 'src/app/services/user-store.service';\nimport { User } from 'src/app/models/user';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UtilityStoreService } from '../../services/utility-store.service';\nimport { Md5 } from 'ts-md5';\nimport { TranslateService, DefaultLangChangeEvent } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-profile-page',\n  templateUrl: './profile-page.component.html',\n  styleUrls: ['./profile-page.component.scss']\n})\nexport class ProfilePageComponent implements OnInit {\n\n  md5 = new Md5();\n  md52 = new Md5();\n  currentUser;\n  userId: string;\n  editForm: FormGroup;\n  modalForm: FormGroup;\n\n  // for showing available offers, activities & cities\n  offers: any[];\n  activities: any[];\n  cities: string[];\n  sex: string[];\n\n  // for loading/saving the selected fields\n  selectedOffers: any[];\n  selectedActivities: any[];\n  selectedCity;\n  selectedSex: string;\n\n  // for selecting fields\n  selectCitySettings = {};\n  selectOffersActivitiesSettings = {};\n\n  // for passwordConfirming in confirmModal\n  updateSuccess = false;\n  invalidPassword = false;\n\n  // for modal\n  display = 'none';\n  modalIsOpen = false;\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private userStoreService: UserStoreService,\n    private authService: AuthService,\n    private utliltyStoreService: UtilityStoreService,\n    private translateService: TranslateService) {\n\n    this.editForm = this.createEditForm();\n    this.modalForm = this.createModalForm();\n  }\n\n  ngOnInit() {\n    // initialzie all available offers & activities\n    this.setAllUtilities();\n    this.translateService.onDefaultLangChange.subscribe((event: DefaultLangChangeEvent) => {\n      this.setAllUtilities();\n    });\n\n    this.userStoreService.getUserById(this.authService.currentUserID).subscribe((recievedUser: User) => {\n      this.selectedSex = this.parseSexValueForFrontend(recievedUser.sex);\n      this.selectedActivities = this.parseActivitiesForFrontend(recievedUser.activities);\n      this.selectedOffers = this.parseOffersForFrontend(recievedUser.offers);\n      this.selectedCity = Array.of(this.cities[recievedUser.city]);\n      this.editForm.get('editFormFirstname').setValue(recievedUser.firstname);\n      this.editForm.get('editFormLastname').setValue(recievedUser.lastname);\n      this.editForm.get('editFormMail').setValue(this.authService.currentUserMail);\n      this.editForm.get('editFormBirthday').setValue(new Date(recievedUser.dateOfBirth));\n      // modalForm valid status will be validated, therefore has to be initialized in ngOnInit()\n      this.modalForm.get('modalFormPassword');\n    }, error => {\n      console.log('Error in profile-page - TODO delete this console.log() before finishing WebProg!');\n    });\n\n    this.initializeMultiselectSettings();\n  }\n\n  setAllUtilities() {\n    this.cities = this.utliltyStoreService.getAllCities(this.translateService.getDefaultLang());\n    this.offers = this.utliltyStoreService.getAllOffers(this.translateService.getDefaultLang());\n    this.activities = this.utliltyStoreService.getAllActivities(this.translateService.getDefaultLang());\n    this.sex = this.utliltyStoreService.getAllSex(this.translateService.getDefaultLang());\n  }\n\n  createEditForm() {\n    // create the formGroup\n    return this.formBuilder.group({\n      // the field only contains letters or spaces\n      editFormFirstname: ['', [Validators.required, Validators.pattern('[a-zA-ZäÄüÜöÖß]*')]],\n\n      // the field only contains letters or spaces\n      editFormLastname: ['', [Validators.required, Validators.pattern('[a-zA-ZäÄüÜöÖß]*')]],\n\n      editFormMail: ['', [Validators.required, Validators.email]],\n\n      editFormBirthday: [{ value: '', disabled: true }],\n\n      // at least 6 characters, must contain at least 1 uppercase letter, 1 lowercase letter, and 1 number, can contain special characters\n      // tslint:disable-next-line:max-line-length\n      editFormPassword: ['', [Validators.pattern('^(?=[^A-Z]*[A-Z])(?=[^a-z]*[a-z])(?=\\\\D*\\\\d).{6,16}$')]],\n\n      // at least 6 characters, must contain at least 1 uppercase letter, 1 lowercase letter, and 1 number, can contain special characters\n      // tslint:disable-next-line:max-line-length\n      editFormPasswordConfirm: ['', [Validators.pattern('^(?=[^A-Z]*[A-Z])(?=[^a-z]*[a-z])(?=\\\\D*\\\\d).{6,16}$')]]\n      // adds the custom validator for validating the passwords og their matching\n    }, { validator: this.passwordMatchValidator });\n\n  }\n\n  createModalForm() {\n    return this.formBuilder.group({\n      modalFormPassword: ['', [Validators.required]]\n    });\n  }\n\n  initializeMultiselectSettings() {\n\n    this.selectCitySettings = {\n      singleSelection: true,\n      idField: 'item_id',\n      textField: 'item_text',\n      enableCheckAll: false,\n      allowSearchFilter: true,\n      closeDropDownOnSelection: true\n    };\n    // selecting settings for the select fields of offers and activities\n    this.selectOffersActivitiesSettings = {\n      singleSelection: false,\n      idField: 'item_id',\n      textField: 'item_text',\n      enableCheckAll: false,\n      itemsShowLimit: 3,\n      allowSearchFilter: true\n    };\n  }\n\n  parseSexValueForFrontend(sexIndex: number): string {\n    return this.sex[sexIndex];\n  }\n\n  parseSexValueForBackend(sex: string): number {\n    return this.sex.indexOf(sex);\n  }\n\n  parseActivitiesForFrontend(selectedActivitiesIndexes: number[]) {\n    const selectedActivities: string[] = [];\n\n    selectedActivitiesIndexes.forEach(activitiyIndex => {\n      selectedActivities.push(this.activities[activitiyIndex]);\n    });\n    return selectedActivities;\n  }\n\n  parseActivitiesForBackend(selectedActivities: string[]) {\n    const selectedActivitiesIndexes: number[] = [];\n\n    selectedActivities.forEach(activity => {\n      selectedActivitiesIndexes.push(this.activities.indexOf(activity));\n    });\n    return selectedActivitiesIndexes;\n  }\n\n  parseOffersForFrontend(selectedOffersIndexes: number[]) {\n    const selectedOffers: string[] = [];\n\n    selectedOffersIndexes.forEach(offerIndex => {\n      selectedOffers.push(this.offers[offerIndex]);\n    });\n    return selectedOffers;\n  }\n\n  parseOffersForBackend(selectedOffers: string[]) {\n    const selectedOffersIndexes: number[] = [];\n\n    selectedOffers.forEach(offer => {\n      selectedOffersIndexes.push(this.offers.indexOf(offer));\n    });\n    return selectedOffersIndexes;\n  }\n\n  // validate the passwords whether they are matching\n  passwordMatchValidator(control: AbstractControl): { invalid: boolean } {\n    if (control.get('editFormPassword').value !== control.get('editFormPasswordConfirm').value) {\n      return { invalid: true };\n    }\n  }\n\n  confirmAndValidatePassword() {\n\n    // hash the input for conclusion with the saved password in firebase's Auth\n    const password: string = this.md52.appendStr(this.authService.currentUserMail)\n    .appendStr(this.modalForm.value.modalFormPassword).end() as string;\n\n    this.authService.validatePassword(password)\n    // when password was correct start editFormSave()\n    .then(() => {\n      this.invalidPassword = false;\n      this.editFormSave();\n    })\n    // when the password was incorrect, show the specific message\n    .catch(() => {\n      this.updateSuccess = false;\n      this.invalidPassword = true;\n      setTimeout(() => {\n        this.invalidPassword = false;\n      }, 3000);\n      this.modalForm.reset();\n    });\n  }\n\n  // validate the input & select fields and send the mail & password to Firebase Authentication\n  // after that the rest of userdata incl. the recieved UserID will be send to the API(Firebase Cloud Functions)\n  editFormSave() {\n\n    if (this.editForm.invalid) {\n      return;\n    }\n\n    let userdata;\n    const mail = this.editForm.value.editFormMail;\n    const password = this.editForm.value.editFormPassword;\n    if (!!mail && !!password) {\n      // get data from the inputfields\n      userdata = {\n        firstname: this.editForm.value.editFormFirstname,\n        lastname: this.editForm.value.editFormLastname,\n        city: this.cities.indexOf(this.selectedCity[0]),\n        dateOfBirth: this.editForm.value.editFormBirthday,\n        // get the only one item from selectedSex-Array\n        sex: this.parseSexValueForBackend(this.selectedSex),\n        activities: this.parseActivitiesForBackend(this.selectedActivities),\n        offers: this.parseOffersForBackend(this.selectedOffers),\n        mail,\n        password: this.md5.appendStr(mail)\n          .appendStr(password).end()\n      };\n\n      this.userStoreService.updateUser(this.authService.currentUserID, userdata).subscribe(() => {\n        // show the updateSuccess message\n        this.updateSuccess = true;\n        setTimeout(() => {\n          this.updateSuccess = false;\n        }, 3000);\n        this.modalForm.reset();\n\n        this.authService.logout();\n      });\n    } else {\n      userdata = {\n        firstname: this.editForm.value.editFormFirstname,\n        lastname: this.editForm.value.editFormLastname,\n        city: this.cities.indexOf(this.selectedCity[0]),\n        dateOfBirth: this.editForm.value.editFormBirthday,\n        // get the only one item from selectedSex-Array\n        sex: this.parseSexValueForBackend(this.selectedSex),\n        activities: this.parseActivitiesForBackend(this.selectedActivities),\n        offers: this.parseOffersForBackend(this.selectedOffers)\n      };\n\n      this.userStoreService.updateUser(this.authService.currentUserID, userdata).subscribe(() => {\n        // show the updateSuccess message\n        this.updateSuccess = true;\n        setTimeout(() => {\n          this.updateSuccess = false;\n        }, 3000);\n        this.modalForm.reset();\n      });\n    } // end else\n  }\n\n  // deleteUser() {\n  //   this.userStoreService.deleteUser(this.authService.currentUserID).subscribe(() => {\n  //     this.authService.logout();\n  //   });\n  // }\n\n\n  // getter for the inputfields\n  get editFormFirstname() {\n    return this.editForm.get('editFormFirstname');\n  }\n\n  get editFormLastname() {\n    return this.editForm.get('editFormLastname');\n  }\n\n  get editFormBirthday() {\n    return this.editForm.get('editFormBirthday');\n  }\n\n  get editFormMail() {\n    return this.editForm.get('editFormMail');\n  }\n\n  get editFormPassword() {\n    return this.editForm.get('editFormPassword');\n  }\n  get editFormPasswordConfirm() {\n    return this.editForm.get('editFormPasswordConfirm');\n  }\n\n  get modalFormPassword() {\n    return this.editForm.get('modalFormPassword');\n  }\n\n\n  openModal(id: string) {\n    console.log('id: ' + id);\n    this.modalIsOpen = true;\n    this.display = 'block';\n\n  }\n\n  closeModal() {\n    this.display = 'none';\n    this.modalIsOpen = false;\n  }\n\n  deleteProfile() {\n    this.userStoreService.deleteUser(this.authService.currentUserID).subscribe(() => {\n      this.closeModal();\n      this.authService.logout().then(() => {\n        alert('Profil wurde gelöscht');\n      });\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVnaXN0ZXItcGFnZS9yZWdpc3Rlci1wYWdlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-1\\\"></div>\\n  <div class=\\\"col-10\\\">\\n    <div class=\\\"card mx-auto my-5 shadow\\\">\\n      <div class=\\\"card-header bg-warning text-center h5\\\">\\n        {{'register.headerTitle' | translate }}\\n      </div>\\n      <div class=\\\"card-body\\\">\\n        <form class=\\\"\\\" [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"registerFormSave()\\\" novalidate>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label for=\\\"registerFormFirstname\\\">{{'register.firstname' | translate }}*</label>\\n              <input type=\\\"text\\\" class=\\\"form-control shadow-sm\\\" id=\\\"registerFormFirstname\\\"\\n                formControlName=\\\"registerFormFirstname\\\" placeholder=\\\"{{'register.firstname' | translate }}\\\">\\n            </div>\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label for=\\\"registerFormLastname\\\">{{'register.lastname' | translate }}*</label>\\n              <input type=\\\"text\\\" class=\\\"form-control shadow-sm\\\" id=\\\"registerFormLastname\\\"\\n                formControlName=\\\"registerFormLastname\\\" placeholder=\\\"{{'register.lastname' | translate }}\\\">\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 form-group\\\">\\n              <label for=\\\"registerFormSex\\\">{{'register.sex' | translate }}*</label>\\n              <ng-multiselect-dropdown class=\\\"form-control shadow-sm\\\" id=\\\"registerFormSex\\\" #registerFormSex=\\\"ngModel\\\"\\n                [placeholder]=\\\"'register.pleaseChoose' | translate\\\" [data]=\\\"sex\\\" [(ngModel)]=\\\"selectedSex\\\"\\n                [ngModelOptions]=\\\"{ standalone : true }\\\" [settings]=\\\"selectSexSettings\\\" required>\\n              </ng-multiselect-dropdown>\\n\\n            </div>\\n            <div class=\\\"col-md-6 form-group\\\">\\n              <label>{{'register.mail' | translate }}*</label>\\n              <input type=\\\"text\\\" class=\\\"form-control shadow-sm\\\" id=\\\"registerFormMail\\\" formControlName=\\\"registerFormMail\\\"\\n                placeholder=\\\"name@example.com\\\">\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 form-group\\\">\\n              <label for=\\\"registerFormCity\\\">{{'register.city' | translate }}*</label>\\n              <ng-multiselect-dropdown class=\\\"form-control shadow-sm\\\" id=\\\"registerFormCity\\\" #registerFormCity=\\\"ngModel\\\"\\n                [placeholder]=\\\"'register.pleaseChoose' | translate\\\" [data]=\\\"cities\\\" [(ngModel)]=\\\"selectedCity\\\"\\n                [ngModelOptions]=\\\"{ standalone : true }\\\" [settings]=\\\"selectCitySettings\\\" required>\\n              </ng-multiselect-dropdown>\\n            </div>\\n            <div class=\\\"col-md-6 form-group\\\">\\n              <label for=\\\"registerFormBirthday\\\">{{'register.birthday' | translate }}*</label>\\n              <input type=\\\"text\\\" [placeholder]=\\\"'register.birthdayShort' | translate\\\" class=\\\"form-control shadow-sm\\\"\\n                bsDatepicker id=\\\"registerFormBirthday\\\" formControlName=\\\"registerFormBirthday\\\"\\n                [bsConfig]=\\\"{ dateInputFormat: 'DD.MM.YYYY', containerClass: 'theme-orange' }\\\">\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 form-group\\\">\\n              <label for=\\\"registerFormOffers\\\">{{'register.offers' | translate }}:*</label>\\n              <ng-multiselect-dropdown class=\\\"form-control shadow-sm\\\" id=\\\"registerFormOffers\\\"\\n                #registerFormOffers=\\\"ngModel\\\" [placeholder]=\\\"'register.pleaseChoose' | translate\\\" [data]=\\\"offers\\\"\\n                [(ngModel)]=\\\"selectedOffers\\\" [ngModelOptions]=\\\"{ standalone : true }\\\"\\n                [settings]=\\\"selectOffersActivitiesSettings\\\" required>\\n              </ng-multiselect-dropdown>\\n            </div>\\n            <div class=\\\"col-md-6 form-group\\\">\\n              <label for=\\\"registerFormActivities\\\">{{'register.activities' | translate }}:*</label>\\n              <ng-multiselect-dropdown class=\\\"form-control shadow-sm\\\" id=\\\"registerFormActivities\\\"\\n                #registerFormActivities=\\\"ngModel\\\" [placeholder]=\\\"'register.pleaseChoose' | translate\\\"\\n                [data]=\\\"activities\\\" [(ngModel)]=\\\"selectedActivities\\\" [ngModelOptions]=\\\"{ standalone : true }\\\"\\n                [settings]=\\\"selectOffersActivitiesSettings\\\" required>\\n              </ng-multiselect-dropdown>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 form-group\\\">\\n              <label>{{'register.password' | translate }}*</label>\\n              <input type=\\\"password\\\" class=\\\"form-control shadow-sm\\\" id=\\\"registerFormPassword\\\"\\n                formControlName=\\\"registerFormPassword\\\" placeholder=\\\"{{'register.password' | translate }}\\\">\\n            </div>\\n            <div class=\\\"col-md-6 form-group\\\">\\n              <label>{{'register.passwordConfirm' | translate }}*</label>\\n              <input type=\\\"password\\\" class=\\\"form-control shadow-sm\\\" id=\\\"registerFormPasswordConfirm\\\"\\n                formControlName=\\\"registerFormPasswordConfirm\\\" placeholder=\\\"{{'register.passwordConfirm' | translate }}\\\">\\n            </div>\\n          </div>\\n\\n          <!--Validator messages-->\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"registerFormFirstname.errors && (registerFormFirstname.touched || registerFormFirstname.dirty)\\\">\\n            <div *ngIf=\\\"registerFormFirstname.errors.required\\\">{{'register.firstname' | translate }}\\n              {{'validators.required' | translate }}</div>\\n            <div *ngIf=\\\"registerFormFirstname.errors.pattern\\\">{{'validators.letterSpaces' | translate }}</div>\\n          </div>\\n\\n          <!--Validator messages-->\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"registerFormFirstname.errors && (registerFormFirstname.touched || registerFormFirstname.dirty)\\\">\\n            <div *ngIf=\\\"registerFormFirstname.errors.required\\\">{{'register.firstname' | translate }}\\n              {{'validators.required' | translate }}</div>\\n            <div *ngIf=\\\"registerFormFirstname.errors.pattern\\\">{{'validators.letterSpaces' | translate }}</div>\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"registerFormLastname.errors && (registerFormLastname.touched || registerFormLastname.dirty)\\\">\\n            <div *ngIf=\\\"registerFormLastname.errors.required\\\">{{'register.lastname' | translate }}\\n              {{'validators.required' | translate }}</div>\\n            <div *ngIf=\\\"registerFormLastname.errors.pattern\\\">{{'validators.letterSpaces' | translate }}</div>\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"registerFormMail.errors && (registerFormMail.touched || registerFormMail.dirty)\\\">\\n            <div *ngIf=\\\"registerFormMail.errors.required\\\">{{'register.mail' | translate }}\\n              {{'validators.required' | translate }}</div>\\n            <div *ngIf=\\\"registerFormMail.errors.email\\\">{{'validators.email' | translate }}</div>\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"registerFormPassword.errors && (registerFormPassword.touched || registerFormPassword.dirty)\\\">\\n            <div *ngIf=\\\"registerFormPassword.errors.required\\\">{{'register.password' | translate }}\\n              {{'validators.required' | translate }}</div>\\n            <div *ngIf=\\\"registerFormPassword.errors.pattern\\\">{{'validators.passwordPattern' | translate }}</div>\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"registerFormPasswordConfirm.errors && (registerFormPasswordConfirm.touched || registerFormPasswordConfirm.dirty)\\\">\\n            <div *ngIf=\\\"registerFormPasswordConfirm.errors.required\\\">{{'register.passwordConfirm' | translate }}\\n              {{'validators.required' | translate }}</div>\\n            <div *ngIf=\\\"registerFormPassword.errors.pattern\\\">{{'validators.passwordPattern' | translate }}</div>\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"registerFormPassword.value != registerFormPasswordConfirm.value && registerFormPasswordConfirm.value != null\\\">\\n            {{'validators.passwordMismatch' | translate }}\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"registerFormSex.errors && (registerFormSex.touched || registerFormSex.dirty)\\\">\\n            <div *ngIf=\\\"registerFormSex.errors.required\\\" class=\\\"alert-danger\\\">{{'register.sex' | translate }}\\n              {{'validators.required' | translate }}</div>\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"registerFormOffers.errors && (registerFormOffers.touched || registerFormOffers.dirty)\\\">\\n            <div *ngIf=\\\"registerFormOffers.errors.required\\\" class=\\\"alert-danger\\\">{{'validators.minOffers' | translate }}\\n            </div>\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"registerFormActivities.errors && (registerFormActivities.touched || registerFormActivities.dirty)\\\">\\n            <div *ngIf=\\\"registerFormActivities.errors.required\\\" class=\\\"alert-danger\\\">\\n              {{'validators.minActivities' | translate }}</div>\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"registerFormCity.errors && (registerFormCity.touched || registerFormCity.dirty)\\\">\\n            <div *ngIf=\\\"registerFormCity.errors.required\\\" class=\\\"alert-danger\\\">{{'validators.city' | translate }}</div>\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\"\\n            *ngIf=\\\"registerFormBirthday.errors && (registerFormBirthday.touched || registerFormBirthday.dirty)\\\">\\n            <div *ngIf=\\\"registerFormBirthday.errors.required\\\" class=\\\"alert-danger\\\">\\n              {{'validators.birthday' | translate }}</div>\\n          </div>\\n          <!--End-Validator messages-->\\n\\n          <div class=\\\"btn-toolbar d-flex justify-content-center\\\" role=\\\"toolbar\\\">\\n            <div class=\\\"btn-group mr-1 mr-md-3\\\">\\n              <button type=\\\"button\\\" type=\\\"submit\\\" class=\\\"btn btn-warning d-flex mx-auto mt-2\\\"\\n                [disabled]=\\\"(!registerForm.valid || !registerFormOffers.valid || !registerFormActivities.valid || !registerFormCity.valid)\\\">{{'register.saveButton' | translate }}</button>\\n            </div>\\n            <div class=\\\"btn-group ml-md-3\\\">\\n              <button type=\\\"button\\\" [routerLink]=\\\"['/login']\\\"\\n                class=\\\"btn btn-outline-warning d-flex mx-auto mt-2\\\">{{'register.quitButton' | translate }}</button>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n      <p class=\\\"d-flex justify-content-end text-black-50 mr-4\\\"><small>*\\n          {{'register.requiredExplanation' | translate }}</small></p>\\n    </div>\\n    <!--card-->\\n  </div>\\n  <!--col-10-->\\n  <div class=\\\"col-1\\\"></div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormGroup, FormBuilder, AbstractControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserStoreService } from 'src/app/services/user-store.service';\nimport { UtilityStoreService } from '../../services/utility-store.service';\nimport { Md5 } from 'ts-md5';\nimport { TranslateService, DefaultLangChangeEvent } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-register-page',\n  templateUrl: './register-page.component.html',\n  styleUrls: ['./register-page.component.css']\n})\nexport class RegisterPageComponent implements OnInit {\n\n  md5 = new Md5();\n  registerForm: FormGroup;\n\n  sex: any[];\n  offers: any[];\n  activities: any[];\n  cities: string[];\n\n  selectedOffers: any[];\n  selectedActivities: any[];\n  selectedCity: any;     // TODO check if this is seen as an array.\n  selectedSex: any[];\n\n  selectOffersActivitiesSettings = {};\n  selectSexSettings = {};\n  selectCitySettings = {};\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private userStoreService: UserStoreService,\n    private utliltyStoreService: UtilityStoreService,\n    private translateService: TranslateService) {\n\n    this.registerForm = this.createRegisterForm();\n  }\n\n  ngOnInit() {\n    // initialzie all available offers & activities\n    this.setAllUtilities();\n    this.translateService.onDefaultLangChange.subscribe((event: DefaultLangChangeEvent) => {\n      this.setAllUtilities();\n    });\n    this.initializeMultiselectSettings();\n  }\n\n  setAllUtilities() {\n    this.cities = this.utliltyStoreService.getAllCities(this.translateService.getDefaultLang());\n    this.offers = this.utliltyStoreService.getAllOffers(this.translateService.getDefaultLang());\n    this.activities = this.utliltyStoreService.getAllActivities(this.translateService.getDefaultLang());\n    this.sex = this.utliltyStoreService.getAllSex(this.translateService.getDefaultLang());\n  }\n\n  createRegisterForm() {\n    // create the formGroup\n    return this.formBuilder.group({\n      // the field only contains letters or spaces\n      registerFormFirstname: ['', [Validators.required, Validators.pattern('[a-zA-ZäÄüÜöÖß]*')]],\n\n      // the field only contains letters or spaces\n      registerFormLastname: ['', [Validators.required, Validators.pattern('[a-zA-ZäÄüÜöÖß]*')]],\n\n      registerFormMail: ['', [Validators.required, Validators.email]],\n\n      registerFormBirthday: ['', Validators.required],\n\n      // at least 6 characters, must contain at least 1 uppercase letter, 1 lowercase letter, and 1 number, can contain special characters\n      // tslint:disable-next-line:max-line-length\n      registerFormPassword: ['', [Validators.required, Validators.pattern('^(?=[^A-Z]*[A-Z])(?=[^a-z]*[a-z])(?=\\\\D*\\\\d).{6,}$')]],\n\n      // at least 6 characters, must contain at least 1 uppercase letter, 1 lowercase letter, and 1 number, can contain special characters\n      // tslint:disable-next-line:max-line-length\n      registerFormPasswordConfirm: ['', [Validators.required, Validators.pattern('^(?=[^A-Z]*[A-Z])(?=[^a-z]*[a-z])(?=\\\\D*\\\\d).{6,}$')]]\n        // adds the custom validator for validating the passwords og their matching\n    }, { validator: this.passwordMatchValidator});\n\n  }\n\n  initializeMultiselectSettings() {\n    // selecting settings for the select fields of choosing the sex\n    this.selectSexSettings = {\n      singleSelection: true,\n      idField: 'item_id',\n      textField: 'item_text',\n      enableCheckAll: false,\n      allowSearchFilter: false,\n      closeDropDownOnSelection: true\n    };\n\n    this.selectCitySettings = {\n      singleSelection: true,\n      idField: 'item_id',\n      textField: 'item_text',\n      enableCheckAll: false,\n      allowSearchFilter: true,\n      closeDropDownOnSelection: true\n    };\n\n    // selecting settings for the select fields of offers and activities\n    this.selectOffersActivitiesSettings = {\n      singleSelection: false,\n      idField: 'item_id',\n      textField: 'item_text',\n      enableCheckAll: false,\n      itemsShowLimit: 3,\n      allowSearchFilter: true\n    };\n  }\n\n  // validate the passwords whether they are matching\n  passwordMatchValidator(control: AbstractControl): { invalid: boolean } {\n    if (control.get('registerFormPassword').value !== control.get('registerFormPasswordConfirm').value) {\n      return { invalid: true };\n    }\n  }\n\n  // validate the input & select fields and send the mail & password to Firebase Authentication\n  // after that the rest of userdata incl. the recieved UserID will be send to the API(Firebase Cloud Functions)\n  registerFormSave() {\n\n    if (this.registerForm.invalid) {\n      return;\n    }\n    // get data from the inputfields\n    const userdata = {\n      firstname: this.registerForm.value.registerFormFirstname,\n      lastname: this.registerForm.value.registerFormLastname,\n      city: this.cities.indexOf(this.selectedCity[0]),\n      dateOfBirth: Number(this.registerForm.value.registerFormBirthday),\n      // get the only one item from selectedSex-Array\n      sex: this.parseSexValueForBackend(this.selectedSex[0]),\n      activities: this.parseActivitiesForBackend(this.selectedActivities),\n      offers: this.parseOffersForBackend(this.selectedOffers),\n      mail: this.registerForm.value.registerFormMail,\n      password: this.md5.appendStr(this.registerForm.value.registerFormMail)\n        .appendStr(this.registerForm.value.registerFormPassword).end()\n    };\n    // create new user in Firebase Authentication and Cloud Firestore\n    this.userStoreService.createUser(userdata).subscribe(() => {\n      // then go to page 'login'\n      this.router.navigate(['/login']);\n    });\n\n  }\n\n  parseSexValueForBackend(sex: string) {\n    return this.sex.indexOf(sex);\n  }\n\n  parseActivitiesForBackend(selectedActivities: string[]) {\n    const selectedActivitiesIndexes: number[] = [];\n\n    selectedActivities.forEach(activity => {\n      selectedActivitiesIndexes.push(this.activities.indexOf(activity));\n    });\n    return selectedActivitiesIndexes;\n  }\n\n  parseOffersForBackend(selectedOffers: string[]) {\n    const selectedOffersIndexes: number[] = [];\n\n    selectedOffers.forEach(offer => {\n      selectedOffersIndexes.push(this.offers.indexOf(offer));\n    });\n    return selectedOffersIndexes;\n  }\n\n  // getter for the inputfields\n  get registerFormFirstname() {\n    return this.registerForm.get('registerFormFirstname');\n  }\n\n  get registerFormLastname() {\n    return this.registerForm.get('registerFormLastname');\n  }\n\n  get registerFormBirthday() {\n    return this.registerForm.get('registerFormBirthday');\n  }\n\n  get registerFormMail() {\n    return this.registerForm.get('registerFormMail');\n  }\n\n  get registerFormPassword() {\n    return this.registerForm.get('registerFormPassword');\n  }\n\n  get registerFormPasswordConfirm() {\n    return this.registerForm.get('registerFormPasswordConfirm');\n  }\n\n}\n","module.exports = \"<div class=\\\"row my-5\\\">\\n  <div class=\\\"col-1\\\"></div>\\n  <div class=\\\"col-10\\\">\\n    <div *ngIf=\\\"searchResultLength, else elseBlock\\\"> <!-- TODO Need something else to check, if there are any results -->\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header bg-transparent text-center border-warning\\\">\\n          <h2 class=\\\"font-weight-light\\\">{{ 'result.results' | translate }}</h2>\\n        </div>\\n        <div class=\\\"card-body mx-5\\\">\\n          <!-- show all accepted matches which are saved in acceptedMatches[]-->\\n          <div\\n            *ngFor=\\\"let user of searchResults$ | sort:'commonActivities' | paginate: { itemsPerPage: 5, currentPage: pageNumber } \\\"> <!--  -->\\n            <div class=\\\"card shadow my-3\\\">\\n              <div class=\\\"card-body accepted-match-cards\\\">\\n                <div class=\\\"card-text\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-8 col-md-10\\\">\\n                      <p class=\\\"my-0\\\"><small><b>{{ user.firstname }} {{ user.lastname }}</b></small></p>\\n                      <p class=\\\"my-0\\\"><small><i>{{ parseSexValueForFrontend(user.sex) }}</i></small></p>\\n                      <p class=\\\"my-0\\\"><small><i>{{ parseCityForFrontend(user.city) }}</i></small></p>\\n                      <p class=\\\"my-0\\\"><small><i>{{ calculateAge(user.dateOfBirth) }} {{ 'result.age' | translate }}</i></small></p>\\n                      <p class=\\\"my-0\\\"><small><i>{{ 'result.activities' | translate }}</i>: {{activitiesForModal(parseActivitiesForFrontend(user.activities))}}</small></p>\\n                      <p class=\\\"my-0\\\"><small><i>{{ 'result.commonActivities' | translate }}</i>: <b>{{activitiesForModal(parseActivitiesForFrontend(user.commonActivities))}}</b></small></p>\\n                    </div>\\n                    <div class=\\\"col-4 col-md-2 d-flex justify-content-end my-auto\\\">\\n                      <button type=\\\"button\\\" class=\\\"btn btn-outline-success homebutton\\\" (click)=\\\"sendMatchrequest(user)\\\"\\n                        data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\"\\n                        title=\\\"{{ 'result.sendMatchrequestTooltip' | translate }}\\\">\\n                        <fa-icon [icon]=\\\"faUserCheck\\\"></fa-icon>\\n                      </button>\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n          <!--ngFor-->\\n\\n          <!--controls for pagination, which are only visible at the length of matchRequest-array bigger than 5-->\\n          <pagination-controls autoHide=\\\"true\\\" class=\\\"pagination justify-content-center\\\"\\n            (pageChange)=\\\"pageNumber = $event\\\" previousLabel=\\\"{{'home.previous' | translate }}\\\"\\n            nextLabel=\\\"{{'home.next' | translate }}\\\">\\n          </pagination-controls>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- if there are no matchrequests-->\\n    <ng-template #elseBlock>\\n      <p class=\\\"text-center\\\">{{ 'result.noResults' | translate}}</p>\\n    </ng-template>\\n  </div>\\n  <!--col-10-->\\n  <div class=\\\"col-1\\\"></div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVzdWx0LXBhZ2UvcmVzdWx0LXBhZ2UuY29tcG9uZW50LnNjc3MifQ== */\"","import { TranslateService, DefaultLangChangeEvent } from '@ngx-translate/core';\nimport { UtilityStoreService } from './../../services/utility-store.service';\nimport { Searchrequest } from './../../models/searchrequest';\nimport { ActivatedRoute } from '@angular/router';\nimport { SearchService } from './../../services/search.service';\nimport { AuthService } from './../../services/auth.service';\nimport { MatchStoreService } from './../../services/match-store.service';\nimport { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user';\nimport { faUserCheck } from '@fortawesome/free-solid-svg-icons';\nimport { Match } from '../..//models/match';\n\n@Component({\n  selector: 'app-result-page',\n  templateUrl: './result-page.component.html',\n  styleUrls: ['./result-page.component.scss']\n})\nexport class ResultPageComponent implements OnInit {\n\n  // input variables for searchparams and the Link for getting the result is required!!\n  faUserCheck = faUserCheck;\n\n  // for pagination the array\n  pageNumber: 1;\n\n  userForSpecificRequest: User[] = [];\n  usersToBeExcludedArray: string[] = [];\n\n  cities;\n  activities;\n  sex;\n\n  searchResults$;\n  searchResultLength: number;\n\n  matchedOffer;\n\n  constructor(\n    private matchStoreService: MatchStoreService,\n    private authService: AuthService,\n    private searchService: SearchService,\n    private route: ActivatedRoute,\n    private utliltyStoreService: UtilityStoreService,\n    private translateService: TranslateService\n  ) { }\n\n  ngOnInit() {\n    this.setAllUtilities();\n    this.translateService.onDefaultLangChange.subscribe((event: DefaultLangChangeEvent) => {\n      this.setAllUtilities();\n    });\n    const searchRequestId = this.route.snapshot.paramMap.get('id');\n    this.searchService.getSearchRequestById(searchRequestId).subscribe((searchRequest: Searchrequest) => {\n      if (searchRequest.offerParam !== undefined) {\n        this.matchedOffer = searchRequest.offerParam; // TODO check, if the error message occures again, even inside the if-clause\n      }\n      // TODO subscribe in a subscribe is bad code. Try to fix this!\n      this.searchService.getSearchResult(searchRequest).subscribe(searchResults => {\n        this.searchResultLength = searchResults.length;\n        this.searchResults$ = searchResults;\n      }, error => {\n        console.log('Error in profile-page - TODO delete this console.log() before finishing WebProg!');\n      });\n    }, error => {\n      console.log('Error in profile-page - TODO delete this console.log() before finishing WebProg!');\n    });\n  }\n\n  setAllUtilities() {\n    this.cities = this.utliltyStoreService.getAllCities(this.translateService.getDefaultLang());\n    this.activities = this.utliltyStoreService.getAllActivities(this.translateService.getDefaultLang());\n    this.sex = this.utliltyStoreService.getAllSex(this.translateService.getDefaultLang());\n  }\n\n  calculateAgeForEachUser(birthdate: any) {\n    const timeDiff = Math.abs(Date.now() - birthdate);\n    const age = Math.floor((timeDiff / (1000 * 3600 * 24)) / 365);\n    return age;\n  }\n\n  activitiesForModal(activities: string[]): string {\n    let arr;\n    arr = '';\n    activities.forEach(element => {\n      arr = element + ', ' + arr;\n    });\n    return arr.substring(0, (arr.length - 2));\n  }\n\n  parseSexValueForFrontend(sexIndex: number): string {\n    return this.sex[sexIndex];\n  }\n\n  parseCityForFrontend(cityIndex: number) {\n    return this.cities[cityIndex];\n  }\n\n  parseActivitiesForFrontend(activitiesIndex: number[]) {\n    const activities: string[] = [];\n\n    activitiesIndex.forEach(activityIndex => {\n      activities.push(this.activities[activityIndex]);\n    });\n    return activities;\n  }\n\n  parseDateOfBirthForFrontend(dateOfBirth: number) {\n    const ageDifMs = Date.now() - dateOfBirth;\n    const ageDate = new Date(ageDifMs);\n    return Math.abs(ageDate.getUTCFullYear() - 1970);\n  }\n\n  sendMatchrequest(partner: User) {\n    const newMatch: Match = new Match(this.authService.currentUserID, partner.uid, this.matchedOffer, false);\n    this.matchStoreService.createMatch(newMatch).subscribe();\n  }\n\n  calculateAge(birthdate: Date): string {\n    const BD = new Date(birthdate);\n    const timeDiff = Math.abs(Date.now() - BD.getTime());\n    const age = Math.floor((timeDiff / (1000 * 3600 * 24)) / 365.25);\n    return age + '';\n  }\n\n}\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-1\\\"></div>\\n  <div class=\\\"col-10\\\">\\n    <div class=\\\"card mx-auto my-5 shadow\\\">\\n      <!--header-->\\n      <div class=\\\"card-header h5 bg-transparent d-flex justify-content-between border-warning p-0\\\">\\n        <div class=\\\"col-md-6 font-weight-light text-center pointer-cursor align-self-center border-right btn-outline-warning py-3\\\"\\n          data-toggle=\\\"collapse\\\" href=\\\"#collapseNewSearch\\\"\\n          [ngClass]=\\\"{'active':newSearchCollapsed === true}\\\"\\n          role=\\\"button\\\" aria-expanded=\\\"false\\\"\\n          aria-controls=\\\"collapseNewSearch\\\" (click)=\\\"recentRequestCollapsed=false\\\" (click)=\\\"newSearchCollapsed=true\\\">\\n          {{'search.newSearch' | translate }}\\n        </div>\\n        <div class=\\\"col-md-6 font-weight-light text-center pointer-cursor btn-outline-warning py-3\\\"\\n            [ngClass]=\\\"{'active':recentRequestCollapsed === true}\\\"\\n            data-toggle=\\\"collapse\\\" href=\\\"#collapseRecentSearches\\\"\\n            role=\\\"button\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseRecentSearches\\\"\\n            (click)=\\\"newSearchCollapsed=false\\\" (click)=\\\"recentRequestCollapsed=true\\\">\\n            {{'search.recentSearches' | translate }}\\n        </div>\\n      </div><!--header-->\\n\\n      <!--new search area-->\\n      <div *ngIf=\\\"newSearchCollapsed\\\" class=\\\"card-body\\\" id=\\\"collapseNewSearch\\\">\\n        <form class=\\\"\\\" [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"newSearchSave()\\\" novalidate>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"form-group col-md-6\\\">\\n              <label for=\\\"searchFormOffer\\\">{{'search.offer' | translate }}:*</label>\\n              <ng-multiselect-dropdown  class=\\\"form-control shadow-sm\\\" id=\\\"searchFormOffer\\\" #searchFormOffer=\\\"ngModel\\\"\\n                [placeholder]=\\\"'search.offer' | translate\\\"\\n                [data]=\\\"offers\\\"\\n                [(ngModel)]=\\\"selectedOffer\\\" [ngModelOptions]=\\\"{ standalone : true }\\\"\\n                [settings]=\\\"selectOnlyOneSettings\\\" required>\\n              </ng-multiselect-dropdown>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 form-group\\\">\\n              <label for=\\\"searchFormCity\\\">{{'search.city' | translate }}</label>\\n              <ng-multiselect-dropdown  class=\\\"form-control shadow-sm\\\" id=\\\"searchFormCity\\\" #searchFormCity=\\\"ngModel\\\"\\n                [placeholder]=\\\"'register.pleaseChoose' | translate\\\"\\n                [data]=\\\"cities\\\"\\n                [(ngModel)]=\\\"selectedCity\\\" [ngModelOptions]=\\\"{ standalone : true }\\\"\\n                [settings]=\\\"selectOnlyOneSettings\\\">\\n              </ng-multiselect-dropdown>\\n            </div>\\n            <div class=\\\"col-md-6 form-group\\\">\\n              <label for=\\\"searchFormSex\\\">{{'register.sex' | translate }}:*</label>\\n              <ng-multiselect-dropdown  class=\\\"form-control shadow-sm\\\" id=\\\"searchFormSex\\\" #searchFormSex=\\\"ngModel\\\"\\n                [placeholder]=\\\"'register.pleaseChoose' | translate\\\"\\n                [data]=\\\"sex\\\"\\n                [(ngModel)]=\\\"selectedSex\\\" [ngModelOptions]=\\\"{ standalone : true }\\\"\\n                [settings]=\\\"selectSexSettings\\\" required>\\n              </ng-multiselect-dropdown>\\n            </div>\\n            </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 form-group\\\">\\n                <label>{{'search.minAge' | translate }}</label>\\n                <input type=\\\"number\\\" class=\\\"form-control shadow-sm\\\" id=\\\"searchFormMinAge\\\" formControlName=\\\"searchFormMinAge\\\" placeholder=\\\"{{'search.minAge' | translate }}\\\">\\n            </div>\\n            <div class=\\\"col-md-6 form-group\\\">\\n                <label>{{'search.maxAge' | translate }}</label>\\n                <input type=\\\"number\\\" class=\\\"form-control shadow-sm\\\" id=\\\"searchFormMaxAge\\\" formControlName=\\\"searchFormMaxAge\\\" placeholder=\\\"{{'search.maxAge' | translate }}\\\">\\n            </div>\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"searchFormOffer.errors && (searchFormOffer.touched || searchFormOffer.dirty)\\\">\\n            <div *ngIf=\\\"searchFormOffer.errors.required\\\" class=\\\"alert-danger\\\">{{'validators.minOffers' | translate }}</div>\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"searchFormMinAge.value > searchFormMaxAge.value && searchFormMaxAge.touched\\\">\\n            {{'validators.ageMismatch' | translate }}\\n          </div>\\n\\n          <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"searchFormSex.errors && (searchFormSex.touched || searchFormSex.dirty)\\\">\\n          <div *ngIf=\\\"searchFormSex.errors.required\\\" class=\\\"alert-danger\\\">{{'register.sex' | translate }}\\n            {{'validators.required' | translate }}</div>\\n          </div>\\n\\n          <div class=\\\"row mt-2\\\" role=\\\"toolbar\\\">\\n            <div class=\\\"col-md-6\\\">\\n              <button type=\\\"button\\\" type=\\\"submit\\\" class=\\\"btn btn-warning d-flex mx-auto ml-md-auto mt-2\\\"\\n                      [disabled]=\\\"!searchFormOffer.valid || (searchFormMinAge.value > searchFormMaxAge.value  && searchFormMaxAge.touched)\\\">\\n                      {{'search.searchButton' | translate }}\\n              </button>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n              <button type=\\\"button\\\" [routerLink]=\\\"['/home']\\\" class=\\\"btn btn-outline-warning d-flex mx-auto mr-md-auto mt-2\\\" >{{'register.quitButton' | translate }}</button>\\n            </div>\\n          </div>\\n\\n        </form>\\n        <p class=\\\"d-flex justify-content-end text-black-50 mr-4 mt-5 mb-0\\\"><small>*\\n          {{'register.requiredExplanation' | translate }}</small></p>\\n      </div>\\n\\n      <!--recent searchrequests area-->\\n      <div *ngIf=\\\"recentRequestCollapsed\\\" class=\\\"card-body collapse\\\" id=\\\"collapseRecentSearches\\\">\\n        <div *ngFor=\\\"let request of recentSearchRequests$ | async\\\">\\n          <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n              <a class=\\\"pointer-cursor\\\" (click)=\\\"useRecentSearchrequest(request.id)\\\">\\n                <h5 class=\\\"font-weight-light\\\">{{ parseOfferForFrontend(request.offerParam) }}</h5>\\n                <h6 *ngIf=\\\"request.minAgeParam > 0 && request.maxAgeParam > 0\\\" class=\\\"font-weight-light\\\">{{ request.minAgeParam }} - {{request.maxAgeParam}} {{'search.years' | translate }} </h6>\\n                <h6 *ngIf=\\\"request.minAgeParam > 0 && request.maxAgeParam === 0\\\" class=\\\"font-weight-light\\\"> {{'search.from' | translate }} {{ request.minAgeParam }} {{'search.years' | translate }} </h6>\\n                <h6 *ngIf=\\\"request.minAgeParam === 0 && request.maxAgeParam > 0\\\" class=\\\"font-weight-light\\\"> {{'search.until' | translate }} {{request.maxAgeParam}} {{'search.years' | translate }} </h6>\\n                <h6 class=\\\"font-weight-light\\\">{{ parseSexValueForFrontend(request.sexParam) }}</h6>\\n              </a>\\n            </div>\\n          </div>\\n        </div><!--ngfor-->\\n      </div><!--recent searchrequests-->\\n\\n    </div>\\n  </div><!--col-10-->\\n  <div class=\\\"col-1\\\"></div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2VhcmNoLXBhZ2Uvc2VhcmNoLXBhZ2UuY29tcG9uZW50LnNjc3MifQ== */\"","import { AuthService } from './../../services/auth.service';\nimport { Searchrequest } from './../../models/searchrequest';\nimport { UtilityStoreService } from '../../services/utility-store.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, AbstractControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { SearchService } from 'src/app/services/search.service';\nimport { TranslateService, DefaultLangChangeEvent } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-search-page',\n  templateUrl: './search-page.component.html',\n  styleUrls: ['./search-page.component.scss']\n})\nexport class SearchPageComponent implements OnInit {\n\n  searchForm: FormGroup;\n\n  // where the data for the select fields comes from\n  sex: string[];\n  sexDe = ['weiblich', 'männlich', 'beide'];\n  sexEn = ['female', 'male', 'both'];\n  offers: string[];\n  cities: string[];\n\n  // where the selected data will be saved\n  selectedOffer: string;\n  selectedCity: string[] = [];\n  selectedSex: string;\n\n  // settings for select fields\n  selectOnlyOneSettings = {};\n  selectSexSettings = {};\n\n  recentSearchrequests: Searchrequest[];\n\n  recentSearchRequests$;\n\n  // getting active & collapsed state\n  newSearchCollapsed = true;\n  recentRequestCollapsed = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private utliltyStoreService: UtilityStoreService,\n    private searchService: SearchService,\n    private authService: AuthService,\n    private translateService: TranslateService\n  ) {\n    this.searchForm = this.createSearchForm();\n  }\n\n  ngOnInit() {\n    // initialzie all available offers & cities\n    this.setAllUtilities();\n    this.translateService.onDefaultLangChange.subscribe((event: DefaultLangChangeEvent) => {\n      this.setAllUtilities();\n    });\n    this.initializeMultiselectSettings();\n\n    this.recentSearchRequests$ = this.searchService.getRecentSearchRequests();\n    // console.log('Aufruf - search');\n  }\n\n  setAllUtilities() {\n    this.cities = this.utliltyStoreService.getAllCities(this.translateService.getDefaultLang());\n    this.offers = this.utliltyStoreService.getAllOffers(this.translateService.getDefaultLang());\n    this.sex = this.getSex(this.translateService.getDefaultLang());\n  }\n\n  createSearchForm() {\n    // create the formGroup\n    return this.formBuilder.group({\n      searchFormMinAge: [''],\n\n      searchFormMaxAge: ['']\n    }, { validator: this.ageCheckValidator });\n  }\n\n  initializeMultiselectSettings() {\n    this.selectOnlyOneSettings = {\n      singleSelection: true,\n      idField: 'item_id',\n      textField: 'item_text',\n      enableCheckAll: false,\n      allowSearchFilter: true,\n      closeDropDownOnSelection: true\n    };\n\n    this.selectSexSettings = {\n      singleSelection: true,\n      idField: 'item_id',\n      textField: 'item_text',\n      enableCheckAll: false,\n      allowSearchFilter: false,\n      closeDropDownOnSelection: true,\n    };\n  }\n\n  ageCheckValidator(control: AbstractControl): { invalid: boolean } {\n    if (control.get('searchFormMinAge').value > control.get('searchFormMaxAge').value) {\n      return { invalid: true };\n    }\n  }\n\n  newSearchSave() {\n\n    const searchdata = {\n      offerParam: this.offers.indexOf(this.selectedOffer[0]),\n      cityParam:  this.cities.indexOf(this.selectedCity[0]),\n      sexParam: this.sex.indexOf(this.selectedSex[0]),\n      minAgeParam: Number(this.searchForm.value.searchFormMinAge),\n      maxAgeParam: Number(this.searchForm.value.searchFormMaxAge),\n      createdAt: Date.now(),\n      uid: this.authService.currentUserID\n    };\n\n    this.searchService.createSearchrequest(searchdata)\n      .subscribe(response => {\n        this.router.navigate([`/result/${response.id}`]);\n      });\n  }\n\n  useRecentSearchrequest(searchRequestId) {\n    this.router.navigate([`/result/${searchRequestId}`]);\n  }\n\n  // shorten the male/female-word and return one letter or 'no choice'\n  parseSexValueForBackend(sex: string): string {\n    if (sex === 'male' || sex === 'männlich') {\n      return 'm';\n    } else if (sex === 'female' || sex === 'weiblich') {\n      return 'f';\n    } else if (sex === 'both' || sex === 'egal') {\n      return 'b';\n    } else {\n      return 'there was no choice of sex';\n    }\n  }\n\n  parseSexValueForFrontend(sexIndex: number): string {\n    return this.sex[sexIndex];\n  }\n\n  parseOfferForFrontend(offerIndex: number) {\n    return this.offers[offerIndex];\n  }\n\n  getSex(language: string) {\n    if (language === 'de') {\n      return this.sexDe;\n    } else {\n      return this.sexEn;\n    }\n  }\n\n  get searchFormMinAge() {\n    return this.searchForm.get('searchFormMinAge');\n  }\n\n  get searchFormMaxAge() {\n    return this.searchForm.get('searchFormMaxAge');\n  }\n\n}\n","export class Match {\n  constructor(\n    public initiatorID: string,\n    public partnerID: string,\n    public matchedOffer: string,\n    public accepted: boolean\n  ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'sort'\n})\nexport class SortPipe implements PipeTransform {\n  transform(array: any, field: string): any[] {\n    if (!Array.isArray(array)) {\n      return;\n    }\n    array.sort((a: any, b: any) => {\n      if (a[field] > b[field]) {\n        return 1;\n      } else if (a[field] < b[field]) {\n        return -1;\n      } else {\n        return 0;\n      }\n    });\n    return array.reverse();\n  }\n}\n","import { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  async canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n    ): Promise<boolean> {\n    const user = await this.authService.getCurrentUser();\n    // console.log('Auth Guard');\n    // console.log(user);\n    if (!user) {\n      this.router.navigate(['/']);\n    }\n    return !!user;\n  }\n}\n","import { UserStoreService } from 'src/app/services/user-store.service';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport * as firebase from 'firebase/app';\n\nimport { Observable, of } from 'rxjs';\nimport { switchMap, first } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  user$: Observable<any>;\n  currentUserID: string;\n  // currentUsername: string;\n  currentUserMail: string;\n  currentUserActivities: number[];\n\n  isLoggedIn = false;\n  // store the URL so we can redirect after logging in\n  redirectUrl: string;\n\n  constructor(\n    private angularFireAuth: AngularFireAuth,\n    private angularFirestore: AngularFirestore,\n    private router: Router) {\n\n    this.user$ = this.angularFireAuth.authState.pipe(\n      switchMap(user => {\n        if (user) {\n          this.currentUserID = user.uid;\n          // this.currentUsername = user.displayName;\n          this.currentUserMail = user.email;\n          return this.angularFirestore.doc<any>(`users/${user.uid}`).valueChanges();\n        } else {\n          return of(null);\n        }\n      })\n    );\n\n    this.user$.subscribe(user => {\n      if (user !== null) {\n        this.currentUserActivities = user.activities;\n      }\n    });\n  }\n\n  isloggedIn(): boolean {\n    const user = this.angularFireAuth.auth.currentUser;\n    if (user) {\n      return this.isLoggedIn = true;\n    } else {\n      return this.isLoggedIn = false;\n    }\n  }\n\n  getCurrentUser() {\n    return this.user$.pipe(first()).toPromise();\n  }\n\n  async validatePassword(password: string) {\n    const credential = firebase.auth.EmailAuthProvider.credential(this.currentUserMail, password);\n    await this.angularFireAuth.auth.currentUser.reauthenticateAndRetrieveDataWithCredential(credential);\n  }\n\n  async logout() {\n    await this.angularFireAuth.auth.signOut();\n    this.isLoggedIn = false;\n    localStorage.removeItem('user');\n    this.router.navigate(['/login']);\n  }\n\n  async login(mail: string, password: string) {\n    try {\n      await this.angularFireAuth.auth.signInWithEmailAndPassword(mail, password);\n      this.isLoggedIn = true;\n      this.router.navigate(['/home']);\n    } catch (error) {\n      alert('Not able to sign in!' + error.message);\n    }\n  }\n}\n","import { Chatroom } from './../models/chatroom';\nimport { UserStoreService } from 'src/app/services/user-store.service';\nimport { IdResponse } from '../models/idResponse';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, switchMap } from 'rxjs/operators';\nimport { AngularFirestore } from '@angular/fire/firestore';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatService {\n\n  // TODO change if using over web\n\n  // private apiUrl2 = 'http://localhost:5000/tandemfirebase/us-central1/chatrooms';\n  private apiUrl2 = 'https://us-central1-tandemfirebase.cloudfunctions.net/chatrooms';\n  private headers: Headers = new Headers();\n\n  constructor(\n    private authService: AuthService,\n    private angularFirestore: AngularFirestore,\n    private http: HttpClient,\n    private userStoreService: UserStoreService\n  ) {\n    this.headers.append('Content-Type', 'application/json');\n  }\n\n  // Create a new chatroom by calling the corresponding endpoint.\n  create(userA, userB) {\n    const data = {\n      userA,\n      userB,\n      updated: Date.now(),\n      messages: []\n    };\n    return this.http.post<IdResponse>(`${this.apiUrl2}`, data);\n  }\n\n  // Send a message to the Cloud Firestore database by valling the corresponding endpoint.\n  sendMessage(chatroomId, content) {\n    const uid = this.authService.currentUserID;\n    const data = {\n      uid,\n      content,\n      createdAt: Date.now()\n    };\n    return this.http.put(`${this.apiUrl2}/${chatroomId}`, data);\n  }\n\n  // Get all chatrooms of the current user and return it as an observable array with realtime changes.\n  getAllChatrooms() {\n    const resultA = this.queryChatrooms('userA');\n\n    const resultB = this.queryChatrooms('userB');\n\n    return combineLatest(resultA, resultB).pipe(\n      map(([users, otherUsers]) => users.concat(otherUsers)));\n  }\n\n  getAllChatroomsAsUserA() {\n    return this.authService.user$.pipe(\n      switchMap(user => {\n        return this.angularFirestore\n          .collection('chatrooms', ref => ref.where('userA', '==', user ? user.uid : ''))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data() as Chatroom;\n                const id = a.payload.doc.id;\n                return { id, ...data };\n              });\n            })\n          );\n      }),\n      switchMap(chatrooms => {\n        return combineLatest(chatrooms.map(chatroom => {\n          return this.userStoreService.getUserById(chatroom.userB).pipe(\n            map(user => {\n              return { ...chatroom, ...user };\n            })\n          );\n        }));\n      })\n    );\n  }\n\n  getAllChatroomsAsUserB() {\n    return this.authService.user$.pipe(\n      switchMap(user => {\n        return this.angularFirestore\n          .collection('chatrooms', ref => ref.where('userB', '==', user ? user.uid : ''))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data() as Chatroom;\n                const id = a.payload.doc.id;\n                return { id, ...data };\n              });\n            })\n          );\n      }),\n      switchMap(chatrooms => {\n        return combineLatest(chatrooms.map(chatroom => {\n          return this.userStoreService.getUserById(chatroom.userA).pipe(\n            map(user => {\n              return { ...chatroom, ...user };\n            })\n          );\n        }));\n      })\n    );\n  }\n\n  // Query chatrooms by field name.\n  private queryChatrooms(fieldName) {\n    return this.authService.user$.pipe(\n      switchMap(user => {\n        return this.angularFirestore\n          .collection('chatrooms', ref => ref.where(fieldName, '==', user ? user.uid : ''))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data();\n                const id = a.payload.doc.id;\n                return { id, ...data };\n              });\n            })\n          );\n      })\n    );\n  }\n\n  // Get an chatroom by it's doc-id and return it as an observable with realtime changes.\n  getChatroomById(chatroomId: string) {\n    return this.angularFirestore\n      .collection<any>(`chatrooms`)\n      .doc(chatroomId)\n      .snapshotChanges()\n      .pipe(\n        map(doc => {\n          return { id: doc.payload.id, ...doc.payload.data() };\n        })\n      );\n  }\n\n  // Get the corresponding user to every message as an observable with realtime changes.\n  joinUsers(chat$: Observable<any>) {\n    let chat;\n    const joinKeys = {};\n\n    return chat$.pipe(\n      switchMap(c => {\n        // Unique User IDs\n        chat = c;\n        const uids = Array.from(new Set(c.messages.map(value => value.uid)));\n        // Firestore User Doc Reads\n        const userDocs = uids.map(u =>\n          this.angularFirestore.doc(`users/${u}`).valueChanges()\n        );\n\n        return userDocs.length ? combineLatest(userDocs) : of([]);\n      }),\n      map(array => {\n        array.forEach(v => (joinKeys[(v as any).uid] = v));\n        chat.messages = chat.messages.map(v => {\n          return { ...v, user: joinKeys[v.uid] };\n        });\n\n        return chat;\n      })\n    );\n  }\n\n  deleteChatroom(chatroomId: string) {\n    return this.http.delete(`${this.apiUrl2}/${chatroomId}`);\n  }\n\n}\n","import { User } from 'src/app/models/user';\nimport { UserStoreService } from 'src/app/services/user-store.service';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Match } from './../models/match';\nimport { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { switchMap, map, tap, mergeMap } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { combineLatest, forkJoin, of, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MatchStoreService {\n\n  // private apiUrl = 'http://localhost:5000/tandemfirebase/us-central1';\n  private apiUrl = 'https://us-central1-tandemfirebase.cloudfunctions.net';\n\n  constructor(\n    private http: HttpClient,\n    private angularFirestore: AngularFirestore,\n    private authService: AuthService,\n    private userStoreService: UserStoreService) {\n  }\n\n  createMatch(match: Match) {\n    return this.http.post(`${this.apiUrl}/matches/`, match);\n  }\n\n  getAllMatches() {\n    const resultA = this.queryAllMatches('initiatorID');\n    const resultB = this.queryAllMatches('partnerID');\n\n    return combineLatest(resultA, resultB).pipe(\n      map(([users, otherUsers]) => users.concat(otherUsers)));\n  }\n\n  getAllUnAcceptedMatches() {\n    return this.authService.user$.pipe(\n      switchMap(user => {\n        return this.angularFirestore\n          .collection('matches', ref => ref.where('partnerID', '==', user ? user.uid : '')\n            .where('accepted', '==', false))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data() as Match;\n                const matchId = a.payload.doc.id;\n                return { matchId, ...data };\n              });\n            })\n          );\n      }),\n      switchMap(matches => {\n        return combineLatest(matches.map(match => {\n          return this.userStoreService.getUserById(match.initiatorID).pipe(\n            map(user => {\n              return { ...match, ...user };\n            })\n          );\n        }));\n      })\n    );\n  }\n\n  getAllAcceptedMatchesAsInitiator() {\n    return this.queryMatches(true);\n  }\n\n  getAllAcceptedMatchesAsPartner() {\n    return this.authService.user$.pipe(\n      switchMap(user => {\n        return this.angularFirestore\n          .collection('matches', ref => ref.where('partnerID', '==', user ? user.uid : '')\n            .where('accepted', '==', true))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data() as Match;\n                const matchId = a.payload.doc.id;\n                return { matchId, ...data };\n              });\n            })\n          );\n      }),\n      mergeMap(matches => {\n        return combineLatest(matches.map(match => {\n          return this.userStoreService.getUserById(match.initiatorID).pipe(\n            map(user => {\n              return { ...match, ...user };\n            })\n          );\n        }));\n      })\n    );\n  }\n\n  getAllMatchrequests() {\n    return this.queryMatches(false);\n  }\n\n  private queryMatches(boolValueOfAccepted) {\n    return this.authService.user$.pipe(\n      switchMap(user => {\n        return this.angularFirestore\n          .collection('matches', ref => ref.where('initiatorID', '==', user ? user.uid : '')\n            .where('accepted', '==', boolValueOfAccepted))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data() as Match;\n                const matchId = a.payload.doc.id;\n                return { matchId, ...data };\n              });\n            })\n          );\n      }),\n      switchMap(matches => {\n        return combineLatest(matches.map(match => {\n          return this.userStoreService.getUserById(match.partnerID).pipe(\n            map(user => {\n              return { ...match, ...user };\n            })\n          );\n        }));\n      })\n    );\n  }\n\n  private queryAllMatches(fieldNameOfRole) {\n    return this.authService.user$.pipe(\n      switchMap(user => {\n        return this.angularFirestore\n          .collection('matches', ref => ref.where(fieldNameOfRole, '==', user ? user.uid : ''))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data() as Match;\n                const matchId = a.payload.doc.id;\n                return { matchId, ...data };\n              });\n            })\n          );\n      })\n    );\n  }\n\n  updateMatch(matchId: string, data: any) {\n    return this.http.put(`${this.apiUrl}/matches/${matchId}`, data);\n  }\n\n  deleteMatch(matchId: string) {\n    return this.http.delete(`${this.apiUrl}/matches/${matchId}`);\n  }\n}\n","import { MatchStoreService } from './match-store.service';\nimport { Searchrequest } from './../models/searchrequest';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { map, switchMap } from 'rxjs/operators';\nimport { AuthService } from './auth.service';\nimport { User } from '../models/user';\nimport { IdResponse } from '../models/idResponse';\nimport { combineLatest } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n\n  // private apiUrl = 'http://localhost:5000/tandemfirebase/us-central1';\n  private apiUrl = 'https://us-central1-tandemfirebase.cloudfunctions.net';\n  private headers: Headers = new Headers();\n\n  constructor(\n    private http: HttpClient,\n    private angularFirestore: AngularFirestore,\n    private authService: AuthService,\n    private matchStoreService: MatchStoreService\n  ) {\n    this.headers.append('Content-Type', 'application/json');\n  }\n\n  createSearchrequest(searchdata: any) {\n    return this.http.post<IdResponse>(`${this.apiUrl}/searches/`, searchdata);\n  }\n\n  getRecentSearchRequests() {\n    return this.angularFirestore\n      .collection(`users/${this.authService.currentUserID}/searches`, ref => ref.orderBy('createdAt', 'desc'))\n      .snapshotChanges()\n      .pipe(\n        map(actions => {\n          return actions.map(a => {\n            const data = a.payload.doc.data();\n            const id = a.payload.doc.id;\n            return { id, ...data };\n          });\n        })\n      );\n  }\n\n  getSearchRequestById(searchRequestId) {\n    return this.angularFirestore\n      .collection<any>('users')\n      .doc<User>(this.authService.currentUserID)\n      .collection('searches')\n      .doc<Searchrequest>(searchRequestId).valueChanges();\n  }\n\n  getSearchResult(searchRequest: Searchrequest) {\n    if (searchRequest.minAgeParam === 0 &&\n      searchRequest.maxAgeParam !== 0 &&\n      searchRequest.cityParam >= 0 &&\n      searchRequest.sexParam < 2) {\n      return this.searchQueryWithCityAndSexAndMaxButWithoutMin(searchRequest);\n    }\n    if (searchRequest.minAgeParam === 0 &&\n      searchRequest.maxAgeParam !== 0 &&\n      searchRequest.cityParam >= 0 &&\n      searchRequest.sexParam === 2) {\n      return this.searchQueryWithCityAndMaxButWithoutMinAndWithoutSex(searchRequest);\n    }\n    if (searchRequest.minAgeParam === 0 &&\n      searchRequest.maxAgeParam !== 0 &&\n      searchRequest.cityParam === -1 &&\n      searchRequest.sexParam < 2) {\n      return this.searchQueryWithSexAndMaxButWithoutMinAndWithoutCity(searchRequest);\n    }\n    if (searchRequest.minAgeParam === 0 &&\n      searchRequest.maxAgeParam !== 0 &&\n      searchRequest.cityParam === -1 &&\n      searchRequest.sexParam === 2) {\n      return this.searchQueryWithMaxButWithoutMinAndWithoutCityAndWithoutSex(searchRequest);\n    }\n    if (searchRequest.minAgeParam !== 0 &&\n      searchRequest.maxAgeParam === 0 &&\n      searchRequest.cityParam >= 0 &&\n      searchRequest.sexParam < 2) {\n      return this.searchQueryWithCityAndSexAndMinButWithoutMax(searchRequest);\n    }\n    if (searchRequest.minAgeParam !== 0 &&\n      searchRequest.maxAgeParam === 0 &&\n      searchRequest.cityParam >= 0 &&\n      searchRequest.sexParam === 2) {\n      return this.searchQueryWithCityAndMinButWithoutMaxAndWithoutSex(searchRequest);\n    }\n    if (searchRequest.minAgeParam !== 0 &&\n      searchRequest.maxAgeParam === 0 &&\n      searchRequest.cityParam === -1 &&\n      searchRequest.sexParam < 2) {\n      return this.searchQueryWithSexAndMinButWithoutMaxAndWithoutCity(searchRequest);\n    }\n    if (searchRequest.minAgeParam !== 0 &&\n      searchRequest.maxAgeParam === 0 &&\n      searchRequest.cityParam === -1 &&\n      searchRequest.sexParam === 2) {\n      return this.searchQueryWithMinButWithoutMaxAndWithoutCityAndWithoutSex(searchRequest);\n    }\n    if (searchRequest.minAgeParam !== 0 &&\n      searchRequest.maxAgeParam !== 0 &&\n      searchRequest.cityParam >= 0 &&\n      searchRequest.sexParam < 2) {\n      return this.searchQueryWithCityAndSexAndMinAndMax(searchRequest);\n    }\n    if (searchRequest.minAgeParam !== 0 &&\n      searchRequest.maxAgeParam !== 0 &&\n      searchRequest.cityParam >= 0 &&\n      searchRequest.sexParam === 2) {\n      return this.searchQueryWithCityAndMinAndMaxButWithoutSex(searchRequest);\n    }\n    if (searchRequest.minAgeParam !== 0 &&\n      searchRequest.maxAgeParam !== 0 &&\n      searchRequest.cityParam === -1 &&\n      searchRequest.sexParam < 2) {\n      return this.searchQueryWithSexAndMinAndMaxButWithoutCity(searchRequest);\n    }\n    if (searchRequest.minAgeParam !== 0 &&\n      searchRequest.maxAgeParam !== 0 &&\n      searchRequest.cityParam === -1 &&\n      searchRequest.sexParam === 2) {\n      return this.searchQueryWithMinAndMaxButWithoutCityAndWithoutSex(searchRequest);\n    }\n    if (searchRequest.cityParam === -1 &&\n      searchRequest.sexParam === 2) {\n      return this.searchQueryWithoutCityAndWithoutSex(searchRequest);\n    }\n    if (searchRequest.cityParam >= 0 &&\n      searchRequest.sexParam < 2) {\n      return this.searchQueryWithCityAndSex(searchRequest);\n    }\n    if (searchRequest.cityParam === -1) {\n      return this.searchQueryWithoutCityButWithSex(searchRequest);\n    }\n    if (searchRequest.cityParam >= 0) {\n      return this.searchQueryWithCityButWithoutSex(searchRequest);\n    }\n  }\n\n  searchQueryWithCityButWithoutSex(searchRequest: Searchrequest) {\n    return this.getUsersToBeExcludedArray().pipe(\n      switchMap(userArray => {\n        const uniqueUsers = Array.from(new Set(userArray));\n        return this.angularFirestore\n          .collection<any>('users', ref => ref.where('offers', 'array-contains', searchRequest.offerParam)\n            .where('city', '==', searchRequest.cityParam))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data() as User;\n                return { ...data };\n              });\n            }),\n            map(users => {\n              let commonActivities: number[] = [];\n              const currentUserActivities = this.authService.currentUserActivities;\n              const filteredUsers: any[] = [];\n              users.map(user => {\n                if (uniqueUsers.includes(user.uid) === false) {\n                  user.activities.forEach(activity => {\n                    currentUserActivities.forEach(currentUserActivity => {\n                      if (activity === currentUserActivity) {\n                        commonActivities.push(activity);\n                      }\n                    });\n                  });\n                  filteredUsers.push({ commonActivities, ...user });\n                  commonActivities = [];\n                }\n              });\n              return filteredUsers;\n            })\n          );\n      })\n    );\n  }\n\n  searchQueryWithoutCityAndWithoutSex(searchRequest: Searchrequest) {\n    return this.getUsersToBeExcludedArray().pipe(\n      switchMap(userArray => {\n        const uniqueUsers = Array.from(new Set(userArray));\n        return this.angularFirestore\n          .collection<any>('users', ref => ref.where('offers', 'array-contains', searchRequest.offerParam))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data() as User;\n                return { ...data };\n              });\n            }),\n            map(users => {\n              let commonActivities: number[] = [];\n              const currentUserActivities = this.authService.currentUserActivities;\n              const filteredUsers: any[] = [];\n              users.map(user => {\n                if (uniqueUsers.includes(user.uid) === false) {\n                  user.activities.forEach(activity => {\n                    currentUserActivities.forEach(currentUserActivity => {\n                      if (activity === currentUserActivity) {\n                        commonActivities.push(activity);\n                      }\n                    });\n                  });\n                  filteredUsers.push({ commonActivities, ...user });\n                  commonActivities = [];\n                }\n              });\n              return filteredUsers;\n            })\n          );\n      })\n    );\n  }\n\n  searchQueryWithCityAndSex(searchRequest: Searchrequest) {\n    return this.getUsersToBeExcludedArray().pipe(\n      switchMap(userArray => {\n        const uniqueUsers = Array.from(new Set(userArray));\n        return this.angularFirestore\n          .collection<any>('users', ref => ref.where('offers', 'array-contains', searchRequest.offerParam)\n            .where('city', '==', searchRequest.cityParam)\n            .where('sex', '==', searchRequest.sexParam))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data() as User;\n                return { ...data };\n              });\n            }),\n            map(users => {\n              let commonActivities: number[] = [];\n              const currentUserActivities = this.authService.currentUserActivities;\n              const filteredUsers: any[] = [];\n              users.map(user => {\n                if (uniqueUsers.includes(user.uid) === false) {\n                  user.activities.forEach(activity => {\n                    currentUserActivities.forEach(currentUserActivity => {\n                      if (activity === currentUserActivity) {\n                        commonActivities.push(activity);\n                      }\n                    });\n                  });\n                  filteredUsers.push({ commonActivities, ...user });\n                  commonActivities = [];\n                }\n              });\n              return filteredUsers;\n            })\n          );\n      })\n    );\n  }\n\n  searchQueryWithoutCityButWithSex(searchRequest: Searchrequest) {\n    return this.getUsersToBeExcludedArray().pipe(\n      switchMap(userArray => {\n        const uniqueUsers = Array.from(new Set(userArray));\n        return this.angularFirestore\n          .collection<any>('users', ref => ref.where('offers', 'array-contains', searchRequest.offerParam)\n            .where('sex', '==', searchRequest.sexParam))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data() as User;\n                return { ...data };\n              });\n            }),\n            map(users => {\n              let commonActivities: number[] = [];\n              const currentUserActivities = this.authService.currentUserActivities;\n              const filteredUsers: any[] = [];\n              users.map(user => {\n                if (uniqueUsers.includes(user.uid) === false) {\n                  user.activities.forEach(activity => {\n                    currentUserActivities.forEach(currentUserActivity => {\n                      if (activity === currentUserActivity) {\n                        commonActivities.push(activity);\n                      }\n                    });\n                  });\n                  filteredUsers.push({ commonActivities, ...user });\n                  commonActivities = [];\n                }\n              });\n              return filteredUsers;\n            })\n          );\n      })\n    );\n  }\n\n  searchQueryWithCityAndSexAndMinAndMax(searchRequest: Searchrequest) {\n    const minAge = searchRequest.minAgeParam;\n    const maxAge = searchRequest.maxAgeParam + 1; // TODO Why does this shows the right results?\n\n    const today = new Date();\n    const todayYear = today.getFullYear();\n    const todayMonth = today.getMonth();\n    const todayDay = today.getDay();\n\n    const minAgeDate = Number(new Date(todayYear - minAge, todayMonth, todayDay));\n    const maxAgeDate = Number(new Date(todayYear - maxAge, todayMonth, todayDay));\n\n    const minAgeUsers = this.getUsersToBeExcludedArray().pipe(\n      switchMap(userArray => {\n        const uniqueUsers = Array.from(new Set(userArray));\n        return this.angularFirestore\n          .collection<any>('users', ref => ref.where('offers', 'array-contains', searchRequest.offerParam)\n            .where('city', '==', searchRequest.cityParam)\n            .where('sex', '==', searchRequest.sexParam)\n            .where('dateOfBirth', '<=', minAgeDate))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data() as User;\n                return { ...data };\n              });\n            }),\n            map(users => {\n              let commonActivities: number[] = [];\n              const currentUserActivities = this.authService.currentUserActivities;\n              const filteredUsers: any[] = []; users.map(user => {\n                if (uniqueUsers.includes(user.uid) === false) {\n                  user.activities.forEach(activity => {\n                    currentUserActivities.forEach(currentUserActivity => {\n                      if (activity === currentUserActivity) {\n                        commonActivities.push(activity);\n                      }\n                    });\n                  });\n                  filteredUsers.push({ commonActivities, ...user });\n                  commonActivities = [];\n                }\n              });\n              return filteredUsers;\n            })\n          );\n      })\n    );\n\n    const maxAgeUsers = this.getUsersToBeExcludedArray().pipe(\n      switchMap(userArray => {\n        const uniqueUsers = Array.from(new Set(userArray));\n        return this.angularFirestore\n          .collection<any>('users', ref => ref.where('offers', 'array-contains', searchRequest.offerParam)\n            .where('city', '==', searchRequest.cityParam)\n            .where('sex', '==', searchRequest.sexParam)\n            .where('dateOfBirth', '>=', maxAgeDate))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data() as User;\n                return { ...data };\n              });\n            }),\n            map(users => {\n              let commonActivities: number[] = [];\n              const currentUserActivities = this.authService.currentUserActivities;\n              const filteredUsers: any[] = []; users.map(user => {\n                if (uniqueUsers.includes(user.uid) === false) {\n                  user.activities.forEach(activity => {\n                    currentUserActivities.forEach(currentUserActivity => {\n                      if (activity === currentUserActivity) {\n                        commonActivities.push(activity);\n                      }\n                    });\n                  });\n                  filteredUsers.push({ commonActivities, ...user });\n                  commonActivities = [];\n                }\n              });\n              return filteredUsers;\n            })\n          );\n      })\n    );\n\n    return combineLatest(minAgeUsers, maxAgeUsers).pipe(\n      map(([minUsers, maxUsers]) => {\n        const usersResult: any[] = [];\n\n        minUsers.forEach(minUser => {\n          maxUsers.forEach(maxUser => {\n            if (minUser.uid === maxUser.uid) {\n              usersResult.push(minUser);\n            }\n          });\n        });\n\n        return usersResult;\n      }));\n  }\n\n  searchQueryWithCityAndMinAndMaxButWithoutSex(searchRequest: Searchrequest) {\n    const minAge = searchRequest.minAgeParam;\n    const maxAge = searchRequest.maxAgeParam + 1;\n\n    const today = new Date();\n    const todayYear = today.getFullYear();\n    const todayMonth = today.getMonth();\n    const todayDay = today.getDay();\n\n    const minAgeDate = Number(new Date(todayYear - minAge, todayMonth, todayDay));\n    const maxAgeDate = Number(new Date(todayYear - maxAge, todayMonth, todayDay));\n\n    const minAgeUsers = this.getUsersToBeExcludedArray().pipe(\n      switchMap(userArray => {\n        const uniqueUsers = Array.from(new Set(userArray));\n        return this.angularFirestore\n          .collection<any>('users', ref => ref.where('offers', 'array-contains', searchRequest.offerParam)\n            .where('city', '==', searchRequest.cityParam)\n            .where('dateOfBirth', '<=', minAgeDate))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data() as User;\n                return { ...data };\n              });\n            }),\n            map(users => {\n              let commonActivities: number[] = [];\n              const currentUserActivities = this.authService.currentUserActivities;\n              const filteredUsers: any[] = []; users.map(user => {\n                if (uniqueUsers.includes(user.uid) === false) {\n                  user.activities.forEach(activity => {\n                    currentUserActivities.forEach(currentUserActivity => {\n                      if (activity === currentUserActivity) {\n                        commonActivities.push(activity);\n                      }\n                    });\n                  });\n                  filteredUsers.push({ commonActivities, ...user });\n                  commonActivities = [];\n                }\n              });\n              return filteredUsers;\n            })\n          );\n      })\n    );\n\n    const maxAgeUsers = this.getUsersToBeExcludedArray().pipe(\n      switchMap(userArray => {\n        const uniqueUsers = Array.from(new Set(userArray));\n        return this.angularFirestore\n          .collection<any>('users', ref => ref.where('offers', 'array-contains', searchRequest.offerParam)\n            .where('city', '==', searchRequest.cityParam)\n            .where('dateOfBirth', '>=', maxAgeDate))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data() as User;\n                return { ...data };\n              });\n            }),\n            map(users => {\n              let commonActivities: number[] = [];\n              const currentUserActivities = this.authService.currentUserActivities;\n              const filteredUsers: any[] = []; users.map(user => {\n                if (uniqueUsers.includes(user.uid) === false) {\n                  user.activities.forEach(activity => {\n                    currentUserActivities.forEach(currentUserActivity => {\n                      if (activity === currentUserActivity) {\n                        commonActivities.push(activity);\n                      }\n                    });\n                  });\n                  filteredUsers.push({ commonActivities, ...user });\n                  commonActivities = [];\n                }\n              });\n              return filteredUsers;\n            })\n          );\n      })\n    );\n\n    return combineLatest(minAgeUsers, maxAgeUsers).pipe(\n      map(([minUsers, maxUsers]) => {\n        const usersResult: any[] = [];\n\n        minUsers.forEach(minUser => {\n          maxUsers.forEach(maxUser => {\n            if (minUser.uid === maxUser.uid) {\n              usersResult.push(minUser);\n            }\n          });\n        });\n\n        return usersResult;\n      }));\n  }\n\n  searchQueryWithSexAndMinAndMaxButWithoutCity(searchRequest: Searchrequest) {\n    const minAge = searchRequest.minAgeParam;\n    const maxAge = searchRequest.maxAgeParam + 1;\n\n    const today = new Date();\n    const todayYear = today.getFullYear();\n    const todayMonth = today.getMonth();\n    const todayDay = today.getDay();\n\n    const minAgeDate = Number(new Date(todayYear - minAge, todayMonth, todayDay));\n    const maxAgeDate = Number(new Date(todayYear - maxAge, todayMonth, todayDay));\n\n    const minAgeUsers = this.getUsersToBeExcludedArray().pipe(\n      switchMap(userArray => {\n        const uniqueUsers = Array.from(new Set(userArray));\n        return this.angularFirestore\n          .collection<any>('users', ref => ref.where('offers', 'array-contains', searchRequest.offerParam)\n            .where('sex', '==', searchRequest.sexParam)\n            .where('dateOfBirth', '<=', minAgeDate))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data() as User;\n                return { ...data };\n              });\n            }),\n            map(users => {\n              let commonActivities: number[] = [];\n              const currentUserActivities = this.authService.currentUserActivities;\n              const filteredUsers: any[] = []; users.map(user => {\n                if (uniqueUsers.includes(user.uid) === false) {\n                  user.activities.forEach(activity => {\n                    currentUserActivities.forEach(currentUserActivity => {\n                      if (activity === currentUserActivity) {\n                        commonActivities.push(activity);\n                      }\n                    });\n                  });\n                  filteredUsers.push({ commonActivities, ...user });\n                  commonActivities = [];\n                }\n              });\n              return filteredUsers;\n            })\n          );\n      })\n    );\n\n    const maxAgeUsers = this.getUsersToBeExcludedArray().pipe(\n      switchMap(userArray => {\n        const uniqueUsers = Array.from(new Set(userArray));\n        return this.angularFirestore\n          .collection<any>('users', ref => ref.where('offers', 'array-contains', searchRequest.offerParam)\n            .where('sex', '==', searchRequest.sexParam)\n            .where('dateOfBirth', '>=', maxAgeDate))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data() as User;\n                return { ...data };\n              });\n            }),\n            map(users => {\n              let commonActivities: number[] = [];\n              const currentUserActivities = this.authService.currentUserActivities;\n              const filteredUsers: any[] = []; users.map(user => {\n                if (uniqueUsers.includes(user.uid) === false) {\n                  user.activities.forEach(activity => {\n                    currentUserActivities.forEach(currentUserActivity => {\n                      if (activity === currentUserActivity) {\n                        commonActivities.push(activity);\n                      }\n                    });\n                  });\n                  filteredUsers.push({ commonActivities, ...user });\n                  commonActivities = [];\n                }\n              });\n              return filteredUsers;\n            })\n          );\n      })\n    );\n\n    return combineLatest(minAgeUsers, maxAgeUsers).pipe(\n      map(([minUsers, maxUsers]) => {\n        const usersResult: any[] = [];\n\n        minUsers.forEach(minUser => {\n          maxUsers.forEach(maxUser => {\n            if (minUser.uid === maxUser.uid) {\n              usersResult.push(minUser);\n            }\n          });\n        });\n\n        return usersResult;\n      }));\n  }\n\n  searchQueryWithMinAndMaxButWithoutCityAndWithoutSex(searchRequest: Searchrequest) {\n    const minAge = searchRequest.minAgeParam;\n    const maxAge = searchRequest.maxAgeParam + 1;\n\n    const today = new Date();\n    const todayYear = today.getFullYear();\n    const todayMonth = today.getMonth();\n    const todayDay = today.getDay();\n\n    const minAgeDate = Number(new Date(todayYear - minAge, todayMonth, todayDay));\n    const maxAgeDate = Number(new Date(todayYear - maxAge, todayMonth, todayDay));\n\n    const minAgeUsers = this.getUsersToBeExcludedArray().pipe(\n      switchMap(userArray => {\n        const uniqueUsers = Array.from(new Set(userArray));\n        return this.angularFirestore\n          .collection<any>('users', ref => ref.where('offers', 'array-contains', searchRequest.offerParam)\n            .where('dateOfBirth', '<=', minAgeDate))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data() as User;\n                return { ...data };\n              });\n            }),\n            map(users => {\n              let commonActivities: number[] = [];\n              const currentUserActivities = this.authService.currentUserActivities;\n              const filteredUsers: any[] = []; users.map(user => {\n                if (uniqueUsers.includes(user.uid) === false) {\n                  user.activities.forEach(activity => {\n                    currentUserActivities.forEach(currentUserActivity => {\n                      if (activity === currentUserActivity) {\n                        commonActivities.push(activity);\n                      }\n                    });\n                  });\n                  filteredUsers.push({ commonActivities, ...user });\n                  commonActivities = [];\n                }\n              });\n              return filteredUsers;\n            })\n          );\n      })\n    );\n\n    const maxAgeUsers = this.getUsersToBeExcludedArray().pipe(\n      switchMap(userArray => {\n        const uniqueUsers = Array.from(new Set(userArray));\n        return this.angularFirestore\n          .collection<any>('users', ref => ref.where('offers', 'array-contains', searchRequest.offerParam)\n            .where('dateOfBirth', '>=', maxAgeDate))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data() as User;\n                return { ...data };\n              });\n            }),\n            map(users => {\n              let commonActivities: number[] = [];\n              const currentUserActivities = this.authService.currentUserActivities;\n              const filteredUsers: any[] = []; users.map(user => {\n                if (uniqueUsers.includes(user.uid) === false) {\n                  user.activities.forEach(activity => {\n                    currentUserActivities.forEach(currentUserActivity => {\n                      if (activity === currentUserActivity) {\n                        commonActivities.push(activity);\n                      }\n                    });\n                  });\n                  filteredUsers.push({ commonActivities, ...user });\n                  commonActivities = [];\n                }\n              });\n              return filteredUsers;\n            })\n          );\n      })\n    );\n\n    return combineLatest(minAgeUsers, maxAgeUsers).pipe(\n      map(([minUsers, maxUsers]) => {\n        const usersResult: any[] = [];\n\n        minUsers.forEach(minUser => {\n          maxUsers.forEach(maxUser => {\n            if (minUser.uid === maxUser.uid) {\n              usersResult.push(minUser);\n            }\n          });\n        });\n\n        return usersResult;\n      }));\n  }\n\n  searchQueryWithCityAndSexAndMinButWithoutMax(searchRequest: Searchrequest) {\n    const minAge = searchRequest.minAgeParam;\n\n    const today = new Date();\n    const todayYear = today.getFullYear();\n    const todayMonth = today.getMonth();\n    const todayDay = today.getDay();\n\n    const minAgeDate = Number(new Date(todayYear - minAge, todayMonth, todayDay));\n\n    return this.getUsersToBeExcludedArray().pipe(\n      switchMap(userArray => {\n        const uniqueUsers = Array.from(new Set(userArray));\n        return this.angularFirestore\n          .collection<any>('users', ref => ref.where('offers', 'array-contains', searchRequest.offerParam)\n            .where('city', '==', searchRequest.cityParam)\n            .where('sex', '==', searchRequest.sexParam)\n            .where('dateOfBirth', '<=', minAgeDate))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data() as User;\n                return { ...data };\n              });\n            }),\n            map(users => {\n              let commonActivities: number[] = [];\n              const currentUserActivities = this.authService.currentUserActivities;\n              const filteredUsers: any[] = []; users.map(user => {\n                if (uniqueUsers.includes(user.uid) === false) {\n                  user.activities.forEach(activity => {\n                    currentUserActivities.forEach(currentUserActivity => {\n                      if (activity === currentUserActivity) {\n                        commonActivities.push(activity);\n                      }\n                    });\n                  });\n                  filteredUsers.push({ commonActivities, ...user });\n                  commonActivities = [];\n                }\n              });\n              return filteredUsers;\n            })\n          );\n      })\n    );\n  }\n\n  searchQueryWithCityAndMinButWithoutMaxAndWithoutSex(searchRequest: Searchrequest) {\n    const minAge = searchRequest.minAgeParam;\n\n    const today = new Date();\n    const todayYear = today.getFullYear();\n    const todayMonth = today.getMonth();\n    const todayDay = today.getDay();\n\n    const minAgeDate = Number(new Date(todayYear - minAge, todayMonth, todayDay));\n\n    return this.getUsersToBeExcludedArray().pipe(\n      switchMap(userArray => {\n        const uniqueUsers = Array.from(new Set(userArray));\n        return this.angularFirestore\n          .collection<any>('users', ref => ref.where('offers', 'array-contains', searchRequest.offerParam)\n            .where('city', '==', searchRequest.cityParam)\n            .where('dateOfBirth', '<=', minAgeDate))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data() as User;\n                return { ...data };\n              });\n            }),\n            map(users => {\n              let commonActivities: number[] = [];\n              const currentUserActivities = this.authService.currentUserActivities;\n              const filteredUsers: any[] = []; users.map(user => {\n                if (uniqueUsers.includes(user.uid) === false) {\n                  user.activities.forEach(activity => {\n                    currentUserActivities.forEach(currentUserActivity => {\n                      if (activity === currentUserActivity) {\n                        commonActivities.push(activity);\n                      }\n                    });\n                  });\n                  filteredUsers.push({ commonActivities, ...user });\n                  commonActivities = [];\n                }\n              });\n              return filteredUsers;\n            })\n          );\n      })\n    );\n  }\n\n  searchQueryWithSexAndMinButWithoutMaxAndWithoutCity(searchRequest: Searchrequest) {\n    const minAge = searchRequest.minAgeParam;\n\n    const today = new Date();\n    const todayYear = today.getFullYear();\n    const todayMonth = today.getMonth();\n    const todayDay = today.getDay();\n\n    const minAgeDate = Number(new Date(todayYear - minAge, todayMonth, todayDay));\n\n    return this.getUsersToBeExcludedArray().pipe(\n      switchMap(userArray => {\n        const uniqueUsers = Array.from(new Set(userArray));\n        return this.angularFirestore\n          .collection<any>('users', ref => ref.where('offers', 'array-contains', searchRequest.offerParam)\n            .where('sex', '==', searchRequest.sexParam)\n            .where('dateOfBirth', '<=', minAgeDate))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data() as User;\n                return { ...data };\n              });\n            }),\n            map(users => {\n              let commonActivities: number[] = [];\n              const currentUserActivities = this.authService.currentUserActivities;\n              const filteredUsers: any[] = []; users.map(user => {\n                if (uniqueUsers.includes(user.uid) === false) {\n                  user.activities.forEach(activity => {\n                    currentUserActivities.forEach(currentUserActivity => {\n                      if (activity === currentUserActivity) {\n                        commonActivities.push(activity);\n                      }\n                    });\n                  });\n                  filteredUsers.push({ commonActivities, ...user });\n                  commonActivities = [];\n                }\n              });\n              return filteredUsers;\n            })\n          );\n      })\n    );\n  }\n\n  searchQueryWithMinButWithoutMaxAndWithoutCityAndWithoutSex(searchRequest: Searchrequest) {\n    const minAge = searchRequest.minAgeParam;\n\n    const today = new Date();\n    const todayYear = today.getFullYear();\n    const todayMonth = today.getMonth();\n    const todayDay = today.getDay();\n\n    const minAgeDate = Number(new Date(todayYear - minAge, todayMonth, todayDay));\n\n    return this.getUsersToBeExcludedArray().pipe(\n      switchMap(userArray => {\n        const uniqueUsers = Array.from(new Set(userArray));\n        return this.angularFirestore\n          .collection<any>('users', ref => ref.where('offers', 'array-contains', searchRequest.offerParam)\n            .where('dateOfBirth', '<=', minAgeDate))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data() as User;\n                return { ...data };\n              });\n            }),\n            map(users => {\n              let commonActivities: number[] = [];\n              const currentUserActivities = this.authService.currentUserActivities;\n              const filteredUsers: any[] = []; users.map(user => {\n                if (uniqueUsers.includes(user.uid) === false) {\n                  user.activities.forEach(activity => {\n                    currentUserActivities.forEach(currentUserActivity => {\n                      if (activity === currentUserActivity) {\n                        commonActivities.push(activity);\n                      }\n                    });\n                  });\n                  filteredUsers.push({ commonActivities, ...user });\n                  commonActivities = [];\n                }\n              });\n              return filteredUsers;\n            })\n          );\n      })\n    );\n  }\n\n  searchQueryWithCityAndSexAndMaxButWithoutMin(searchRequest: Searchrequest) {\n    const maxAge = searchRequest.maxAgeParam + 1;\n\n    const today = new Date();\n    const todayYear = today.getFullYear();\n    const todayMonth = today.getMonth();\n    const todayDay = today.getDay();\n\n    const maxAgeDate = Number(new Date(todayYear - maxAge, todayMonth, todayDay));\n\n    return this.getUsersToBeExcludedArray().pipe(\n      switchMap(userArray => {\n        const uniqueUsers = Array.from(new Set(userArray));\n        return this.angularFirestore\n          .collection<any>('users', ref => ref.where('offers', 'array-contains', searchRequest.offerParam)\n            .where('city', '==', searchRequest.cityParam)\n            .where('sex', '==', searchRequest.sexParam)\n            .where('dateOfBirth', '>=', maxAgeDate))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data() as User;\n                return { ...data };\n              });\n            }),\n            map(users => {\n              let commonActivities: number[] = [];\n              const currentUserActivities = this.authService.currentUserActivities;\n              const filteredUsers: any[] = []; users.map(user => {\n                if (uniqueUsers.includes(user.uid) === false) {\n                  user.activities.forEach(activity => {\n                    currentUserActivities.forEach(currentUserActivity => {\n                      if (activity === currentUserActivity) {\n                        commonActivities.push(activity);\n                      }\n                    });\n                  });\n                  filteredUsers.push({ commonActivities, ...user });\n                  commonActivities = [];\n                }\n              });\n              return filteredUsers;\n            })\n          );\n      })\n    );\n  }\n\n  searchQueryWithCityAndMaxButWithoutMinAndWithoutSex(searchRequest: Searchrequest) {\n    const maxAge = searchRequest.maxAgeParam + 1;\n\n    const today = new Date();\n    const todayYear = today.getFullYear();\n    const todayMonth = today.getMonth();\n    const todayDay = today.getDay();\n\n    const maxAgeDate = Number(new Date(todayYear - maxAge, todayMonth, todayDay));\n\n    return this.getUsersToBeExcludedArray().pipe(\n      switchMap(userArray => {\n        const uniqueUsers = Array.from(new Set(userArray));\n        return this.angularFirestore\n          .collection<any>('users', ref => ref.where('offers', 'array-contains', searchRequest.offerParam)\n            .where('city', '==', searchRequest.cityParam)\n            .where('dateOfBirth', '>=', maxAgeDate))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data() as User;\n                return { ...data };\n              });\n            }),\n            map(users => {\n              let commonActivities: number[] = [];\n              const currentUserActivities = this.authService.currentUserActivities;\n              const filteredUsers: any[] = []; users.map(user => {\n                if (uniqueUsers.includes(user.uid) === false) {\n                  user.activities.forEach(activity => {\n                    currentUserActivities.forEach(currentUserActivity => {\n                      if (activity === currentUserActivity) {\n                        commonActivities.push(activity);\n                      }\n                    });\n                  });\n                  filteredUsers.push({ commonActivities, ...user });\n                  commonActivities = [];\n                }\n              });\n              return filteredUsers;\n            })\n          );\n      })\n    );\n  }\n\n  searchQueryWithSexAndMaxButWithoutMinAndWithoutCity(searchRequest: Searchrequest) {\n    const maxAge = searchRequest.maxAgeParam + 1;\n\n    const today = new Date();\n    const todayYear = today.getFullYear();\n    const todayMonth = today.getMonth();\n    const todayDay = today.getDay();\n\n    const maxAgeDate = Number(new Date(todayYear - maxAge, todayMonth, todayDay));\n\n    return this.getUsersToBeExcludedArray().pipe(\n      switchMap(userArray => {\n        const uniqueUsers = Array.from(new Set(userArray));\n        return this.angularFirestore\n          .collection<any>('users', ref => ref.where('offers', 'array-contains', searchRequest.offerParam)\n            .where('sex', '==', searchRequest.sexParam)\n            .where('dateOfBirth', '>=', maxAgeDate))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data() as User;\n                return { ...data };\n              });\n            }),\n            map(users => {\n              let commonActivities: number[] = [];\n              const currentUserActivities = this.authService.currentUserActivities;\n              const filteredUsers: any[] = []; users.map(user => {\n                if (uniqueUsers.includes(user.uid) === false) {\n                  user.activities.forEach(activity => {\n                    currentUserActivities.forEach(currentUserActivity => {\n                      if (activity === currentUserActivity) {\n                        commonActivities.push(activity);\n                      }\n                    });\n                  });\n                  filteredUsers.push({ commonActivities, ...user });\n                  commonActivities = [];\n                }\n              });\n              return filteredUsers;\n            })\n          );\n      })\n    );\n  }\n\n  searchQueryWithMaxButWithoutMinAndWithoutCityAndWithoutSex(searchRequest: Searchrequest) {\n    const maxAge = searchRequest.maxAgeParam + 1;\n\n    const today = new Date();\n    const todayYear = today.getFullYear();\n    const todayMonth = today.getMonth();\n    const todayDay = today.getDay();\n\n    const maxAgeDate = Number(new Date(todayYear - maxAge, todayMonth, todayDay));\n\n    return this.getUsersToBeExcludedArray().pipe(\n      switchMap(userArray => {\n        const uniqueUsers = Array.from(new Set(userArray));\n        return this.angularFirestore\n          .collection<any>('users', ref => ref.where('offers', 'array-contains', searchRequest.offerParam)\n            .where('dateOfBirth', '>=', maxAgeDate))\n          .snapshotChanges()\n          .pipe(\n            map(actions => {\n              return actions.map(a => {\n                const data = a.payload.doc.data() as User;\n                return { ...data };\n              });\n            }),\n            map(users => {\n              let commonActivities: number[] = [];\n              const currentUserActivities = this.authService.currentUserActivities;\n              const filteredUsers: any[] = []; users.map(user => {\n                if (uniqueUsers.includes(user.uid) === false) {\n                  user.activities.forEach(activity => {\n                    currentUserActivities.forEach(currentUserActivity => {\n                      if (activity === currentUserActivity) {\n                        commonActivities.push(activity);\n                      }\n                    });\n                  });\n                  filteredUsers.push({ commonActivities, ...user });\n                  commonActivities = [];\n                }\n              });\n              return filteredUsers;\n            })\n          );\n      })\n    );\n  }\n\n  getUsersToBeExcludedArray() {\n    return this.matchStoreService.getAllMatches().pipe(\n      map(matches => {\n        const userArray: string[] = [];\n        userArray.push(this.authService.currentUserID);\n        matches.map(match => {\n          userArray.push(match.initiatorID);\n          userArray.push(match.partnerID);\n        });\n        return userArray;\n      })\n    );\n  }\n\n}\n","import { AngularFirestore } from '@angular/fire/firestore';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserStoreService {\n\n\n  // private apiUrl = 'http://localhost:5000/tandemfirebase/us-central1';\n  private apiUrl = 'https://us-central1-tandemfirebase.cloudfunctions.net';\n  private headers: Headers = new Headers();\n\n  constructor(\n    private http: HttpClient,\n    private angularFirestore: AngularFirestore) {\n    this.headers.append('Content-Type', 'application/json');\n  }\n\n  getAllUsers() {\n    return this.http.get(`${this.apiUrl}/users/`);\n  }\n\n  getUserById(uid) {\n    return this.angularFirestore\n      .collection<any>(`users`)\n      .doc<User>(uid).valueChanges();\n  }\n\n  createUser(user: any) {\n    // generate new API-User\n    const data = {\n      firstname: user.firstname,\n      lastname: user.lastname,\n      dateOfBirth: user.dateOfBirth,\n      sex: user.sex,\n      city: user.city,\n      activities: user.activities,\n      offers: user.offers,\n      mail: user.mail,\n      password: user.password\n    };\n\n    return this.http.post(`${this.apiUrl}/users/`, data);\n  }\n\n  updateUser(id: string, user: any) {\n    return this.http.put(`${this.apiUrl}/users/${id}`, user);\n  }\n\n  deleteUser(id: string) {\n    return this.http.delete(`${this.apiUrl}/users/${id}`);\n  }\n}\n","import { Utilities } from './../models/utilities';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilityStoreService {\n\n  offersDe;\n  offersEn;\n  activitiesDe;\n  activitiesEn;\n  citiesDe;\n  citiesEn;\n  sexDe;\n  sexEn;\n\n  constructor(\n    private angularFirestore: AngularFirestore\n  ) {\n    this.angularFirestore.collection('utilities')\n      .doc('utilitiesDoc')\n      .get()\n      .subscribe(doc => {\n        const utilitiesDoc = doc.data() as Utilities;\n        this.offersDe = utilitiesDoc.offersDe;\n        this.offersEn = utilitiesDoc.offersEn;\n        this.activitiesDe = utilitiesDoc.activitiesDe;\n        this.activitiesEn = utilitiesDoc.activitiesEn;\n        this.citiesDe = utilitiesDoc.citiesDe;\n        this.citiesEn = utilitiesDoc.citiesEn;\n        this.sexDe = utilitiesDoc.sexDe;\n        this.sexEn = utilitiesDoc.sexEn;\n      });\n  }\n\n  getAllOffers(language: string) {\n    if (language === 'de') {\n      return this.offersDe;\n    } else {\n      return this.offersEn;\n    }\n  }\n\n  getAllActivities(language: string) {\n    if (language === 'de') {\n      return this.activitiesDe;\n    } else {\n      return this.activitiesEn;\n    }\n  }\n\n  getAllCities(language: string) {\n    if (language === 'de') {\n      return this.citiesDe;\n    } else {\n      return this.citiesEn;\n    }\n  }\n\n  getAllSex(language: string) {\n    if (language === 'de') {\n      return this.sexDe;\n    } else {\n      return this.sexEn;\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyCww8YKdmbCbawimU1yEzpNDb6jHpr8fzs',\n    projectId: 'tandemfirebase'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}
