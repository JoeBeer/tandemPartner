{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/about-page/about-page.component.html","webpack:///./src/app/components/about-page/about-page.component.scss","webpack:///./src/app/components/about-page/about-page.component.ts","webpack:///./src/app/components/chatroom-item/chatroom-item.component.html","webpack:///./src/app/components/chatroom-item/chatroom-item.component.scss","webpack:///./src/app/components/chatroom-item/chatroom-item.component.ts","webpack:///./src/app/components/chatroom-list/chatroom-list.component.html","webpack:///./src/app/components/chatroom-list/chatroom-list.component.scss","webpack:///./src/app/components/chatroom-list/chatroom-list.component.ts","webpack:///./src/app/components/error-page/error-page.component.html","webpack:///./src/app/components/error-page/error-page.component.scss","webpack:///./src/app/components/error-page/error-page.component.ts","webpack:///./src/app/components/footer/footer.component.html","webpack:///./src/app/components/footer/footer.component.scss","webpack:///./src/app/components/footer/footer.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/impressum-page/impressum-page.component.html","webpack:///./src/app/components/impressum-page/impressum-page.component.scss","webpack:///./src/app/components/impressum-page/impressum-page.component.ts","webpack:///./src/app/components/login-page/login-page.component.html","webpack:///./src/app/components/login-page/login-page.component.scss","webpack:///./src/app/components/login-page/login-page.component.ts","webpack:///./src/app/components/match-list/match-list.component.html","webpack:///./src/app/components/match-list/match-list.component.scss","webpack:///./src/app/components/match-list/match-list.component.ts","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.scss","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile-page/profile-page.component.html","webpack:///./src/app/components/profile-page/profile-page.component.scss","webpack:///./src/app/components/profile-page/profile-page.component.ts","webpack:///./src/app/components/register-page/register-page.component.css","webpack:///./src/app/components/register-page/register-page.component.html","webpack:///./src/app/components/register-page/register-page.component.ts","webpack:///./src/app/components/result-page/result-page.component.html","webpack:///./src/app/components/result-page/result-page.component.scss","webpack:///./src/app/components/result-page/result-page.component.ts","webpack:///./src/app/components/search-page/search-page.component.html","webpack:///./src/app/components/search-page/search-page.component.scss","webpack:///./src/app/components/search-page/search-page.component.ts","webpack:///./src/app/models/match.ts","webpack:///./src/app/models/searchrequest.ts","webpack:///./src/app/services/activities-offers-cities-store.service.ts","webpack:///./src/app/services/auth-guard.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/match-store.service.ts","webpack:///./src/app/services/search.service.ts","webpack:///./src/app/services/user-store.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ0D;AACjB;AACc;AACoC;AAC1B;AACiB;AACG;AACM;AACA;AACT;AACA;AACM;AACH;AACS;AACZ;AAElF,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,UAAU,EAAE,QAAQ;QACpB,SAAS,EAAE,MAAM;KAClB;IACD;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,+FAAkB;KAC9B;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,uGAAqB;KACjC;IACD;QACE,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,6EAAa;QACxB,WAAW,EAAE,CAAC,sEAAS,CAAC;KACzB;IACD;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,+FAAkB;KAC9B;IACD;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,uGAAqB;KACjC;IACD;QACE,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uGAAqB;KACjC;IACD;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,qGAAoB;KAChC;IACD;QACE,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,iGAAmB;KAC/B;IACD;QACE,IAAI,EAAE,eAAe;QACrB,SAAS,EAAE,kGAAmB;KAC/B;IACD;QACE,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2GAAsB;KAClC;IACD;QACE,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,8FAAkB;KAC9B;IACD;QACE,IAAI,EAAE,IAAI;QACV,SAAS,EAAE,+FAAkB;KAC9B;CACF,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;AC7E7B,yJ;;;;;;;;;;;ACAA,+DAA+D,+H;;;;;;;;;;;;;;;;;ACArB;AAO1C;IALA;QAME,UAAK,GAAG,iBAAiB,CAAC;IAC5B,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEe;AACT;AACmB;AACE;AACG;AACN;AACI;AAChB;AACiB;AACR;AAE9D,aAAa;AAC8E;AAC1B;AACiB;AACA;AACS;AACA;AACH;AACH;AACA;AACS;AACZ;AACA;AACX;AACA;AAEvE,WAAW;AAC2C;AACI;AACO;AACE;AACoC;AAC7C;AAE1D,uBAAuB;AAC2B;AACS;AACD;AAC+B;AAElF,SAAS,iBAAiB,CAAC,IAAgB;IAChD,OAAO,IAAI,8EAAmB,CAAC,IAAI,CAAC,CAAC;AACvC,CAAC;AAqDD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAnDrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,wGAAqB;gBACrB,8EAAa;gBACb,+FAAkB;gBAClB,+FAAkB;gBAClB,wGAAqB;gBACrB,wGAAqB;gBACrB,qGAAoB;gBACpB,kGAAmB;gBACnB,kGAAmB;gBACnB,2GAAsB;gBACtB,+FAAkB;gBAClB,+FAAkB;gBAClB,oFAAe;gBACf,oFAAe;aAChB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,qEAAgB;gBAChB,kEAAmB;gBACnB,mEAAe,CAAC,OAAO,CAAC;oBACtB,MAAM,EAAE;wBACN,OAAO,EAAE,mEAAe;wBACxB,UAAU,EAAE,iBAAiB;wBAC7B,IAAI,EAAE,CAAC,+DAAU,CAAC;qBACnB;iBACF,CAAC;gBACF,gEAAiB,CAAC,aAAa,CAAC,sEAAW,CAAC,QAAQ,CAAC;gBACrD,yEAAqB;gBACrB,+EAAsB;gBACtB,kFAAiB;gBACjB,mEAAmB;gBACnB,oFAA2B,CAAC,OAAO,EAAE;gBACrC,0DAAW;gBACX,4EAAkB,CAAC,OAAO,EAAE;aAC7B;YACD,SAAS,EAAE;gBACT,8EAAgB;gBAChB,mEAAW;gBACX,uEAAS;gBACT,gFAAiB;gBACjB,oHAAkC;gBAClC,4HAA4H;gBAC5H,EAAE,OAAO,EAAE,+EAAsB,EAAE,QAAQ,EAAE,EAAE,EAAE;gBACjD,uEAAa;aACd;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACnGtB,wpC;;;;;;;;;;;ACAA,+DAA+D,uK;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;IAAgB,CAAC;IAEjB,qCAAQ,GAAR;IACA,CAAC;IALU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,6HAA0C;;SAE3C,CAAC;;OACW,kBAAkB,CAO9B;IAAD,yBAAC;CAAA;AAP8B;;;;;;;;;;;;ACP/B,4D;;;;;;;;;;;ACAA,+DAA+D,+K;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;IAAgB,CAAC;IAEjB,wCAAQ,GAAR;IACA,CAAC;IALU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,sIAA6C;;SAE9C,CAAC;;OACW,qBAAqB,CAOjC;IAAD,4BAAC;CAAA;AAPiC;;;;;;;;;;;;ACPlC,4D;;;;;;;;;;;ACAA,+DAA+D,+K;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;IAAgB,CAAC;IAEjB,wCAAQ,GAAR;IACA,CAAC;IALU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,sIAA6C;;SAE9C,CAAC;;OACW,qBAAqB,CAOjC;IAAD,4BAAC;CAAA;AAPiC;;;;;;;;;;;;ACPlC,gZ;;;;;;;;;;;ACAA,+DAA+D,uK;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;IAAgB,CAAC;IAEjB,qCAAQ,GAAR;IACA,CAAC;IALU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,6HAA0C;;SAE3C,CAAC;;OACW,kBAAkB,CAO9B;IAAD,yBAAC;CAAA;AAP8B;;;;;;;;;;;;ACP/B,sMAAsM,uCAAuC,uGAAuG,+BAA+B,kF;;;;;;;;;;;ACAnX,+DAA+D,2J;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IALU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,iHAAsC;;SAEvC,CAAC;;OACW,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;;;;;ACP5B,+DAA+D,uJ;;;;;;;;;;;ACA/D,qEAAqE,wCAAwC,sSAAsS,2CAA2C,+GAA+G,kCAAkC,GAAG,sBAAsB,qWAAqW,qBAAqB,ysCAAysC,8BAA8B,4BAA4B,0BAA0B,wKAAwK,gCAAgC,kKAAkK,kBAAkB,qEAAqE,mBAAmB,kNAAkN,kCAAkC,kKAAkK,4GAA4G,kBAAkB,4T;;;;;;;;;;;;;;;;;;;;;ACC9pG;AACb;AACW;AACrB;AAGU;AACA;AAO5D;IAqBE,uBACU,gBAAkC,EAClC,WAAwB,EACxB,iBAAoC;QAFpC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,gBAAW,GAAX,WAAW,CAAa;QACxB,sBAAiB,GAAjB,iBAAiB,CAAmB;QAd9C,wBAAwB;QACxB,YAAO,GAAG,yEAAO,CAAC;QAClB,YAAO,GAAG,yEAAO,CAAC;QAElB,iBAAiB;QACjB,eAAU,GAAG,CAAC,CAAC;QAEf,YAAY;QACZ,YAAO,GAAG,MAAM,CAAC;QACjB,gBAAW,GAAG,KAAK,CAAC;IAMd,CAAC;IAEP,8EAA8E;IAC9E,gCAAQ,GAAR;QACE,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC;IACvE,CAAC;IAGD,uDAA+B,GAA/B,UAAgC,EAAU;QAA1C,iBAQC;QAPC,IAAI,CAAC,iBAAiB,CAAC,8BAA8B,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAO,IAAI,YAAI,CAAC,aAAa,GAAG,OAAO,EAA5B,CAA4B,CAAC,CAAC;QACxG,6CAA6C;QAC7C,qDAAqD;QACrD,+CAA+C;QAC/C,6CAA6C;QAC7C,kDAAkD;QAClD,MAAM;IACR,CAAC;IAED,6CAAqB,GAArB,UAAsB,EAAU;QAAhC,iBAKC;QAJC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,YAAkB;YACjE,KAAI,CAAC,kBAAkB,GAAG,YAAY,CAAC,SAAS,CAAC;YACjD,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,KAAI,CAAC,kBAAkB,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAW,GAAX;QACE,6CAA6C;QAC7C,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC1B,2EAA2E;IAC3E,CAAC;IAED,oCAAY,GAAZ;QACE,oDAAoD;QACpD,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACxB,0EAA0E;IAC3E,CAAC;IAED,iCAAS,GAAT,UAAU,EAAU;QAApB,iBASC;QARC,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAE,eAAK;YAC/B,IAAI,KAAK,CAAC,GAAG,KAAK,EAAE,EAAE;gBACpB,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;aAC1B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAU,GAAV;QACE,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IA5EU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,2GAAoC;;SAErC,CAAC;+EAuB4B,oFAAgB;YACrB,kEAAW;YACL,+EAAiB;OAxBnC,aAAa,CA8EzB;IAAD,oBAAC;CAAA;AA9EyB;;;;;;;;;;;;ACf1B,oqB;;;;;;;;;;;ACAA,+DAA+D,mL;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;IAAgB,CAAC;IAEjB,yCAAQ,GAAR;IACA,CAAC;IALU,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,yIAA8C;;SAE/C,CAAC;;OACW,sBAAsB,CAOlC;IAAD,6BAAC;CAAA;AAPkC;;;;;;;;;;;;ACPnC,waAAwa,mCAAmC,scAAsc,sCAAsC,8dAA8d,0CAA0C,+VAA+V,kCAAkC,0MAA0M,qCAAqC,wK;;;;;;;;;;;ACA/iE,uBAAuB,iBAAiB,gBAAgB,EAAE,+CAA+C,2iB;;;;;;;;;;;;;;;;;;;;;ACAvD;AACkB;AAC3B;AAEmB;AACH;AACE;AAO3D;IAQE,4BAAoB,WAAwB,EACxB,MAAc,EACd,WAAwB;QAFxB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QAN5C,YAAY;QACZ,SAAI,GAAG,sEAAI,CAAC;QACZ,WAAM,GAAG,wEAAM,CAAC;QAKF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;IACzC,CAAC;IAEd,qCAAQ,GAAR;IACA,CAAC;IAED,4CAAe,GAAf;QACE,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC5B,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,iBAAiB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC7C,CAAC,CAAC;IACL,CAAC;IAED,kCAAK,GAAL;QACE,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,aAAa,CAAC;QAChD,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,iBAAiB,CAAC;QAExD,IAAI,CAAC,WAAW,CAAC,yBAAyB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAC7D,CAAC;IAED,sBAAI,6CAAa;aAAjB;YACE,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC7C,CAAC;;;OAAA;IAED,sBAAI,iDAAiB;aAArB;YACE,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QACjD,CAAC;;;OAAA;IArCU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,6HAA0C;;SAE3C,CAAC;+EASiC,0DAAW;YAChB,sDAAM;YACD,yEAAW;OAVjC,kBAAkB,CAsC9B;IAAD,yBAAC;CAAA;AAtC8B;;;;;;;;;;;;ACb/B,0EAA0E,4CAA4C,khBAAkhB,2CAA2C,iXAAiX,iFAAiF,qKAAqK,wCAAwC,IAAI,sBAAsB,sZAAsZ,qBAAqB,ymBAAymB,0CAA0C,+oBAA+oB,8BAA8B,oCAAoC,0BAA0B,8cAA8c,6CAA6C,yaAAya,2EAA2E,kKAAkK,2CAA2C,IAAI,6BAA6B,+ZAA+Z,4BAA4B,mgBAAmgB,yCAAyC,qoBAAqoB,8BAA8B,oCAAoC,0BAA0B,yVAAyV,gCAAgC,+KAA+K,kBAAkB,qEAAqE,mBAAmB,kNAAkN,kCAAkC,kKAAkK,4GAA4G,kBAAkB,4T;;;;;;;;;;;ACAhtO,+DAA+D,uK;;;;;;;;;;;;;;;;;;;;;;ACAlB;AAC4B;AACb;AACV;AACsB;AAC/B;AACzC,+DAA+D;AAO/D;IAoBE,4BAAoB,WAAwB,EACxB,iBAAoC,EACpC,MAAc;QAFd,gBAAW,GAAX,WAAW,CAAa;QACxB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,WAAM,GAAN,MAAM,CAAQ;QAhBlC,wBAAwB;QACxB,YAAO,GAAG,yEAAO,CAAC;QAClB,eAAU,GAAG,4EAAU,CAAC;QAExB,iBAAiB;QACjB,8BAAyB,GAAG,CAAC,CAAC;QAC9B,uBAAkB,GAAG,CAAC,CAAC;QAEvB,YAAY;QACZ,YAAO,GAAG,MAAM,CAAC;QACjB,gBAAW,GAAG,KAAK,CAAC;IAOiC,CAAC;IAEtD,qCAAQ,GAAR;QACC,0GAA0G;QAC1G,+BAA+B;QAC/B,MAAM;QACP,IAAI,CAAC,eAAe,GAAG;YAClB,IAAI,mDAAK,CACT,8BAA8B,EAC9B,8BAA8B,EAC9B,QAAQ,EACR,IAAI,CAAC;YACL,IAAI,mDAAK,CACR,8BAA8B,EAC9B,8BAA8B,EAC9B,QAAQ,EACR,IAAI,CAAC;YACN,IAAI,mDAAK,CACR,8BAA8B,EAC9B,8BAA8B,EAC9B,QAAQ,EACR,IAAI,CAAC;SAAC,CAAC;QACb,IAAI,CAAC,aAAa,GAAG;YAChB,IAAI,mDAAK,CACT,sBAAsB,EACtB,8BAA8B,EAC9B,WAAW,EACX,KAAK,CAAC;SACP,CAAC;QACN,qCAAqC;QACrC,mCAAmC;IAClC,CAAC;IAED,uDAA0B,GAA1B;QACE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/C,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,IAAI,EAAE;gBACxC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBAC7C,CAAC,EAAE,CAAC;aACL;SACF;IACH,CAAC;IAED,qDAAwB,GAAxB;QACE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC/C,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,KAAK,EAAE;gBACzC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBAC3C,CAAC,EAAE,CAAC;aACL;SACF;IACH,CAAC;IAED,wCAAW,GAAX,UAAY,WAAmB,EAAE,SAAiB;QAChD,yDAAyD;QACzD,2CAA2C;QAC3C,yJAAyJ;IAC3J,CAAC;IAED,+CAAkB,GAAlB,UAAmB,OAAe;QAChC,yCAAyC;QACzC,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IAC9C,CAAC;IAED,sCAAS,GAAT,UAAU,EAAU;QAClB,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACxB,sCAAsC;QACtC,2BAA2B;QAC3B,gCAAgC;QAChC,MAAM;QACN,MAAM;IACP,CAAC;IAED,uCAAU,GAAV;QACE,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IArGU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,6HAA0C;;SAE3C,CAAC;+EAqBiC,yEAAW;YACL,+EAAiB;YAC5B,sDAAM;OAtBvB,kBAAkB,CAuG9B;IAAD,yBAAC;CAAA;AAvG8B;;;;;;;;;;;;ACb/B,qpCAAqpC,iCAAiC,oKAAoK,oCAAoC,mKAAmK,mCAAmC,oKAAoK,oCAAoC,kKAAkK,iCAAiC,2WAA2W,6uCAA6uC,+BAA+B,+LAA+L,8BAA8B,sF;;;;;;;;;;;ACAnyH,+DAA+D,2J;;;;;;;;;;;;;;;;;;;;;ACCQ;AACX;AACV;AACK;AACd;AAOzC;IAKE,yBAAoB,gBAAkC,EAClC,WAAwB,EACxB,MAAc,EACd,gBAAkC;QAHlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,qBAAgB,GAAhB,gBAAgB,CAAkB;QANtD,oDAAoD;QACpD,gBAAW,GAAG,KAAK,CAAC;QAMlB,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC;IAEF,kCAAQ,GAAR;IACA,CAAC;IAED,oCAAU,GAAV;QACE,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;IACvC,CAAC;IAED,wCAAc,GAAd,UAAe,QAAgB;QAC7B,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACpC,IAAI,QAAQ,KAAK,IAAI,EAAE;YACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACzB;aAAM;YACL,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;SAC1B;IACH,CAAC;IAED,gCAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC5B,CAAC;IA9BU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,iHAAsC;;SAEvC,CAAC;+EAMsC,oEAAgB;YACrB,kEAAW;YAChB,sDAAM;YACI,6EAAgB;OAR3C,eAAe,CAgC3B;IAAD,sBAAC;CAAA;AAhC2B;;;;;;;;;;;;ACZ5B,qOAAqO,oCAAoC,ySAAyS,mCAAmC,oKAAoK,mCAAmC,wIAAwI,kCAAkC,kKAAkK,kCAAkC,8LAA8L,6BAA6B,yGAAyG,KAAK,sHAAsH,8BAA8B,uWAAuW,8BAA8B,8TAA8T,oBAAoB,sPAAsP,kCAAkC,4TAA4T,4DAA4D,iMAAiM,gCAAgC,wUAAwU,oBAAoB,mQAAmQ,oCAAoC,wVAAwV,oBAAoB,uSAAuS,oCAAoC,sKAAsK,kCAAkC,+GAA+G,2CAA2C,oLAAoL,yCAAyC,mTAAmT,mCAAmC,GAAG,oCAAoC,4EAA4E,wCAAwC,qPAAqP,kCAAkC,GAAG,oCAAoC,2EAA2E,wCAAwC,qOAAqO,8BAA8B,GAAG,oCAAoC,qEAAqE,iCAAiC,sPAAsP,2CAA2C,kRAAkR,2CAA2C,wNAAwN,4CAA4C,gQAAgQ,qCAAqC,4PAA4P,gCAAgC,oRAAoR,yCAAyC,+bAA+b,oCAAoC,iOAAiO,oCAAoC,yLAAyL,qCAAqC,sK;;;;;;;;;;;ACAhgS,mCAAmC,eAAe,iBAAiB,EAAE,yBAAyB,eAAe,iBAAiB,EAAE,mBAAmB,eAAe,iBAAiB,EAAE,+CAA+C,20B;;;;;;;;;;;;;;;;;;;;;;ACAlL;AACmC;AAC5C;AAC8B;AAEX;AAC+C;AAO3G;IAoBE,8BAAoB,WAAwB,EACxB,MAAc,EACd,gBAAkC,EAClC,WAAwB,EACxB,kCAAsE;QAJtE,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,gBAAW,GAAX,WAAW,CAAa;QACxB,uCAAkC,GAAlC,kCAAkC,CAAoC;QAT1F,uBAAuB;QACvB,uBAAkB,GAAG,EAAE,CAAC;QACxB,mCAA8B,GAAG,EAAE,CAAC;QASxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;IAClD,CAAC;IAED,uCAAQ,GAAR;QACE,+CAA+C;QAC/C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,kCAAkC,CAAC,YAAY,EAAE,CAAC;QACrE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kCAAkC,CAAC,gBAAgB,EAAE,CAAC;QAC7E,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,kCAAkC,CAAC,YAAY,EAAE,CAAC;QAGrE,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC;QACzE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,UAAU,CAAC;QAChE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,MAAM;YACvD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;QACpD,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,CAAC;QACtF,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;QACpF,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAChF,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,WAAW,CAAC,CAAC;QAEvF,IAAI,CAAC,6BAA6B,EAAE,CAAC;IACvC,CAAC;IAED,6CAAc,GAAd;QACE,uBAAuB;QACvB,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAE;YAC7B,4CAA4C;YAC5C,iBAAiB,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;YAEhF,4CAA4C;YAC5C,gBAAgB,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;YAE/E,YAAY,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YAE3D,gBAAgB,EAAE,CAAC,EAAC,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC;YAE/C,oIAAoI;YACpI,2CAA2C;YAC3C,gBAAgB,EAAE,CAAC,EAAE,EAAE,CAAE,8EAA8E,CAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAE3J,oIAAoI;YACpI,2CAA2C;YAC3C,uBAAuB,EAAE,CAAC,EAAE,EAAE,CAAE,8EAA8E,CAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAChK,2EAA2E;SAC9E,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,sBAAsB,EAAC,CAAC,CAAC;IAChD,CAAC;IAED,4DAA6B,GAA7B;QAEE,IAAI,CAAC,kBAAkB,GAAG;YACxB,eAAe,EAAE,IAAI;YACrB,OAAO,EAAE,SAAS;YAClB,SAAS,EAAE,WAAW;YACtB,cAAc,EAAE,KAAK;YACrB,iBAAiB,EAAE,KAAK;YACxB,wBAAwB,EAAE,IAAI;SAC/B,CAAC;QACF,oEAAoE;QACpE,IAAI,CAAC,8BAA8B,GAAG;YACpC,eAAe,EAAE,KAAK;YACtB,OAAO,EAAE,SAAS;YAClB,SAAS,EAAE,WAAW;YACtB,cAAc,EAAE,KAAK;YACrB,cAAc,EAAE,CAAC;YACjB,iBAAiB,EAAE,KAAK;SACzB,CAAC;IACJ,CAAC;IAED,uDAAwB,GAAxB,UAAyB,GAAW;QAClC,IAAI,GAAG,KAAK,GAAG,EAAE;YACf,OAAO,MAAM,CAAC;SACf;aAAM,IAAI,GAAG,KAAK,GAAG,EAAE;YACtB,OAAO,QAAQ,CAAC;SACjB;aAAM;YACL,OAAO,4BAA4B,CAAC;SACrC;IACH,CAAC;IAED,sDAAuB,GAAvB,UAAwB,GAAW;QACjC,IAAI,GAAG,KAAK,MAAM,IAAI,GAAG,KAAK,UAAU,EAAE;YACxC,OAAO,GAAG,CAAC;SACZ;aAAM,IAAI,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,UAAU,EAAE;YACjD,OAAO,GAAG,CAAC;SACZ;aAAM;YACL,OAAO,4BAA4B,CAAC;SACrC;IACH,CAAC;IAED,mDAAmD;IACnD,qDAAsB,GAAtB,UAAuB,OAAwB;QAC7C,IAAI,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,KAAK,KAAK,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC,KAAK,EAAE;YAC1F,OAAO,EAAC,OAAO,EAAE,IAAI,EAAE,CAAC;SACzB;IACH,CAAC;IAED,6FAA6F;IAC7F,8GAA8G;IAC9G,2CAAY,GAAZ;QAEE,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;YACzB,OAAO;SACR;QACD,gCAAgC;QAChC,IAAM,QAAQ,GAAG;YACf,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,iBAAiB;YAChD,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,gBAAgB;YAC9C,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YAC1B,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,gBAAgB;YACjD,+CAA+C;YAC/C,GAAG,EAAE,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,GAAG,CAAC;YAC3C,UAAU,EAAE,IAAI,CAAC,kBAAkB;YACnC,MAAM,EAAE,IAAI,CAAC,cAAc;SAC5B,CAAC;QAGF,sFAAsF;QACtF,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC;QAC9C,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,gBAAgB,CAAC;QAEtD,IAAI,QAAQ,KAAK,CAAC,IAAI,IAAI,QAAQ,KAAK,CAAC,SAAS,IAAI,QAAQ,KAAK,CAAC,EAAE,EAAG;YACtE,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YACrC,iEAAiE;SAClE;QAED,IAAI,IAAI,KAAK,CAAC,IAAI,IAAI,IAAI,KAAK,CAAC,SAAS,IAAI,IAAI,KAAK,CAAC,EAAE,EAAG;YAC1D,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;YAChC,0DAA0D;SAC3D;QAEF,mFAAmF;QACnF,iGAAiG;QACjG,8BAA8B;QAC9B,qCAAqC;QACrC,MAAM;IAEP,CAAC;IAID,sBAAI,mDAAiB;QADrB,6BAA6B;aAC7B;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QAChD,CAAC;;;OAAA;IAED,sBAAI,kDAAgB;aAApB;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAC/C,CAAC;;;OAAA;IAED,sBAAI,kDAAgB;aAApB;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAC/C,CAAC;;;OAAA;IAEF,sBAAI,8CAAY;aAAhB;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC3C,CAAC;;;OAAA;IAED,sBAAI,kDAAgB;aAApB;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QAC/C,CAAC;;;OAAA;IACD,sBAAI,yDAAuB;aAA3B;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QACtD,CAAC;;;OAAA;IAzLW,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,mIAA4C;;SAE7C,CAAC;+EAqBiC,0DAAW;YAChB,sDAAM;YACI,oFAAgB;YACrB,yEAAW;YACY,mHAAkC;OAxB/E,oBAAoB,CA4LhC;IAAD,2BAAC;CAAA;AA5LgC;;;;;;;;;;;;ACbjC,+DAA+D,+K;;;;;;;;;;;ACA/D,qOAAqO,qCAAqC,qTAAqT,mCAAmC,4KAA4K,mCAAmC,4IAA4I,kCAAkC,0KAA0K,kCAAkC,kMAAkM,6BAA6B,kUAAkU,oBAAoB,gOAAgO,8BAA8B,mXAAmX,8BAA8B,sUAAsU,oBAAoB,0PAA0P,kCAAkC,wSAAwS,4DAA4D,qMAAqM,gCAAgC,gVAAgV,oBAAoB,uQAAuQ,oCAAoC,gWAAgW,oBAAoB,uSAAuS,kCAAkC,8KAA8K,kCAAkC,+GAA+G,yCAAyC,4LAA4L,yCAAyC,mUAAmU,mCAAmC,GAAG,oCAAoC,gFAAgF,wCAAwC,qQAAqQ,kCAAkC,GAAG,oCAAoC,+EAA+E,wCAAwC,qPAAqP,8BAA8B,GAAG,oCAAoC,yEAAyE,iCAAiC,qQAAqQ,kCAAkC,GAAG,oCAAoC,iFAAiF,2CAA2C,iSAAiS,yCAAyC,GAAG,oCAAoC,wFAAwF,2CAA2C,oOAAoO,4CAA4C,oQAAoQ,6BAA6B,GAAG,oCAAoC,sRAAsR,qCAAqC,sSAAsS,yCAAyC,4QAA4Q,gCAAgC,4RAA4R,oCAAoC,+cAA+c,oCAAoC,qNAAqN,oCAAoC,sK;;;;;;;;;;;;;;;;;;;;;;;;ACA3vU;AACmC;AAC5C;AAC8B;AAEX;AAC+C;AAC9E;AAO7B;IAmBE,+BAAoB,WAAwB,EACxB,MAAc,EACd,gBAAkC,EAClC,WAAwB,EACxB,kCAAsE;QAJtE,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,gBAAW,GAAX,WAAW,CAAa;QACxB,uCAAkC,GAAlC,kCAAkC,CAAoC;QAnB1F,UAAK,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAU3B,mCAA8B,GAAG,EAAE,CAAC;QACpC,sBAAiB,GAAG,EAAE,CAAC;QACvB,uBAAkB,GAAG,EAAE,CAAC;QASZ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC1D,CAAC;IAED,wCAAQ,GAAR;QACE,+CAA+C;QAC/C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,kCAAkC,CAAC,YAAY,EAAE,CAAC;QACrE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kCAAkC,CAAC,gBAAgB,EAAE,CAAC;QAC7E,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,kCAAkC,CAAC,YAAY,EAAE,CAAC;QAErE,IAAI,CAAC,6BAA6B,EAAE,CAAC;IACvC,CAAC;IAED,kDAAkB,GAAlB;QACE,uBAAuB;QACvB,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAE;YAC7B,4CAA4C;YAC5C,qBAAqB,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;YAEpF,4CAA4C;YAC5C,oBAAoB,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;YAEnF,gBAAgB,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YAE/D,oBAAoB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAE/C,oIAAoI;YACpI,2CAA2C;YAC3C,oBAAoB,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,8EAA8E,CAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAEnL,oIAAoI;YACpI,2CAA2C;YAC3C,2BAA2B,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,8EAA8E,CAAC,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACxL,2EAA2E;SAC9E,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,sBAAsB,EAAC,CAAC,CAAC;IAChD,CAAC;IAED,6DAA6B,GAA7B;QACE,+DAA+D;QAC/D,IAAI,CAAC,iBAAiB,GAAG;YACvB,eAAe,EAAE,IAAI;YACrB,OAAO,EAAE,SAAS;YAClB,SAAS,EAAE,WAAW;YACtB,cAAc,EAAE,KAAK;YACrB,iBAAiB,EAAE,KAAK;YACxB,wBAAwB,EAAE,IAAI;SAC/B,CAAC;QAEF,IAAI,CAAC,kBAAkB,GAAG;YACxB,eAAe,EAAE,IAAI;YACrB,OAAO,EAAE,SAAS;YAClB,SAAS,EAAE,WAAW;YACtB,cAAc,EAAE,KAAK;YACrB,iBAAiB,EAAE,KAAK;YACxB,wBAAwB,EAAE,IAAI;SAC/B,CAAC;QAEF,oEAAoE;QACpE,IAAI,CAAC,8BAA8B,GAAG;YACpC,eAAe,EAAE,KAAK;YACtB,OAAO,EAAE,SAAS;YAClB,SAAS,EAAE,WAAW;YACtB,cAAc,EAAE,KAAK;YACrB,cAAc,EAAE,CAAC;YACjB,iBAAiB,EAAE,KAAK;SACzB,CAAC;IACJ,CAAC;IAED,mDAAmD;IACnD,sDAAsB,GAAtB,UAAuB,OAAwB;QAC7C,IAAI,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC,KAAK,KAAK,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC,KAAK,EAAE;YAClG,OAAO,EAAC,OAAO,EAAE,IAAI,EAAE,CAAC;SACzB;IACH,CAAC;IAED,6FAA6F;IAC7F,8GAA8G;IAC9G,gDAAgB,GAAhB;QAAA,iBA0BC;QAxBC,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;YAC7B,OAAO;SACR;QACD,gCAAgC;QAChC,IAAM,QAAQ,GAAG;YACf,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,qBAAqB;YACxD,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,oBAAoB;YACtD,IAAI,EAAE,IAAI,CAAC,YAAY;YACvB,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,oBAAoB;YACzD,+CAA+C;YAC/C,GAAG,EAAE,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACtD,UAAU,EAAE,IAAI,CAAC,kBAAkB;YACnC,MAAM,EAAE,IAAI,CAAC,cAAc;YAC3B,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,gBAAgB;YAC9C,QAAQ,EAAE,0CAAG,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,oBAAoB,CAAC;SACpE,CAAC;QAGA,gFAAgF;QAClF,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC;YACnD,yBAAyB;YACzB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,oEAAoE;IACpE,uDAAuB,GAAvB,UAAwB,GAAW;QACjC,IAAI,GAAG,KAAK,MAAM,IAAI,GAAG,KAAK,UAAU,EAAE;YACxC,OAAO,GAAG,CAAC;SACZ;aAAM,IAAI,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,UAAU,EAAE;YACjD,OAAO,GAAG,CAAC;SACZ;aAAM;YACL,OAAO,4BAA4B,CAAC;SACrC;IACH,CAAC;IAGD,sBAAI,wDAAqB;QADzB,6BAA6B;aAC7B;YACE,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACxD,CAAC;;;OAAA;IAED,sBAAI,uDAAoB;aAAxB;YACE,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACvD,CAAC;;;OAAA;IAED,sBAAI,uDAAoB;aAAxB;YACE,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACvD,CAAC;;;OAAA;IAED,sBAAI,mDAAgB;aAApB;YACE,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QACnD,CAAC;;;OAAA;IAED,sBAAI,uDAAoB;aAAxB;YACE,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACvD,CAAC;;;OAAA;IAED,sBAAI,8DAA2B;aAA/B;YACE,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;QAC9D,CAAC;;;OAAA;IAnKU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,sIAA6C;;SAE9C,CAAC;+EAoBiC,0DAAW;YAChB,sDAAM;YACI,oFAAgB;YACrB,yEAAW;YACY,mHAAkC;OAvB/E,qBAAqB,CAqKjC;IAAD,4BAAC;CAAA;AArKiC;;;;;;;;;;;;ACdlC,0D;;;;;;;;;;;ACAA,+DAA+D,2K;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;IAAgB,CAAC;IAEjB,sCAAQ,GAAR;IACA,CAAC;IALU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,gIAA2C;;SAE5C,CAAC;;OACW,mBAAmB,CAO/B;IAAD,0BAAC;CAAA;AAP+B;;;;;;;;;;;;ACPhC,ufAAuf,qCAAqC,sMAAsM,iCAAiC,wJAAwJ,yCAAyC,0RAA0R,sCAAsC,8ZAA8Z,6BAA6B,qTAAqT,oBAAoB,oSAAoS,4BAA4B,yTAAyT,oBAAoB,wOAAwO,kCAAkC,mVAAmV,oBAAoB,8RAA8R,6BAA6B,sTAAsT,oBAAoB,sQAAsQ,8BAA8B,iKAAiK,8BAA8B,yGAAyG,8BAA8B,iKAAiK,8BAA8B,+QAA+Q,qCAAqC,yJAAyJ,uCAAuC,qXAAqX,oCAAoC,kOAAkO,oCAAoC,+gBAA+gB,oBAAoB,2DAA2D,qBAAqB,KAAK,qBAAqB,kEAAkE,kBAAkB,0O;;;;;;;;;;;ACAxiN,+DAA+D,2K;;;;;;;;;;;;;;;;;;;;;ACC8C;AAC3D;AACuB;AAChC;AACuB;AAOhE;IAuBE,6BAAoB,WAAwB,EACxB,MAAc,EACd,kCAAsE,EACtE,aAA4B;QAH5B,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,uCAAkC,GAAlC,kCAAkC,CAAoC;QACtE,kBAAa,GAAb,aAAa,CAAe;QAtBhD,UAAK,GAAG,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;QAUnC,0BAAqB,GAAG,EAAE,CAAC;QAC3B,6BAAwB,GAAG,EAAE,CAAC;QAI9B,mCAAmC;QACnC,uBAAkB,GAAG,KAAK,CAAC;QAC3B,2BAAsB,GAAG,KAAK,CAAC;QAM7B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAChC,CAAC;IAEb,sCAAQ,GAAR;QACE,+CAA+C;QAC/C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,kCAAkC,CAAC,YAAY,EAAE,CAAC;QACrE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kCAAkC,CAAC,gBAAgB,EAAE,CAAC;QAC7E,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,kCAAkC,CAAC,YAAY,EAAE,CAAC;QAErE,IAAI,CAAC,6BAA6B,EAAE,CAAC;QAErC,kCAAkC;QAClC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,aAAa,CAAC,sCAAsC,CAAC,GAAG,CAAC,CAAC;IAC7F,CAAC;IAED,8CAAgB,GAAhB;QACG,uBAAuB;QACvB,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAE;YAC7B,gBAAgB,EAAE,CAAC,EAAE,CAAC;YAEtB,gBAAgB,EAAE,CAAC,EAAE,CAAC;SACvB,EAAE,EAAC,SAAS,EAAE,IAAI,CAAC,iBAAiB,EAAC,CAAC,CAAC;IAC3C,CAAC;IAED,2DAA6B,GAA7B;QACA,IAAI,CAAC,qBAAqB,GAAG;YAC3B,eAAe,EAAE,IAAI;YACrB,OAAO,EAAE,SAAS;YAClB,SAAS,EAAE,WAAW;YACtB,cAAc,EAAE,KAAK;YACrB,iBAAiB,EAAE,KAAK;YACxB,wBAAwB,EAAE,IAAI;SAC/B,CAAC;QAEF,oEAAoE;QACpE,IAAI,CAAC,wBAAwB,GAAG;YAC9B,eAAe,EAAE,KAAK;YACtB,OAAO,EAAE,SAAS;YAClB,SAAS,EAAE,WAAW;YACtB,cAAc,EAAE,KAAK;YACrB,cAAc,EAAE,CAAC;YACjB,iBAAiB,EAAE,KAAK;SACzB,CAAC;IACF,CAAC;IAED,+CAAiB,GAAjB,UAAkB,OAAwB;QACxC,IAAI,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,KAAK,EAAE;YACjF,OAAO,EAAC,OAAO,EAAE,IAAI,EAAE,CAAC;SACzB;IACH,CAAC;IAED,2CAAa,GAAb;QAEE,IAAM,UAAU,GAAG;YACjB,UAAU,EAAE,IAAI,CAAC,aAAa;YAC9B,UAAU,EAAE,IAAI,CAAC,kBAAkB;YACnC,QAAQ,EAAE,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,WAAW,CAAC;YACxD,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,gBAAgB;YACnD,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,gBAAgB;SACpD,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;IACrD,CAAC;IAED,oDAAsB,GAAtB,UAAuB,OAAsB;QAC3C,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,OAAO,CAAC,CAAC;IACxD,CAAC;IAED,oEAAoE;IACpE,qDAAuB,GAAvB,UAAwB,GAAW;QACjC,IAAI,GAAG,KAAK,MAAM,IAAI,GAAG,KAAK,UAAU,EAAE;YACxC,OAAO,GAAG,CAAC;SACZ;aAAM,IAAI,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,UAAU,EAAE;YACjD,OAAO,GAAG,CAAC;SACZ;aAAM,IAAI,GAAG,KAAK,MAAM,IAAI,GAAG,KAAK,MAAM,EAAE;YAC3C,OAAO,GAAG,CAAC;SACZ;aAAM;YACL,OAAO,4BAA4B,CAAC;SACrC;IACH,CAAC;IAED,sBAAI,iDAAgB;aAApB;YACE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QACjD,CAAC;;;OAAA;IAED,sBAAI,iDAAgB;aAApB;YACE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;QACjD,CAAC;;;OAAA;IAlHU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,gIAA2C;;SAE5C,CAAC;+EAwBiC,0DAAW;YAChB,sDAAM;YACsB,mHAAkC;YACvD,6EAAa;OA1BrC,mBAAmB,CAoH/B;IAAD,0BAAC;CAAA;AApH+B;;;;;;;;;;;;;ACZhC;AAAA;AAAA;IACE,eACS,WAAmB,EACnB,SAAiB,EACjB,YAAoB,EACpB,QAAiB;QAHjB,gBAAW,GAAX,WAAW,CAAQ;QACnB,cAAS,GAAT,SAAS,CAAQ;QACjB,iBAAY,GAAZ,YAAY,CAAQ;QACpB,aAAQ,GAAR,QAAQ,CAAS;IACvB,CAAC;IACN,YAAC;AAAD,CAAC;;;;;;;;;;;;;;ACPD;AAAA;AAAA;IACE,uBACO,WAAmB,EACnB,WAAmB,EACnB,QAAgB,EAChB,UAAkB;QAHlB,gBAAW,GAAX,WAAW,CAAQ;QACnB,gBAAW,GAAX,WAAW,CAAQ;QACnB,aAAQ,GAAR,QAAQ,CAAQ;QAChB,eAAU,GAAV,UAAU,CAAQ;IACtB,CAAC;IACN,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;ACP0C;AAK3C;IAME;QAJA,WAAM,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAChC,eAAU,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,CAAC,CAAC;QACzD,WAAM,GAAG,CAAC,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;IAEtC,CAAC;IAEjB,yDAAY,GAAZ;QACE,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,6DAAgB,GAAhB;QACE,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,yDAAY,GAAZ;QACE,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAlBU,kCAAkC;QAH9C,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,kCAAkC,CAmB9C;IAAD,yCAAC;CAAA;AAnB8C;;;;;;;;;;;;;;;;;;;;ACLoD;AACtD;AACF;AAM3C;IAEE,mBAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAExE,+BAAW,GAAX,UACE,IAA4B,EAAE,KAA0B;QACxD,IAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;QACxC,IAAI,CAAC,IAAI,EAAE;YACT,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SAC7B;QACD,OAAO,CAAC,CAAC,IAAI,CAAC;IAChB,CAAC;IAXU,SAAS;QAHrB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAGiC,yDAAW,EAAkB,sDAAM;OAFzD,SAAS,CA0BrB;IAAD,gBAAC;CAAA;AA1BqB;;;;;;;;;;;;;;;;;;;;;ACRiD;AAC5B;AACF;AACY;AAMrD;IAQE,qBAAmB,eAAgC,EAChC,MAAc,EACb,gBAAkC;QAFtD,iBAYC;QAZkB,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAQ;QACb,qBAAgB,GAAhB,gBAAgB,CAAkB;QAT/C,iBAAY,GAAkB,IAAI,CAAC;QAG1C,eAAU,GAAG,KAAK,CAAC;QAOjB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,SAAS,CAAE,cAAI;YAC5C,IAAI,IAAI,EAAE;gBACR,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,KAAI,CAAC,WAAW,CAAC,CAAC,CAAC;aAChE;iBAAM;gBACL,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;aACpC;QACH,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,6BAAO,GAAP;QAAA,iBAMC;QALC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,SAAS,CAAE,UAAC,YAAkB;YACrF,KAAI,CAAC,WAAW,GAAG,YAAY,CAAC;QAClC,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED,gCAAU,GAAV;QACE,IAAM,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC;QACnD,IAAI,IAAI,EAAE;YACR,OAAO,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SAC/B;aAAM;YACL,OAAO,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SAChC;IACH,CAAC;IAED,4BAAM,GAAN;QAAA,iBAOC;QANC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,EAAE;aAClC,IAAI,CAAC;YACJ,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAChC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,+CAAyB,GAAzB,UAA0B,IAAY,EAAE,QAAgB;QAAxD,iBAQC;QAPC,OAAO,IAAI,OAAO,CAAM,UAAC,OAAO,EAAE,MAAM;YACtC,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,8BAA8B,CAAC,IAAI,EAAE,QAAQ,CAAC;iBACvE,IAAI,CAAE,aAAG;gBACR,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,OAAO,CAAC,GAAG,CAAC,CAAC;YACf,CAAC,EAAE,eAAK,IAAI,aAAM,CAAC,KAAK,CAAC,EAAb,CAAa,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAEK,+CAAyB,GAA/B,UAAgC,IAAY,EAAE,QAAgB;;;;;;;wBAE1D,qBAAM,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,0BAA0B,CAAC,IAAI,EAAE,QAAQ,CAAC;;wBAA1E,SAA0E,CAAC;wBAC3E,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;wBACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;;;;wBAEhC,KAAK,CAAC,sBAAsB,GAAG,OAAK,CAAC,OAAO,CAAC,CAAC;;;;;;KAEjD;IAlEU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EASoC,kEAAe;YACxB,sDAAM;YACK,oFAAgB;OAV3C,WAAW,CAmEvB;IAAD,kBAAC;CAAA;AAnEuB;;;;;;;;;;;;;;;;;;;;ACTkB;AACC;AACgB;AAM3D;IAKE,2BAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QACvD,IAAI,CAAC,yBAAyB,GAAG;YAC/B,IAAI,mDAAK,CACT,8BAA8B,EAC9B,8BAA8B,EAC9B,QAAQ,EACR,KAAK,CAAC;YACN,IAAI,mDAAK,CACT,sBAAsB,EACtB,8BAA8B,EAC9B,WAAW,EACX,KAAK,CAAC;SACP,CAAC;IACA,CAAC;IAEI,0DAA8B,GAApC,UAAqC,EAAU;;;;;;;;wBAEzC,qBAAM,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE,CAAC;iCACjF,GAAG,EAAE,CAAC,IAAI,CAAE,kBAAQ;gCACnB,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAE,aAAG;oCACxB,KAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;gCAC1C,CAAC,CAAC,CAAC;4BACL,CAAC,CAAC;;wBALF,SAKE,CAAC;wBACH,sBAAO,IAAI,CAAC,iBAAiB,EAAC;;;wBAEhC,OAAO,CAAC,GAAG,CAAC,kCAAkC,EAAE,OAAK,CAAC,CAAC;;;;;;KAE1D;IAEK,wDAA4B,GAAlC,UAAmC,EAAU;;;;;;;;wBAGzC,qBAAM,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAQ,SAAS,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,EAAE,EAAE,CAAC;iCAC1F,GAAG,EAAE,CAAC,IAAI,CAAC,kBAAQ;gCAClB,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,aAAG;oCACvB,KAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAW,CAAC,CAAC;gCAC3D,CAAC,CAAC,CAAC;4BACL,CAAC,CAAC;;wBALF,SAKE,CAAC;;;;wBAEH,OAAO,CAAC,GAAG,CAAC,gDAAgD,EAAE,OAAK,CAAC,CAAC;;;;wBAMrE,qBAAM,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAQ,SAAS,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC;iCACtH,GAAG,EAAE,CAAC,IAAI,CAAE,kBAAQ;gCACnB,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,aAAG;oCACvB,KAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAW,CAAC,CAAC;gCAC3D,CAAC,CAAC,CAAC;4BACL,CAAC,CAAC;;wBALF,SAKE,CAAC;;;;wBAED,OAAO,CAAC,GAAG,CAAC,sDAAsD,EAAE,OAAK,CAAC,CAAC;;4BAG/E,sBAAO,IAAI,CAAC,yBAAyB,EAAC;;;;KAEvC;IAED,uCAAW,GAAX,UAAY,EAAU,EAAE,IAAS;QACjC,yBAAyB;IACzB,CAAC;IAED,uCAAW,GAAX,UAAY,OAAe;QAC3B,yBAAyB;IACzB,CAAC;IAtEU,iBAAiB;QAH7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAMsC,wEAAgB;OAL3C,iBAAiB,CAuE7B;IAAD,wBAAC;CAAA;AAvE6B;;;;;;;;;;;;;;;;;;;ACRa;AACa;AAKxD;IAQE;QANA,yBAAoB,GAAoB;YACtC,IAAI,mEAAa,CAAE,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,QAAQ,CAAC;YAC5C,IAAI,mEAAa,CAAE,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,WAAW,CAAC;YACjD,IAAI,mEAAa,CAAE,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,QAAQ,CAAC;SAC7C,CAAC;IAEc,CAAC;IAEjB,2CAAmB,GAAnB,UAAoB,UAAe,IAAG,CAAC;IAEvC,8DAAsC,GAAtC,UAAuC,GAAW;QAChD,OAAO,IAAI,CAAC,oBAAoB,CAAC;IACnC,CAAC;IAED,2CAAmB,GAAnB,UAAoB,UAAe;QACjC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAC1B,CAAC;IAED,iDAAyB,GAAzB,UAA0B,UAAe;QACvC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAC1B,CAAC;IAtBU,aAAa;QAHzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OACW,aAAa,CAuBzB;IAAD,oBAAC;CAAA;AAvByB;;;;;;;;;;;;;;;;;;;;ACNiB;AACT;AACgB;AAMlD;IAKE,0BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAH5B,WAAM,GAAG,6DAA6D,CAAC;QACvE,YAAO,GAAY,IAAI,OAAO,EAAE,CAAC;QAGvC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;IACzD,CAAC;IAED,sCAAW,GAAX;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,MAAM,WAAQ,CAAC,CAAC;IAC/C,CAAC;IAGD,sCAAW,GAAX,UAAY,EAAU;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,MAAM,eAAU,EAAI,CAAC,CAAC;IACrD,CAAC;IAED,qCAAU,GAAV,UAAW,IAAS;QAClB,wBAAwB;QACxB,IAAM,IAAI,GAAG;YACX,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,MAAM,WAAQ,EAAE,IAAI,CAAC,CAAC;IACtD,CAAC;IAED,qCAAU,GAAV,UAAW,EAAU,EAAE,IAAS;QAC/B,IAAM,IAAI,GAAG;YACX,GAAG,EAAE,EAAE;YACP,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,MAAM,eAAU,EAAI,EAAE,IAAI,CAAC,CAAC;IAC3D,CAAC;IAEM,qCAAU,GAAjB,UAAkB,EAAU;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,MAAM,eAAU,EAAI,CAAC,CAAC;IACxD,CAAC;IAEO,uCAAY,GAApB,UAAqB,KAAkB;QACrC,OAAO,+CAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IA1DU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAM0B,+DAAU;OALzB,gBAAgB,CA2D5B;IAAD,uBAAC;CAAA;AA3D4B;;;;;;;;;;;;;ACR7B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,QAAQ,EAAE;QACR,MAAM,EAAE,yCAAyC;QACjD,UAAU,EAAE,oCAAoC;QAChD,WAAW,EAAE,2CAA2C;QACxD,SAAS,EAAE,oBAAoB;QAC/B,aAAa,EAAE,gCAAgC;QAC/C,iBAAiB,EAAE,cAAc;KAClC;CACF,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACvBnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { AuthGuard } from './services/auth-guard.service';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { RegisterPageComponent } from './components/register-page/register-page.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { AboutPageComponent } from './components/about-page/about-page.component';\r\nimport { SearchPageComponent } from './components/search-page/search-page.component';\r\nimport { ChatroomListComponent } from './components/chatroom-list/chatroom-list.component';\r\nimport { ChatroomItemComponent } from './components/chatroom-item/chatroom-item.component';\r\nimport { LoginPageComponent } from './components/login-page/login-page.component';\r\nimport { MatchListComponent } from './components/match-list/match-list.component';\r\nimport { ProfilePageComponent } from './components/profile-page/profile-page.component';\r\nimport { ResultPageComponent } from './components/result-page/result-page.component';\r\nimport { ImpressumPageComponent } from './components/impressum-page/impressum-page.component';\r\nimport { ErrorPageComponent } from './components/error-page/error-page.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: '/login',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'login',\r\n    component: LoginPageComponent\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: RegisterPageComponent\r\n  },\r\n  {\r\n    path: 'home',\r\n    component: HomeComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'matches',\r\n    component: MatchListComponent\r\n  },\r\n  {\r\n    path: 'chats',\r\n    component: ChatroomListComponent\r\n  },\r\n  {\r\n    path: 'chats/:Id',\r\n    component: ChatroomItemComponent\r\n  },\r\n  {\r\n    path: 'profile',\r\n    component: ProfilePageComponent\r\n  },\r\n  {\r\n    path: 'search',\r\n    component: SearchPageComponent\r\n  },\r\n  {\r\n    path: 'search/result',\r\n    component: ResultPageComponent\r\n  },\r\n  {\r\n    path: 'impressum',\r\n    component: ImpressumPageComponent\r\n  },\r\n  {\r\n    path: 'about',\r\n    component: AboutPageComponent\r\n  },\r\n  {\r\n    path: '**',\r\n    component: ErrorPageComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"container\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n<app-footer></app-footer>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'tandem-frontend';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\n\r\n// components\r\nimport { RegisterPageComponent } from './components/register-page/register-page.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { LoginPageComponent } from './components/login-page/login-page.component';\r\nimport { MatchListComponent } from './components/match-list/match-list.component';\r\nimport { ChatroomListComponent } from './components/chatroom-list/chatroom-list.component';\r\nimport { ChatroomItemComponent } from './components/chatroom-item/chatroom-item.component';\r\nimport { ProfilePageComponent } from './components/profile-page/profile-page.component';\r\nimport { SearchPageComponent } from './components/search-page/search-page.component';\r\nimport { ResultPageComponent } from './components/result-page/result-page.component';\r\nimport { ImpressumPageComponent } from './components/impressum-page/impressum-page.component';\r\nimport { AboutPageComponent } from './components/about-page/about-page.component';\r\nimport { ErrorPageComponent } from './components/error-page/error-page.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\n\r\n// services\r\nimport { AuthService } from './services/auth.service';\r\nimport { AuthGuard } from './services/auth-guard.service';\r\nimport { UserStoreService } from './services/user-store.service';\r\nimport { MatchStoreService } from './services/match-store.service';\r\nimport { ActivitiesOffersCitiesStoreService } from './services/activities-offers-cities-store.service';\r\nimport { SearchService } from './services/search.service';\r\n\r\n// imports for firebase\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { environment } from '../environments/environment';\r\nimport { AngularFirestoreModule, FirestoreSettingsToken } from '@angular/fire/firestore';\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n  return new TranslateHttpLoader(http);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RegisterPageComponent,\r\n    HomeComponent,\r\n    LoginPageComponent,\r\n    MatchListComponent,\r\n    ChatroomListComponent,\r\n    ChatroomItemComponent,\r\n    ProfilePageComponent,\r\n    SearchPageComponent,\r\n    ResultPageComponent,\r\n    ImpressumPageComponent,\r\n    AboutPageComponent,\r\n    ErrorPageComponent,\r\n    FooterComponent,\r\n    NavbarComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient]\r\n      }\r\n    }),\r\n    AngularFireModule.initializeApp(environment.firebase),\r\n    AngularFireAuthModule,\r\n    AngularFirestoreModule,\r\n    FontAwesomeModule,\r\n    NgxPaginationModule,\r\n    NgMultiSelectDropDownModule.forRoot(),\r\n    FormsModule,\r\n    BsDatepickerModule.forRoot()\r\n  ],\r\n  providers: [\r\n    UserStoreService,\r\n    AuthService,\r\n    AuthGuard,\r\n    MatchStoreService,\r\n    ActivitiesOffersCitiesStoreService,\r\n    // In the newest firebase version the timestampsInSnapshots setting defaults to true therefore it no longer needs to be set.\r\n    { provide: FirestoreSettingsToken, useValue: {} },\r\n    SearchService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-2 col-md-3\\\"></div>\\r\\n  <div class=\\\"col-8 col-md-6\\\">\\r\\n      <div class=\\\"card m-4 text-center\\\">\\r\\n\\r\\n      <h5 class=\\\"card-title\\\">Über uns:</h5>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <blockquote class=\\\"blockquote mb-0\\\">\\r\\n          <p>\\\"Eine Investition in Wissen bringt immer noch die besten Zinsen.\\\"</p>\\r\\n          <footer class=\\\"blockquote-footer\\\">Benjamin Fanklin</footer>\\r\\n        </blockquote>\\r\\n      </div>\\r\\n\\r\\n      Wir möchten dir diese Investition so einfach wie möglich machen und bieten dir deshalb eine Plattform,\\r\\n      mit dieser du jeder Zeit dein eigenes Wissen mit anderen teilen und auch neues erlangen kannst.\\r\\n\\r\\n      Das Tandem Team besteht aus Studenten des 6. Semester an der HWR Berlin.\\r\\n<br/>\\r\\n<br/>\\r\\n      <img src=\\\"../../../assets/images/Team-Foto.jpg\\\" class=\\\"card-img-top\\\" alt=\\\"...\\\" >\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <p class=\\\"card-text\\\">Hier das Team von links nach rechts Arne, Eric, Pascal, Joe und Louis</p>\\r\\n      </div>\\r\\n\\r\\n      </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-2 col-md-3\\\"></div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWJvdXQtcGFnZS9hYm91dC1wYWdlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about-page',\r\n  templateUrl: './about-page.component.html',\r\n  styleUrls: ['./about-page.component.scss']\r\n})\r\nexport class AboutPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<p>\\r\\n  chatroom-item works!\\r\\n</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2hhdHJvb20taXRlbS9jaGF0cm9vbS1pdGVtLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-chatroom-item',\r\n  templateUrl: './chatroom-item.component.html',\r\n  styleUrls: ['./chatroom-item.component.scss']\r\n})\r\nexport class ChatroomItemComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<p>\\r\\n  chatroom-list works!\\r\\n</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2hhdHJvb20tbGlzdC9jaGF0cm9vbS1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-chatroom-list',\r\n  templateUrl: './chatroom-list.component.html',\r\n  styleUrls: ['./chatroom-list.component.scss']\r\n})\r\nexport class ChatroomListComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-2 col-md-3\\\"></div>\\r\\n  <div class=\\\"col-8 col-md-6 \\\" layout-align=\\\"center\\\" >\\r\\n    <br/>\\r\\n    <h2>\\r\\n      404 - Page not found\\r\\n    </h2>\\r\\n    <br/>\\r\\n    <img src=\\\"../../../assets/images/404-error.jpg\\\" class=\\\"img-fluid \\\" alt=\\\"image\\\">\\r\\n  </div>\\r\\n  <div class=\\\"col-2 col-md-3\\\"></div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZXJyb3ItcGFnZS9lcnJvci1wYWdlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-error-page',\r\n  templateUrl: './error-page.component.html',\r\n  styleUrls: ['./error-page.component.scss']\r\n})\r\nexport class ErrorPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<footer class=\\\"footer text-center small border-top\\\">\\r\\n  <ul class=\\\"nav flex-column\\\">\\r\\n    <li class=\\\"\\\">\\r\\n      <a class=\\\"text-dark\\\" [routerLink]=\\\"['/impressum']\\\">{{'footer.legalDisclosure' | translate }}</a>\\r\\n    </li>\\r\\n    <li class=\\\"\\\">\\r\\n      <a class=\\\"text-dark\\\" [routerLink]=\\\"['/about']\\\">{{'footer.aboutUs' | translate }}</a>\\r\\n    </li>\\r\\n  </ul>\\r\\n  <p> © 2018 | tandemPartner</p>\\r\\n</footer>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h1 class=\\\"text-center font-weight-light my-3\\\">{{ 'home.openMatchrequests' | translate }}</h1>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-1\\\"></div>\\r\\n  <div class=\\\"col-10\\\">\\r\\n    <div *ngIf=\\\"matchRequests, else elseBlock\\\">\\r\\n      <!-- show all matchRequests which are saved in the Array of 'matchRequests'-->\\r\\n      <div *ngFor=\\\"let match of matchRequests | paginate: { itemsPerPage: 5, currentPage: pageNumber }\\\">\\r\\n        <div class=\\\"card shadow my-3\\\">\\r\\n            <h5 class=\\\"card-header\\\">\\r\\n                {{ 'home.requestTitle' | translate}} {{ match.matchedOffer }}\\r\\n            </h5>\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <div class=\\\"card-text\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col-8 col-md-10\\\">\\r\\n                        <a class=\\\"pointer-cursor\\\" (click)=\\\"openModal(match.initiatorID)\\\">\\r\\n                          <p class=\\\"my-0\\\"><small>{{ match.initiatorID }}</small></p>\\r\\n                          <p class=\\\"my-0\\\"><small>Age:</small></p>\\r\\n                          <p class=\\\"my-0\\\"><small>Aktivitäten:</small></p>\\r\\n                        </a>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-4 col-md-2 d-flex justify-content-end my-auto\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-success mr-2 homebutton\\\" (click)=\\\"acceptMatch()\\\">\\r\\n                          <fa-icon [icon]=\\\"faCheck\\\"></fa-icon>\\r\\n                        </button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-outline-danger homebutton\\\" (click)=\\\"declineMatch()\\\">\\r\\n                          <fa-icon [icon]=\\\"faTimes\\\"></fa-icon>\\r\\n                        </button>\\r\\n                      </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n            </div>\\r\\n          </div>\\r\\n      </div><!--ngFor-->\\r\\n\\r\\n      <!--controls for pagination, which are only visible at the length of matchRequest-array bigger than 5-->\\r\\n      <pagination-controls autoHide=\\\"true\\\"\\r\\n        class=\\\"pagination justify-content-center\\\"\\r\\n        (pageChange)=\\\"pageNumber = $event\\\"\\r\\n        previousLabel=\\\"{{'home.previous' | translate }}\\\"\\r\\n        nextLabel=\\\"{{'home.next' | translate }}\\\"></pagination-controls>\\r\\n    </div><!--ngIf-->\\r\\n\\r\\n    <!-- if there are no matchrequests-->\\r\\n    <ng-template #elseBlock>\\r\\n      <p class=\\\"text-center\\\">{{ 'home.noRequests' | translate}}</p>\\r\\n    </ng-template>\\r\\n  </div>\\r\\n  <div class=\\\"col-1\\\"></div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- Modal -->\\r\\n<div class=\\\"modal-backdrop fade in\\\" [ngStyle]=\\\"{'display':display}\\\"></div>\\r\\n<div *ngIf=\\\"modalIsOpen\\\" class=\\\"modal\\\" [ngStyle]=\\\"{'display': display}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h5 class=\\\"modal-title\\\">{{ 'home.requestTitle' | translate}} Kochen</h5>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeModal()\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n           <!-- {{ user.firstname }}-->\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"closeModal()\\\">Close</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Save changes</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\"","import { Match } from './../../models/match';\r\nimport { MatchStoreService } from './../../services/match-store.service';\r\nimport { AuthService } from './../../services/auth.service';\r\nimport { UserStoreService } from 'src/app/services/user-store.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { User } from 'src/app/models/user';\r\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  users: User[];\r\n  user: User;\r\n  requestUser: User;\r\n  matchRequests: any[];\r\n  initiatorFirstname: string;\r\n\r\n  openedModal: any;\r\n\r\n  // for fontawesome icons\r\n  faCheck = faCheck;\r\n  faTimes = faTimes;\r\n\r\n  // for pagination\r\n  pageNumber = 1;\r\n\r\n  // for modal\r\n  display = 'none';\r\n  modalIsOpen = false;\r\n\r\n  constructor(\r\n    private userStoreService: UserStoreService,\r\n    private authService: AuthService,\r\n    private matchStoreService: MatchStoreService\r\n    ) { }\r\n\r\n  // when home-component was called, the written methods in ngOnInit gonna start\r\n  ngOnInit() {\r\n    this.showMatchRequestsForCurrentUser(this.authService.getUser().uid);\r\n  }\r\n\r\n\r\n  showMatchRequestsForCurrentUser(id: string) {\r\n    this.matchStoreService.getAllUnacceptedMatchesForUser(id).then(matches => this.matchRequests = matches);\r\n    // this.matchRequests.forEach((i: Match) => {\r\n    //   console.log('PREinitiatorID: ' + i.initiatorID);\r\n    //   this.getInitiatorFirstname(i.initiatorID);\r\n    //   i.initiatorID = this.initiatorFirstname;\r\n    //   console.log('initiatorID: ' + i.initiatorID);\r\n    // });\r\n  }\r\n\r\n  getInitiatorFirstname(id: string) {\r\n    this.userStoreService.getUserById(id).subscribe((recievedUser: User) => {\r\n      this.initiatorFirstname = recievedUser.firstname;\r\n      console.log('initiatorFirstname: ' + this.initiatorFirstname);\r\n    });\r\n  }\r\n\r\n  acceptMatch() {\r\n    // TODO: add functionality - update the match\r\n    console.log('accepted');\r\n  //  this.showMatchRequestsForCurrentUser(this.authService.currentUser.uid);\r\n  }\r\n\r\n  declineMatch() {\r\n    // TODO: add delete functionality - delete the match\r\n    console.log('deleted');\r\n   // this.showMatchRequestsForCurrentUser(this.authService.currentUser.uid);\r\n  }\r\n\r\n  openModal(id: string) {\r\n    console.log('id: ' + id);\r\n    this.modalIsOpen = true;\r\n    this.display = 'block';\r\n    this.matchRequests.forEach( match => {\r\n      if (match._id === id) {\r\n        this.openedModal = match;\r\n      }\r\n    });\r\n  }\r\n\r\n  closeModal() {\r\n    this.display = 'none';\r\n    this.modalIsOpen = false;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-2 col-md-3\\\"></div>\\r\\n  <div class=\\\"col-8 col-md-6\\\">\\r\\n      <div class=\\\"card m-4 text-center\\\">\\r\\n\\r\\n      <h5 class=\\\"card-title\\\">Entwicklerteam:</h5>\\r\\n\\r\\n        <br />Constantin Beer\\r\\n        <br />Eric Odschuk\\r\\n        <br />Luis Ramer\\r\\n        <br />Arne Schacher\\r\\n        <br />Pascal Vonholdt<br />\\r\\n        <br />HWR Berlin - 6. Semester Wirtschaftsinformatik\\\"\\r\\n        <br />Alt-Friedrichsfelde 60\\r\\n        <br />10315 Berlin\\r\\n      Kontakt:\\r\\n      <br />E-Mail: tandem.hwr@gmail.com\\r\\n      </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-2 col-md-3\\\"></div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaW1wcmVzc3VtLXBhZ2UvaW1wcmVzc3VtLXBhZ2UuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-impressum-page',\r\n  templateUrl: './impressum-page.component.html',\r\n  styleUrls: ['./impressum-page.component.scss']\r\n})\r\nexport class ImpressumPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-1\\\"></div>\\r\\n  <div class=\\\"col-10 d-flex justify-content-center\\\">\\r\\n    <div class=\\\"mx-auto my-5 card shadow\\\">\\r\\n      <img class=\\\"card-img-top mb-4 mt-3 rounded-circle mx-auto shadow\\\" src=\\\"../../../assets/images/tandemLogo.png\\\">\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"card-title text-center\\\">tandemPartner<i class=\\\"text-muted\\\">{{'login.tandemSlogan' | translate }}</i></div>\\r\\n        <form class=\\\"m-3\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\r\\n          <div class=\\\"input-group mb-3\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\" id=\\\"mailIcon\\\">\\r\\n                <fa-icon [icon]=\\\"faAt\\\"></fa-icon>\\r\\n              </span>\\r\\n            </div>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"loginFormMail\\\" placeholder=\\\"{{'login.mailPlaceholder' | translate }}\\\" formControlName=\\\"loginFormMail\\\" aria-describedby=\\\"mailIcon\\\" autofocus>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"input-group mb-3\\\">\\r\\n            <div class=\\\"input-group-prepend\\\">\\r\\n              <span class=\\\"input-group-text\\\" id=\\\"passwordIcon\\\">\\r\\n                <fa-icon [icon]=\\\"faLock\\\"></fa-icon>\\r\\n              </span>\\r\\n            </div>\\r\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"loginFormPassword\\\" placeholder=\\\"{{'login.passwordPlaceholder' | translate }}\\\" formControlName=\\\"loginFormPassword\\\" aria-describedby=\\\"passwordIcon\\\" autofocus>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"btn-toolbar d-flex justify-content-center\\\" role=\\\"toolbar\\\">\\r\\n            <div class=\\\"btn-group mr-2\\\">\\r\\n              <button type=\\\"button\\\" type=\\\"submit\\\" class=\\\"btn btn-warning d-flex mx-auto  mt-2\\\" >{{'login.loginButton' | translate }}</button>\\r\\n            </div>\\r\\n            <div class=\\\"btn-group\\\">\\r\\n              <button type=\\\"button\\\" [routerLink]=\\\"['/register']\\\" class=\\\"btn btn-outline-warning d-flex mx-auto mt-2\\\" >{{'login.registerButton' | translate }}</button>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"col-1\\\"></div>\\r\\n</div>\\r\\n\"","module.exports = \"img {\\n  height: auto;\\n  width: auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sb2dpbi1wYWdlL0Q6XFxVc2Vyc1xcQktVXFxMdWlzUmFwaGFlbFJhbWVyXFxEZXNrdG9wXFxVbmktWmV1Z1xcNi4gU2VtZXN0ZXJcXFdlYlByb2dcXHRhbmRlbVBhcnRuZXIzXFxhbmd1bGFyL3NyY1xcYXBwXFxjb21wb25lbnRzXFxsb2dpbi1wYWdlXFxsb2dpbi1wYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtFQUNaLFdBQVcsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4tcGFnZS9sb2dpbi1wYWdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW1nIHtcclxuICBoZWlnaHQ6IGF1dG87XHJcbiAgd2lkdGg6IGF1dG87XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { User } from 'src/app/models/user';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { faAt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faLock } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.scss']\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n\r\n  // for icons\r\n  faAt = faAt;\r\n  faLock = faLock;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private router: Router,\r\n              private authService: AuthService) {\r\n                this.loginForm = this.createLoginForm();\r\n               }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  createLoginForm() {\r\n    return this.formBuilder.group({\r\n      loginFormMail: ['', Validators.required],\r\n      loginFormPassword: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  login() {\r\n    const mail = this.loginForm.value.loginFormMail;\r\n    const password = this.loginForm.value.loginFormPassword;\r\n\r\n    this.authService.signInWithMailAndPassword(mail, password);\r\n  }\r\n\r\n  get loginFormMail() {\r\n    return this.loginForm.get('loginFormMail');\r\n  }\r\n\r\n  get loginFormPassword() {\r\n    return this.loginForm.get('loginFormPassword');\r\n  }\r\n}\r\n","module.exports = \"<h1 class=\\\"text-center font-weight-light mb-3 mt-4\\\">{{ 'matchlist.matchHeaderTitle' | translate }}</h1>\\r\\n<div class=\\\"row mb-3\\\">\\r\\n  <div class=\\\"col-1\\\"></div>\\r\\n  <div class=\\\"col-10 px-0\\\">\\r\\n    <div ><!--*ngIf=\\\"allMatches, else ElseBlock\\\"-->\\r\\n      <div class=\\\"accordion shadow\\\" id=\\\"matchAccordion\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-header pointer-cursor bg-white border-warning\\\" id=\\\"headingOne\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseOne\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseOne\\\">\\r\\n            <h3 class=\\\"mb-0 font-weight-light\\\">\\r\\n              {{ 'matchlist.accpetedMatches' | translate }}\\r\\n            </h3>\\r\\n          </div>\\r\\n          <div id=\\\"collapseOne\\\" class=\\\"collapse show\\\" aria-labelledby=\\\"headingOne\\\" data-parent=\\\"#matchAccordion\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <!-- show all accepted matches which are saved in acceptedMatches[]-->\\r\\n              <div *ngFor=\\\"let match of acceptedMatches | paginate: { itemsPerPage: 5, currentPage: pageNumberAcceptedMatches, id: 'firstPagination' }\\\">\\r\\n                <div class=\\\"card shadow my-3\\\">\\r\\n                  <h5 class=\\\"card-header bg-white border-warning font-italic\\\">\\r\\n                    {{ 'matchlist.matchedOffer' | translate }}: {{ match.matchedOffer }}\\r\\n                  </h5>\\r\\n                  <div class=\\\"card-body accepted-match-cards\\\">\\r\\n                    <div class=\\\"card-text\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-8 col-md-10\\\">\\r\\n                          <a class=\\\"pointer-cursor\\\" (click)=\\\"openModal(match.initiatorID)\\\">\\r\\n                            <p class=\\\"my-0\\\"><small>{{ match.initiatorID }}</small></p>\\r\\n                            <p class=\\\"my-0\\\"><small>Age:</small></p>\\r\\n                            <p class=\\\"my-0\\\"><small>Aktivitäten:</small></p>\\r\\n                          </a>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-4 col-md-2 d-flex justify-content-end my-auto\\\">\\r\\n                          <button type=\\\"button\\\" class=\\\"btn btn-outline-warning homebutton\\\"\\r\\n                                  (click)=\\\"contactUser(match.initiatorID, match.partnerID)\\\"\\r\\n                                  data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"{{ 'matchlist.contactTooltip' | translate }}\\\">\\r\\n                            <fa-icon [icon]=\\\"faEnvelope\\\"></fa-icon>\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div><!--ngFor-->\\r\\n\\r\\n              <!--controls for pagination, which are only visible at the length of matchRequest-array bigger than 5-->\\r\\n              <pagination-controls autoHide=\\\"true\\\"\\r\\n                class=\\\"pagination justify-content-center\\\"\\r\\n                (pageChange)=\\\"pageNumberAcceptedMatches = $event\\\"\\r\\n                previousLabel=\\\"{{'home.previous' | translate }}\\\"\\r\\n                nextLabel=\\\"{{'home.next' | translate }}\\\" id=\\\"firstPagination\\\">\\r\\n              </pagination-controls>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div><!--first row/card-->\\r\\n\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-header pointer-cursor bg-white border-info\\\" id=\\\"headingTwo\\\"  data-toggle=\\\"collapse\\\" data-target=\\\"#collapseTwo\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseTwo\\\">\\r\\n            <h3 class=\\\"mb-0 font-weight-light\\\">\\r\\n                {{ 'matchlist.unacceptedMatches' | translate }}\\r\\n            </h3>\\r\\n          </div>\\r\\n          <div id=\\\"collapseTwo\\\" class=\\\"collapse\\\" aria-labelledby=\\\"headingTwo\\\" data-parent=\\\"#matchAccordion\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <!---unaccepted matchrequests-->\\r\\n              <!-- show all unaccepted matchrequests which are saved in matchrequests[]-->\\r\\n              <div *ngFor=\\\"let matchrequest of matchrequests | paginate: { itemsPerPage: 5, currentPage: pageNumberRequests, id: 'secondPagination' }\\\">\\r\\n                <div class=\\\"card shadow my-3\\\">\\r\\n                  <h5 class=\\\"card-header bg-white border-info font-italic\\\">\\r\\n                    {{ 'matchlist.matchrequestFor' | translate }}: {{ matchrequest.matchedOffer }}\\r\\n                  </h5>\\r\\n                  <div class=\\\"card-body unaccepted-match-cards\\\">\\r\\n                    <div class=\\\"card-text\\\">\\r\\n                      <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-8 col-md-10\\\">\\r\\n                          <a class=\\\"pointer-cursor\\\" (click)=\\\"openModal(matchrequest.initiatorID)\\\">\\r\\n                            <p class=\\\"my-0\\\"><small>{{ matchrequest.initiatorID }}</small></p>\\r\\n                            <p class=\\\"my-0\\\"><small>Age:</small></p>\\r\\n                            <p class=\\\"my-0\\\"><small>Aktivitäten:</small></p>\\r\\n                          </a>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-4 col-md-2 d-flex justify-content-end my-auto\\\">\\r\\n                          <button type=\\\"button\\\" class=\\\"btn btn-outline-danger homebutton\\\" (click)=\\\"deleteMatchrequest()\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"{{ 'matchlist.deleteTooltip' | translate }}\\\">\\r\\n                            <fa-icon [icon]=\\\"faTrash\\\"></fa-icon>\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div><!--ngFor-->\\r\\n\\r\\n              <!--controls for pagination, which are only visible at the length of matchRequest-array bigger than 5-->\\r\\n              <pagination-controls autoHide=\\\"true\\\"\\r\\n                class=\\\"pagination justify-content-center\\\"\\r\\n                (pageChange)=\\\"pageNumberRequests = $event\\\"\\r\\n                previousLabel=\\\"{{'home.previous' | translate }}\\\"\\r\\n                nextLabel=\\\"{{'home.next' | translate }}\\\" id=\\\"secondPagination\\\">\\r\\n              </pagination-controls>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div><!--second row/card-->\\r\\n\\r\\n      </div><!--accordion-->\\r\\n    </div><!--ngIf allMatches=!null-->\\r\\n\\r\\n    <!-- if there are no matchrequests-->\\r\\n    <ng-template #elseBlock>\\r\\n      <p class=\\\"text-center\\\">{{ 'home.noRequests' | translate}}</p>\\r\\n    </ng-template>\\r\\n  </div><!--col-10-->\\r\\n  <div class=\\\"col-1\\\"></div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- Modal -->\\r\\n<div class=\\\"modal-backdrop fade in\\\" [ngStyle]=\\\"{'display':display}\\\"></div>\\r\\n<div *ngIf=\\\"modalIsOpen\\\" class=\\\"modal\\\" [ngStyle]=\\\"{'display': display}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\r\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <h5 class=\\\"modal-title\\\">{{ 'home.requestTitle' | translate}} Kochen</h5>\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeModal()\\\" aria-label=\\\"Close\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"modal-body\\\">\\r\\n           <!-- {{ user.firstname }}-->\\r\\n        </div>\\r\\n        <div class=\\\"modal-footer\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"closeModal()\\\">Close</button>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary\\\">Save changes</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbWF0Y2gtbGlzdC9tYXRjaC1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Match } from './../../models/match';\r\nimport { MatchStoreService } from './../../services/match-store.service';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { faTrash, faEnvelope } from '@fortawesome/free-solid-svg-icons';\r\nimport { Router } from '@angular/router';\r\n// import { ChatService } from './../../services/chat.service';\r\n\r\n@Component({\r\n  selector: 'app-match-list',\r\n  templateUrl: './match-list.component.html',\r\n  styleUrls: ['./match-list.component.scss']\r\n})\r\nexport class MatchListComponent implements OnInit {\r\n\r\n  allMatches: Match[];\r\n  acceptedMatches: Match[];\r\n  matchrequests: Match[];\r\n\r\n  // for fontawesome icons\r\n  faTrash = faTrash;\r\n  faEnvelope = faEnvelope;\r\n\r\n  // for pagination\r\n  pageNumberAcceptedMatches = 1;\r\n  pageNumberRequests = 1;\r\n\r\n  // for modal\r\n  display = 'none';\r\n  modalIsOpen = false;\r\n\r\n  openedModal: any;\r\n\r\n  constructor(private authService: AuthService,\r\n              private matchStoreService: MatchStoreService,\r\n              private router: Router,\r\n            /* private chatservice: ChatService */ ) { }\r\n\r\n  ngOnInit() {\r\n   // this.matchStoreService.getAllMatchesForSpecificUser(this.authService.currentUser.uid).then(matches => {\r\n   //   this.allMatches = matches;\r\n   // });\r\n  this.acceptedMatches = [\r\n       new Match(\r\n       'kycsoFi1RPaNy3hJxwmFhbD032I3',\r\n       'xMFp4LlYHPXZ3ntVWvRsq0cwzl02',\r\n       'kochen',\r\n       true),\r\n       new Match(\r\n        'kycsoFi1RPaNy3hJxwmFhbD032I3',\r\n        'xMFp4LlYHPXZ3ntVWvRsq0cwzl02',\r\n        'kochen',\r\n        true),\r\n       new Match(\r\n        'kycsoFi1RPaNy3hJxwmFhbD032I3',\r\n        'xMFp4LlYHPXZ3ntVWvRsq0cwzl02',\r\n        'kochen',\r\n        true)];\r\n  this.matchrequests = [\r\n       new Match(\r\n       'a5WsJoGC2kbu0zto57mP',\r\n       'xMFp4LlYHPXZ3ntVWvRsq0cwzl02',\r\n       'schwimmen',\r\n       false)\r\n     ];\r\n // this.pushMatchToAcceptedMatches();\r\n // this.pushMatchToMatchrequests();\r\n  }\r\n\r\n  pushMatchToAcceptedMatches() {\r\n    for (let i = 0; i > this.allMatches.length; i++) {\r\n      let j = 0;\r\n      if (this.allMatches[i].accepted === true) {\r\n        this.acceptedMatches[j] = this.allMatches[i];\r\n        j++;\r\n      }\r\n    }\r\n  }\r\n\r\n  pushMatchToMatchrequests() {\r\n    for (let i = 0; i > this.allMatches.length; i++) {\r\n      let j = 0;\r\n      if (this.allMatches[i].accepted === false) {\r\n        this.matchrequests[i] = this.allMatches[i];\r\n        j++;\r\n      }\r\n    }\r\n  }\r\n\r\n  contactUser(initiatorID: string, partnerID: string) {\r\n    // TODO: cretae new chatroom and redirect to the chatroom\r\n    // tslint:disable-next-line:max-line-length\r\n    // this.chatservice.create(initiatorID, partnerID).subscribe( this.router.navigate(['/'])).catch( this.router.navigate(['/']);) currently only pseudocode\r\n  }\r\n\r\n  deleteMatchrequest(matchId: string) {\r\n    // TODO: delete the specific matchrequest\r\n    this.matchStoreService.deleteMatch(matchId);\r\n  }\r\n\r\n  openModal(id: string) {\r\n    console.log('id: ' + id);\r\n    this.modalIsOpen = true;\r\n    this.display = 'block';\r\n   // this.allMatches.forEach( match => {\r\n   //   if (match.id === id) {\r\n   //     this.openedModal = match;\r\n   //   }\r\n   // });\r\n  }\r\n\r\n  closeModal() {\r\n    this.display = 'none';\r\n    this.modalIsOpen = false;\r\n  }\r\n\r\n}\r\n","module.exports = \"<header>\\r\\n  <!--when the bug of new logging in is solved, we can use the following line\\r\\n  <nav *ngIf=\\\"router.url !== '/login'\\\" class=\\\"navbar navbar-light navbar-expand-lg shadow\\\">-->\\r\\n\\r\\n  <nav class=\\\"navbar fixed-top navbar-light navbar-expand-lg bg-white shadow\\\">\\r\\n    <!--toggle only visible for screens smaller than lg-->\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarLinks\\\" aria-controls=\\\"navbarLinks\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n          <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n      <a class=\\\"navbar-brand\\\">\\r\\n        <img src=\\\"../../../assets/images/navbarLogo.png\\\" width=\\\"40\\\" height=\\\"40\\\" class=\\\"d-inline-block align-top\\\" alt=\\\"Tandem Logo\\\">\\r\\n      </a>\\r\\n\\r\\n      <!--navbar links-->\\r\\n      <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarLinks\\\">\\r\\n        <!--left aligned links-->\\r\\n        <ul *ngIf=\\\"isLoggedIn()\\\" class=\\\"navbar-nav mr-auto\\\">\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/home']\\\" [routerLinkActive]=\\\"['active']\\\">{{ 'navbar.homeLink' | translate }}</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/profile']\\\" [routerLinkActive]=\\\"['active']\\\">{{ 'navbar.profileLink' | translate }}</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/search']\\\" [routerLinkActive]=\\\"['active']\\\">{{ 'navbar.searchLink' | translate }}</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/matches']\\\" [routerLinkActive]=\\\"['active']\\\">{{ 'navbar.matchesLink' | translate }}</a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/chats']\\\" [routerLinkActive]=\\\"['active']\\\">{{ 'navbar.chatLink' | translate }}</a>\\r\\n          </li>\\r\\n        </ul>\\r\\n\\r\\n        <!-- right aligned links-->\\r\\n        <ul class=\\\"navbar-nav ml-auto\\\">\\r\\n          <!--dropdown menu-->\\r\\n          <li class=\\\"nav-item dropdown\\\">\\r\\n            <!--showing english or german language, via checking whether english language was clicked or not -->\\r\\n            <a *ngIf=\\\"showEnglish; else elseBlock\\\" class=\\\"nav-link dropdown-toggle pointer-cursor border-right\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n              En\\r\\n            </a>\\r\\n            <!--German language-->\\r\\n            <ng-template #elseBlock>\\r\\n                <a class=\\\"dropdown-toggle nav-link pointer-cursor border-right\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                    De\\r\\n                </a>\\r\\n            </ng-template>\\r\\n            <!--dropdown links-->\\r\\n            <div class=\\\"dropdown-menu\\\">\\r\\n              <a class=\\\"dropdown-item pointer-cursor\\\" (click)=\\\"switchLanguage('de')\\\">De</a>\\r\\n              <div class=\\\"dropdown-divider\\\"></div>\\r\\n              <a class=\\\"dropdown-item pointer-cursor\\\" (click)=\\\"switchLanguage('en')\\\" >En</a>\\r\\n            </div>\\r\\n          </li>\\r\\n\\r\\n          <!--username-->\\r\\n          <span *ngIf=\\\"isLoggedIn()\\\" class=\\\"navbar-text font-italic mx-lg-2\\\">\\r\\n            Username\\r\\n          </span>\\r\\n\\r\\n          <!--Logout-->\\r\\n          <li *ngIf=\\\"isLoggedIn()\\\" class=\\\"nav-item border-left\\\">\\r\\n            <a class=\\\"nav-link pointer-cursor\\\" (click)=\\\"logout()\\\">{{ 'navbar.logout' | translate }}</a>\\r\\n          </li>\\r\\n          <!--Login-->\\r\\n          <li *ngIf=\\\"!isLoggedIn() \\\" class=\\\"nav-item border-left\\\">\\r\\n            <a class=\\\"nav-link\\\" [routerLink]=\\\"['/login']\\\">{{ 'navbar.login' | translate }}</a>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n  </nav>\\r\\n</header>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuc2NzcyJ9 */\"","import { User } from './../../models/user';\r\nimport { UserStoreService } from './../../services/user-store.service';\r\nimport { AuthService } from './../../services/auth.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  // default value for not showing the page in english\r\n  showEnglish = false;\r\n\r\n  constructor(private translateService: TranslateService,\r\n              private authService: AuthService,\r\n              private router: Router,\r\n              private userStoreService: UserStoreService) {\r\n    translateService.setDefaultLang('de');\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  isLoggedIn() {\r\n    return this.authService.isloggedIn();\r\n  }\r\n\r\n  switchLanguage(language: string) {\r\n    this.translateService.use(language);\r\n    if (language === 'en') {\r\n      this.showEnglish = true;\r\n    } else {\r\n      this.showEnglish = false;\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-1\\\"></div>\\r\\n  <div class=\\\"col-10\\\">\\r\\n    <div class=\\\"card mx-auto my-5 shadow\\\">\\r\\n        <div class=\\\"card-header bg-warning text-center h5\\\">\\r\\n            {{'profile.headerTitle' | translate }}\\r\\n          </div>\\r\\n      <div class=\\\"card-body\\\">\\r\\n          <form class=\\\"\\\" [formGroup]=\\\"editForm\\\" (ngSubmit)=\\\"editFormSave()\\\" novalidate>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"form-group col-md-6\\\">\\r\\n                  <label for=\\\"editFormFirstname\\\">{{'register.firstname' | translate }}*</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control shadow-sm\\\" id=\\\"editFormFirstname\\\" formControlName=\\\"editFormFirstname\\\" placeholder=\\\"{{'register.firstname' | translate }}\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-md-6\\\">\\r\\n                  <label for=\\\"editFormLastname\\\">{{'register.lastname' | translate }}*</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control shadow-sm\\\" id=\\\"editFormLastname\\\" formControlName=\\\"editFormLastname\\\" placeholder=\\\"{{'register.lastname' | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label for=\\\"editFormSex\\\">{{'register.sex' | translate }}*</label>\\r\\n                <div class=\\\"form-control shadow-sm bg-light\\\"id=\\\"editFormSex\\\" disabled>{{sex}}</div>\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6 form-group\\\">\\r\\n                  <label>{{'register.mail' | translate }}*</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control shadow-sm\\\" id=\\\"editFormMail\\\" formControlName=\\\"editFormMail\\\" placeholder=\\\"name@example.com\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label for=\\\"editFormCity\\\">{{'register.city' | translate }}*</label>\\r\\n                <ng-multiselect-dropdown  class=\\\"form-control shadow-sm\\\" id=\\\"editFormCity\\\" #editFormCity=\\\"ngModel\\\"\\r\\n                  [placeholder]=\\\"'register.pleaseChoose' | translate\\\"\\r\\n                  [data]=\\\"cities\\\"\\r\\n                  [(ngModel)]=\\\"selectedCity\\\" [ngModelOptions]=\\\"{ standalone : true }\\\"\\r\\n                  [settings]=\\\"selectCitySettings\\\" required>\\r\\n                </ng-multiselect-dropdown>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6 form-group\\\">\\r\\n                  <label for=\\\"editFormBirthday\\\">{{'register.birthday' | translate }}*</label>\\r\\n                  <input type=\\\"text\\\"\\r\\n                  [placeholder]=\\\"'register.birthday' | translate\\\"\\r\\n                  class=\\\"form-control shadow-sm bg-light\\\"\\r\\n                  bsDatepicker id=\\\"editFormBirthday\\\" formControlName=\\\"editFormBirthday\\\"\\r\\n                  [bsConfig]=\\\"{ dateInputFormat: 'MM.DD.YYYY', colorTheme: 'theme-orange' }\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label for=\\\"editFormOffers\\\">{{'register.offers' | translate }}:*</label>\\r\\n                <ng-multiselect-dropdown  class=\\\"form-control shadow-sm\\\" id=\\\"editFormOffers\\\" #editFormOffers=\\\"ngModel\\\"\\r\\n                   [placeholder]=\\\"'register.pleaseChoose' | translate\\\"\\r\\n                   [data]=\\\"offers\\\"\\r\\n                   [(ngModel)]=\\\"selectedOffers\\\" [ngModelOptions]=\\\"{ standalone : true }\\\"\\r\\n                   [settings]=\\\"selectOffersActivitiesSettings\\\" required>\\r\\n                </ng-multiselect-dropdown>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label for=\\\"editFormActivities\\\">{{'register.activities' | translate }}:*</label>\\r\\n                <ng-multiselect-dropdown  class=\\\"form-control shadow-sm\\\" id=\\\"editFormActivities\\\" #editFormActivities=\\\"ngModel\\\"\\r\\n                   [placeholder]=\\\"'register.pleaseChoose' | translate\\\"\\r\\n                   [data]=\\\"activities\\\"\\r\\n                   [(ngModel)]=\\\"selectedActivities\\\" [ngModelOptions]=\\\"{ standalone : true }\\\"\\r\\n                   [settings]=\\\"selectOffersActivitiesSettings\\\" required>\\r\\n                </ng-multiselect-dropdown>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-6 form-group\\\">\\r\\n                  <label>{{'profile.newPassword' | translate }}*</label>\\r\\n                  <input type=\\\"password\\\" class=\\\"form-control shadow-sm\\\" id=\\\"editFormPassword\\\" formControlName=\\\"editFormPassword\\\" placeholder=\\\"{{'register.password' | translate }}\\\">\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6 form-group\\\">\\r\\n                  <label>{{'profile.newPasswordConfirm' | translate }}*</label>\\r\\n                  <input type=\\\"password\\\" class=\\\"form-control shadow-sm\\\" id=\\\"editFormPasswordConfirm\\\" formControlName=\\\"editFormPasswordConfirm\\\" placeholder=\\\"{{'register.passwordConfirm' | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <!--Validator messages-->\\r\\n            <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"editFormFirstname.errors && (editFormFirstname.touched || editFormFirstname.dirty)\\\">\\r\\n                <div *ngIf=\\\"editFormFirstname.errors.required\\\">{{'register.firstname' | translate }} {{'validators.required' | translate }}</div>\\r\\n                <div *ngIf=\\\"editFormFirstname.errors.pattern\\\">{{'validators.letterSpaces' | translate }}</div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"editFormLastname.errors && (editFormLastname.touched || editFormLastname.dirty)\\\">\\r\\n                <div *ngIf=\\\"editFormLastname.errors.required\\\">{{'register.lastname' | translate }} {{'validators.required' | translate }}</div>\\r\\n                <div *ngIf=\\\"editFormLastname.errors.pattern\\\">{{'validators.letterSpaces' | translate }}</div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"editFormMail.errors && (editFormMail.touched || editFormMail.dirty)\\\">\\r\\n                <div *ngIf=\\\"editFormMail.errors.required\\\">{{'register.mail' | translate }} {{'validators.required' | translate }}</div>\\r\\n                <div *ngIf=\\\"editFormMail.errors.email\\\">{{'validators.email' | translate }}</div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"editFormPassword.errors && (editFormPassword.touched || editFormPassword.dirty)\\\">\\r\\n                <div *ngIf=\\\"editFormPassword.errors.minlength\\\">{{'validators.passwordPattern' | translate }}</div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"editFormPasswordConfirm.errors && (editFormPasswordConfirm.touched || editFormPasswordConfirm.dirty)\\\">\\r\\n                <div *ngIf=\\\"editFormPasswordConfirm.errors.minlength\\\">{{'validators.passwordPattern' | translate }}</div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"editFormPassword.value != editFormPasswordConfirm.value && editFormPasswordConfirm.value != null\\\">\\r\\n                  {{'validators.passwordMismatch' | translate }}\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"editFormOffers.errors && (editFormOffers.touched || editFormOffers.dirty)\\\">\\r\\n                  <div *ngIf=\\\"editFormOffers.errors.required\\\" class=\\\"alert-danger\\\">{{'validators.minOffers' | translate }}</div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"editFormCity.errors && (editFormCity.touched || editFormCity.dirty)\\\">\\r\\n                <div *ngIf=\\\"editFormCity.errors.required\\\" class=\\\"alert-danger\\\">{{'validators.city' | translate }}</div>\\r\\n            </div>\\r\\n\\r\\n              <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"editFormActivities.errors && (editFormActivities.touched || editFormActivities.dirty)\\\">\\r\\n                  <div *ngIf=\\\"editFormActivities.errors.required\\\" class=\\\"alert-danger\\\">{{'validators.minActivities' | translate }}</div>\\r\\n              </div>\\r\\n              <!--End-Validator messages-->\\r\\n\\r\\n              <div class=\\\"btn-toolbar d-flex justify-content-center\\\" role=\\\"toolbar\\\">\\r\\n              <div class=\\\"btn-group mr-1 mr-md-3\\\">\\r\\n                <button type=\\\"button\\\" type=\\\"submit\\\" class=\\\"btn btn-warning d-flex mx-auto mt-2\\\" [disabled]=\\\"(!editForm.valid || !editFormOffers.valid || !editFormActivities.valid || !editFormCity.valid)\\\">{{'register.saveButton' | translate }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"btn-group ml-md-3 mr-1 mr-md-3\\\">\\r\\n                <button type=\\\"button\\\" [routerLink]=\\\"['/home']\\\" class=\\\"btn btn-outline-warning d-flex mx-auto mt-2\\\" >{{'register.quitButton' | translate }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"btn-group ml-md-3\\\">\\r\\n                <button type=\\\"button\\\"  class=\\\"btn btn-outline-danger d-flex mx-auto mt-2\\\" >{{'profile.deleteButton' | translate }}</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-1\\\"></div>\\r\\n</div>\\r\\n\"","module.exports = \"#editFormOffers {\\n  padding: 0;\\n  border: none; }\\n\\n#editFormActivities {\\n  padding: 0;\\n  border: none; }\\n\\n#editFormCity {\\n  padding: 0;\\n  border: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcm9maWxlLXBhZ2UvRDpcXFVzZXJzXFxCS1VcXEx1aXNSYXBoYWVsUmFtZXJcXERlc2t0b3BcXFVuaS1aZXVnXFw2LiBTZW1lc3RlclxcV2ViUHJvZ1xcdGFuZGVtUGFydG5lcjNcXGFuZ3VsYXIvc3JjXFxhcHBcXGNvbXBvbmVudHNcXHByb2ZpbGUtcGFnZVxccHJvZmlsZS1wYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsVUFBVTtFQUNWLFlBQVksRUFBQTs7QUFHZDtFQUNFLFVBQVU7RUFDVixZQUFZLEVBQUE7O0FBR2Q7RUFDRSxVQUFVO0VBQ1YsWUFBWSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9wcm9maWxlLXBhZ2UvcHJvZmlsZS1wYWdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2VkaXRGb3JtT2ZmZXJze1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgYm9yZGVyOiBub25lO1xyXG59XHJcblxyXG4jZWRpdEZvcm1BY3Rpdml0aWVze1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgYm9yZGVyOiBub25lO1xyXG59XHJcblxyXG4jZWRpdEZvcm1DaXR5IHtcclxuICBwYWRkaW5nOiAwO1xyXG4gIGJvcmRlcjogbm9uZTtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormGroup, FormBuilder, AbstractControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { UserStoreService } from 'src/app/services/user-store.service';\r\nimport { User } from 'src/app/models/user';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { ActivitiesOffersCitiesStoreService } from '../../services/activities-offers-cities-store.service';\r\n\r\n@Component({\r\n  selector: 'app-profile-page',\r\n  templateUrl: './profile-page.component.html',\r\n  styleUrls: ['./profile-page.component.scss']\r\n})\r\nexport class ProfilePageComponent implements OnInit {\r\n\r\n  editForm: FormGroup;\r\n\r\n  // for showing available offers, activities & cities\r\n  offers: any[];\r\n  activities: any[];\r\n  cities: string[];\r\n\r\n  // for loading/saving the selected fields\r\n  selectedOffers: any[];\r\n  selectedActivities: any[];\r\n  selectedCity: any;\r\n  sex: string;\r\n\r\n  // for selecting fields\r\n  selectCitySettings = {};\r\n  selectOffersActivitiesSettings = {};\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private router: Router,\r\n              private userStoreService: UserStoreService,\r\n              private authService: AuthService,\r\n              private activitiesOffersCitiesStoreService: ActivitiesOffersCitiesStoreService) {\r\n\r\n              this.editForm = this.createEditForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // initialzie all available offers & activities\r\n    this.offers = this.activitiesOffersCitiesStoreService.getAllOffers();\r\n    this.activities = this.activitiesOffersCitiesStoreService.getAllActivities();\r\n    this.cities = this.activitiesOffersCitiesStoreService.getAllCities();\r\n\r\n\r\n    this.sex = this.parseSexValueForFrontend(this.authService.getUser().sex);\r\n    this.selectedActivities = this.authService.getUser().activities;\r\n    this.selectedOffers = this.authService.getUser().offers,\r\n    this.selectedCity = this.authService.getUser().city;\r\n    this.editForm.get('editFormFirstname').setValue(this.authService.getUser().firstname);\r\n    this.editForm.get('editFormLastname').setValue(this.authService.getUser().lastname);\r\n    this.editForm.get('editFormMail').setValue(this.authService.firebaseUser.email);\r\n    this.editForm.get('editFormBirthday').setValue(this.authService.getUser().dateOfBirth);\r\n\r\n    this.initializeMultiselectSettings();\r\n  }\r\n\r\n  createEditForm() {\r\n    // create the formGroup\r\n    return this.formBuilder.group ({\r\n      // the field only contains letters or spaces\r\n      editFormFirstname: ['', [Validators.required, Validators.pattern('[a-zA-Z ]*')]],\r\n\r\n      // the field only contains letters or spaces\r\n      editFormLastname: ['', [Validators.required, Validators.pattern('[a-zA-Z ]*')]],\r\n\r\n      editFormMail: ['', [Validators.required, Validators.email]],\r\n\r\n      editFormBirthday: [{value: '', disabled: true}],\r\n\r\n      // at least 6 characters, must contain at least 1 uppercase letter, 1 lowercase letter, and 1 number, can contain special characters\r\n      // tslint:disable-next-line:max-line-length\r\n      editFormPassword: ['', [ /*Validators.pattern('^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{6,}$'),*/ Validators.minLength(6), Validators.maxLength(16)]],\r\n\r\n      // at least 6 characters, must contain at least 1 uppercase letter, 1 lowercase letter, and 1 number, can contain special characters\r\n      // tslint:disable-next-line:max-line-length\r\n      editFormPasswordConfirm: ['', [ /*Validators.pattern('^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{6,}$'),*/ Validators.minLength(6), Validators.maxLength(16)]]\r\n        // adds the custom validator for validating the passwords og their matching\r\n    }, { validator: this.passwordMatchValidator});\r\n  }\r\n\r\n  initializeMultiselectSettings() {\r\n\r\n    this.selectCitySettings = {\r\n      singleSelection: true,\r\n      idField: 'item_id',\r\n      textField: 'item_text',\r\n      enableCheckAll: false,\r\n      allowSearchFilter: false,\r\n      closeDropDownOnSelection: true\r\n    };\r\n    // selecting settings for the select fields of offers and activities\r\n    this.selectOffersActivitiesSettings = {\r\n      singleSelection: false,\r\n      idField: 'item_id',\r\n      textField: 'item_text',\r\n      enableCheckAll: false,\r\n      itemsShowLimit: 3,\r\n      allowSearchFilter: false\r\n    };\r\n  }\r\n\r\n  parseSexValueForFrontend(sex: string): string {\r\n    if (sex === 'm') {\r\n      return 'male';\r\n    } else if (sex === 'f') {\r\n      return 'female';\r\n    } else {\r\n      return 'there was no choice of sex';\r\n    }\r\n  }\r\n\r\n  parseSexValueForBackend(sex: string): string {\r\n    if (sex === 'male' || sex === 'männlich') {\r\n      return 'm';\r\n    } else if (sex === 'female' || sex === 'weiblich') {\r\n      return 'f';\r\n    } else {\r\n      return 'there was no choice of sex';\r\n    }\r\n  }\r\n\r\n  // validate the passwords whether they are matching\r\n  passwordMatchValidator(control: AbstractControl): { invalid: boolean} {\r\n    if (control.get('editFormPassword').value !== control.get('editFormPasswordConfirm').value) {\r\n      return {invalid: true };\r\n    }\r\n  }\r\n\r\n  // validate the input & select fields and send the mail & password to Firebase Authentication\r\n  // after that the rest of userdata incl. the recieved UserID will be send to the API(Firebase Cloud Functions)\r\n  editFormSave() {\r\n\r\n    if (this.editForm.invalid) {\r\n      return;\r\n    }\r\n    // get data from the inputfields\r\n    const userdata = {\r\n      firstname: this.editForm.value.editFormFirstname,\r\n      lastname: this.editForm.value.editFormLastname,\r\n      city: this.selectedCity[0],\r\n      dateOfBirth: this.editForm.value.editFormBirthday,\r\n      // get the only one item from selectedSex-Array\r\n      sex: this.parseSexValueForBackend(this.sex),\r\n      activities: this.selectedActivities,\r\n      offers: this.selectedOffers\r\n    };\r\n\r\n\r\n    // mail and password are gonna be saved at Firebase Authentication and not in userdata\r\n    const mail = this.editForm.value.editFormMail;\r\n    const password = this.editForm.value.editFormPassword;\r\n\r\n    if (password === !null || password === !undefined || password === !'' ) {\r\n      console.log('ausgefülltes password');\r\n      // this.authService.firebaseUser.updatePassword(password).then();\r\n    }\r\n\r\n    if (mail === !null || mail === !undefined || mail === !'' ) {\r\n      console.log('ausgefüllte mail');\r\n      // this.authService.firebaseUser.updateEmail(mail).then();\r\n    }\r\n\r\n   // // create new user in cloud firestore and take the UID from the new created User\r\n   // this.userStoreService.updateUser(this.authService.currentUser.uid, userdata).subscribe(() => {\r\n   //   // then go to page 'home'\r\n   //   this.router.navigate(['/home']);\r\n   // });\r\n\r\n  }\r\n\r\n\r\n  // getter for the inputfields\r\n  get editFormFirstname() {\r\n    return this.editForm.get('editFormFirstname');\r\n  }\r\n\r\n  get editFormLastname() {\r\n    return this.editForm.get('editFormLastname');\r\n  }\r\n\r\n  get editFormBirthday() {\r\n    return this.editForm.get('editFormBirthday');\r\n  }\r\n\r\n get editFormMail() {\r\n   return this.editForm.get('editFormMail');\r\n }\r\n\r\n get editFormPassword() {\r\n   return this.editForm.get('editFormPassword');\r\n }\r\n get editFormPasswordConfirm() {\r\n   return this.editForm.get('editFormPasswordConfirm');\r\n }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVnaXN0ZXItcGFnZS9yZWdpc3Rlci1wYWdlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-1\\\"></div>\\r\\n  <div class=\\\"col-10\\\">\\r\\n    <div class=\\\"card mx-auto my-5 shadow\\\">\\r\\n        <div class=\\\"card-header bg-warning text-center h5\\\">\\r\\n            {{'register.headerTitle' | translate }}\\r\\n          </div>\\r\\n      <div class=\\\"card-body\\\">\\r\\n          <form class=\\\"\\\" [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"registerFormSave()\\\" novalidate>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"form-group col-md-6\\\">\\r\\n                  <label for=\\\"registerFormFirstname\\\">{{'register.firstname' | translate }}*</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control shadow-sm\\\" id=\\\"registerFormFirstname\\\" formControlName=\\\"registerFormFirstname\\\" placeholder=\\\"{{'register.firstname' | translate }}\\\">\\r\\n              </div>\\r\\n              <div class=\\\"form-group col-md-6\\\">\\r\\n                  <label for=\\\"registerFormLastname\\\">{{'register.lastname' | translate }}*</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control shadow-sm\\\" id=\\\"registerFormLastname\\\" formControlName=\\\"registerFormLastname\\\" placeholder=\\\"{{'register.lastname' | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label for=\\\"registerFormSex\\\">{{'register.sex' | translate }}*</label>\\r\\n                <ng-multiselect-dropdown  class=\\\"form-control shadow-sm\\\" id=\\\"registerFormSex\\\" #registerFormSex=\\\"ngModel\\\"\\r\\n                  [placeholder]=\\\"'register.pleaseChoose' | translate\\\"\\r\\n                  [data]=\\\"sexes\\\"\\r\\n                  [(ngModel)]=\\\"selectedSex\\\" [ngModelOptions]=\\\"{ standalone : true }\\\"\\r\\n                  [settings]=\\\"selectSexSettings\\\" required>\\r\\n                </ng-multiselect-dropdown>\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6 form-group\\\">\\r\\n                  <label>{{'register.mail' | translate }}*</label>\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control shadow-sm\\\" id=\\\"registerFormMail\\\" formControlName=\\\"registerFormMail\\\" placeholder=\\\"name@example.com\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label for=\\\"registerFormCity\\\">{{'register.city' | translate }}*</label>\\r\\n                <ng-multiselect-dropdown  class=\\\"form-control shadow-sm\\\" id=\\\"registerFormCity\\\" #registerFormCity=\\\"ngModel\\\"\\r\\n                  [placeholder]=\\\"'register.pleaseChoose' | translate\\\"\\r\\n                  [data]=\\\"cities\\\"\\r\\n                  [(ngModel)]=\\\"selectedCity\\\" [ngModelOptions]=\\\"{ standalone : true }\\\"\\r\\n                  [settings]=\\\"selectCitySettings\\\" required>\\r\\n                </ng-multiselect-dropdown>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6 form-group\\\">\\r\\n                  <label for=\\\"registerFormBirthday\\\">{{'register.birthday' | translate }}*</label>\\r\\n                  <input type=\\\"text\\\"\\r\\n                  [placeholder]=\\\"'dd.mm.yyyy'\\\"\\r\\n                  class=\\\"form-control shadow-sm\\\"\\r\\n                  bsDatepicker id=\\\"registerFormBirthday\\\" formControlName=\\\"registerFormBirthday\\\"\\r\\n                  [bsConfig]=\\\"{ dateInputFormat: 'DD.MM.YYYY', colorTheme: 'theme-orange' }\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label for=\\\"registerFormOffers\\\">{{'register.offers' | translate }}:*</label>\\r\\n                <ng-multiselect-dropdown  class=\\\"form-control shadow-sm\\\" id=\\\"registerFormOffers\\\" #registerFormOffers=\\\"ngModel\\\"\\r\\n                   [placeholder]=\\\"'register.pleaseChoose' | translate\\\"\\r\\n                   [data]=\\\"offers\\\"\\r\\n                   [(ngModel)]=\\\"selectedOffers\\\" [ngModelOptions]=\\\"{ standalone : true }\\\"\\r\\n                   [settings]=\\\"selectOffersActivitiesSettings\\\" required>\\r\\n                </ng-multiselect-dropdown>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label for=\\\"registerFormActivities\\\">{{'register.activities' | translate }}:*</label>\\r\\n                <ng-multiselect-dropdown  class=\\\"form-control shadow-sm\\\" id=\\\"registerFormActivities\\\" #registerFormActivities=\\\"ngModel\\\"\\r\\n                   [placeholder]=\\\"'register.pleaseChoose' | translate\\\"\\r\\n                   [data]=\\\"activities\\\"\\r\\n                   [(ngModel)]=\\\"selectedActivities\\\" [ngModelOptions]=\\\"{ standalone : true }\\\"\\r\\n                   [settings]=\\\"selectOffersActivitiesSettings\\\" required>\\r\\n                </ng-multiselect-dropdown>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-md-6 form-group\\\">\\r\\n                  <label>{{'register.password' | translate }}*</label>\\r\\n                  <input type=\\\"password\\\" class=\\\"form-control shadow-sm\\\" id=\\\"registerFormPassword\\\" formControlName=\\\"registerFormPassword\\\" placeholder=\\\"{{'register.password' | translate }}\\\">\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6 form-group\\\">\\r\\n                  <label>{{'register.passwordConfirm' | translate }}*</label>\\r\\n                  <input type=\\\"password\\\" class=\\\"form-control shadow-sm\\\" id=\\\"registerFormPasswordConfirm\\\" formControlName=\\\"registerFormPasswordConfirm\\\" placeholder=\\\"{{'register.passwordConfirm' | translate }}\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <!--Validator messages-->\\r\\n            <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"registerFormFirstname.errors && (registerFormFirstname.touched || registerFormFirstname.dirty)\\\">\\r\\n                <div *ngIf=\\\"registerFormFirstname.errors.required\\\">{{'register.firstname' | translate }} {{'validators.required' | translate }}</div>\\r\\n                <div *ngIf=\\\"registerFormFirstname.errors.pattern\\\">{{'validators.letterSpaces' | translate }}</div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"registerFormLastname.errors && (registerFormLastname.touched || registerFormLastname.dirty)\\\">\\r\\n                <div *ngIf=\\\"registerFormLastname.errors.required\\\">{{'register.lastname' | translate }} {{'validators.required' | translate }}</div>\\r\\n                <div *ngIf=\\\"registerFormLastname.errors.pattern\\\">{{'validators.letterSpaces' | translate }}</div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"registerFormMail.errors && (registerFormMail.touched || registerFormMail.dirty)\\\">\\r\\n                <div *ngIf=\\\"registerFormMail.errors.required\\\">{{'register.mail' | translate }} {{'validators.required' | translate }}</div>\\r\\n                <div *ngIf=\\\"registerFormMail.errors.email\\\">{{'validators.email' | translate }}</div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"registerFormPassword.errors && (registerFormPassword.touched || registerFormPassword.dirty)\\\">\\r\\n                <div *ngIf=\\\"registerFormPassword.errors.required\\\">{{'register.password' | translate }} {{'validators.required' | translate }}</div>\\r\\n                <div *ngIf=\\\"registerFormPassword.errors.minlength\\\">{{'validators.passwordPattern' | translate }}</div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"registerFormPasswordConfirm.errors && (registerFormPasswordConfirm.touched || registerFormPasswordConfirm.dirty)\\\">\\r\\n                <div *ngIf=\\\"registerFormPasswordConfirm.errors.required\\\">{{'register.passwordConfirm' | translate }} {{'validators.required' | translate }}</div>\\r\\n                <div *ngIf=\\\"registerFormPasswordConfirm.errors.minlength\\\">{{'validators.passwordPattern' | translate }}</div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"registerFormPassword.value != registerFormPasswordConfirm.value && registerFormPasswordConfirm.value != null\\\">\\r\\n                  {{'validators.passwordMismatch' | translate }}\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"registerFormSex.errors && (registerFormSex.touched || registerFormSex.dirty)\\\">\\r\\n                  <div *ngIf=\\\"registerFormSex.errors.required\\\" class=\\\"alert-danger\\\">{{'register.sex' | translate }} {{'validators.required' | translate }}</div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"registerFormOffers.errors && (registerFormOffers.touched || registerFormOffers.dirty)\\\">\\r\\n                  <div *ngIf=\\\"registerFormOffers.errors.required\\\" class=\\\"alert-danger\\\">{{'validators.minOffers' | translate }}</div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"registerFormActivities.errors && (registerFormActivities.touched || registerFormActivities.dirty)\\\">\\r\\n                  <div *ngIf=\\\"registerFormActivities.errors.required\\\" class=\\\"alert-danger\\\">{{'validators.minActivities' | translate }}</div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"registerFormCity.errors && (registerFormCity.touched || registerFormCity.dirty)\\\">\\r\\n                <div *ngIf=\\\"registerFormCity.errors.required\\\" class=\\\"alert-danger\\\">{{'validators.city' | translate }}</div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"registerFormBirthday.errors && (registerFormBirthday.touched || registerFormBirthday.dirty)\\\">\\r\\n                <div *ngIf=\\\"registerFormBirthday.errors.required\\\" class=\\\"alert-danger\\\">{{'validators.birthday' | translate }}</div>\\r\\n              </div>\\r\\n              <!--End-Validator messages-->\\r\\n\\r\\n              <div class=\\\"btn-toolbar d-flex justify-content-center\\\" role=\\\"toolbar\\\">\\r\\n              <div class=\\\"btn-group mr-1 mr-md-3\\\">\\r\\n                <button type=\\\"button\\\" type=\\\"submit\\\" class=\\\"btn btn-warning d-flex mx-auto mt-2\\\" [disabled]=\\\"(!registerForm.valid || !registerFormOffers.valid || !registerFormActivities.valid || !registerFormCity.valid)\\\">{{'register.saveButton' | translate }}</button>\\r\\n              </div>\\r\\n              <div class=\\\"btn-group ml-md-3\\\">\\r\\n                <button type=\\\"button\\\" [routerLink]=\\\"['/login']\\\" class=\\\"btn btn-outline-warning d-flex mx-auto mt-2\\\" >{{'register.quitButton' | translate }}</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-1\\\"></div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormGroup, FormBuilder, AbstractControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { UserStoreService } from 'src/app/services/user-store.service';\r\nimport { User } from 'src/app/models/user';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { ActivitiesOffersCitiesStoreService } from '../../services/activities-offers-cities-store.service';\r\nimport { Md5 } from 'ts-md5';\r\n\r\n@Component({\r\n  selector: 'app-register-page',\r\n  templateUrl: './register-page.component.html',\r\n  styleUrls: ['./register-page.component.css']\r\n})\r\nexport class RegisterPageComponent implements OnInit {\r\n\r\n  registerForm: FormGroup;\r\n\r\n  sexes = ['female', 'male'];\r\n  offers: any[];\r\n  activities: any[];\r\n  cities: string[];\r\n\r\n  selectedOffers: any[];\r\n  selectedActivities: any[];\r\n  selectedCity: any;\r\n  selectedSex: any[];\r\n\r\n  selectOffersActivitiesSettings = {};\r\n  selectSexSettings = {};\r\n  selectCitySettings = {};\r\n\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private router: Router,\r\n              private userStoreService: UserStoreService,\r\n              private authService: AuthService,\r\n              private activitiesOffersCitiesStoreService: ActivitiesOffersCitiesStoreService) {\r\n\r\n              this.registerForm = this.createRegisterForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    // initialzie all available offers & activities\r\n    this.offers = this.activitiesOffersCitiesStoreService.getAllOffers();\r\n    this.activities = this.activitiesOffersCitiesStoreService.getAllActivities();\r\n    this.cities = this.activitiesOffersCitiesStoreService.getAllCities();\r\n\r\n    this.initializeMultiselectSettings();\r\n  }\r\n\r\n  createRegisterForm() {\r\n    // create the formGroup\r\n    return this.formBuilder.group ({\r\n      // the field only contains letters or spaces\r\n      registerFormFirstname: ['', [Validators.required, Validators.pattern('[a-zA-Z ]*')]],\r\n\r\n      // the field only contains letters or spaces\r\n      registerFormLastname: ['', [Validators.required, Validators.pattern('[a-zA-Z ]*')]],\r\n\r\n      registerFormMail: ['', [Validators.required, Validators.email]],\r\n\r\n      registerFormBirthday: ['', Validators.required],\r\n\r\n      // at least 6 characters, must contain at least 1 uppercase letter, 1 lowercase letter, and 1 number, can contain special characters\r\n      // tslint:disable-next-line:max-line-length\r\n      registerFormPassword: ['', [Validators.required, /*Validators.pattern('^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{6,}$'),*/ Validators.minLength(6), Validators.maxLength(16)]],\r\n\r\n      // at least 6 characters, must contain at least 1 uppercase letter, 1 lowercase letter, and 1 number, can contain special characters\r\n      // tslint:disable-next-line:max-line-length\r\n      registerFormPasswordConfirm: ['', [Validators.required, /*Validators.pattern('^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{6,}$'),*/ Validators.minLength(6), Validators.maxLength(16)]]\r\n        // adds the custom validator for validating the passwords og their matching\r\n    }, { validator: this.passwordMatchValidator});\r\n  }\r\n\r\n  initializeMultiselectSettings() {\r\n    // selecting settings for the select fields of choosing the sex\r\n    this.selectSexSettings = {\r\n      singleSelection: true,\r\n      idField: 'item_id',\r\n      textField: 'item_text',\r\n      enableCheckAll: false,\r\n      allowSearchFilter: false,\r\n      closeDropDownOnSelection: true\r\n    };\r\n\r\n    this.selectCitySettings = {\r\n      singleSelection: true,\r\n      idField: 'item_id',\r\n      textField: 'item_text',\r\n      enableCheckAll: false,\r\n      allowSearchFilter: false,\r\n      closeDropDownOnSelection: true\r\n    };\r\n\r\n    // selecting settings for the select fields of offers and activities\r\n    this.selectOffersActivitiesSettings = {\r\n      singleSelection: false,\r\n      idField: 'item_id',\r\n      textField: 'item_text',\r\n      enableCheckAll: false,\r\n      itemsShowLimit: 3,\r\n      allowSearchFilter: false\r\n    };\r\n  }\r\n\r\n  // validate the passwords whether they are matching\r\n  passwordMatchValidator(control: AbstractControl): { invalid: boolean} {\r\n    if (control.get('registerFormPassword').value !== control.get('registerFormPasswordConfirm').value) {\r\n      return {invalid: true };\r\n    }\r\n  }\r\n\r\n  // validate the input & select fields and send the mail & password to Firebase Authentication\r\n  // after that the rest of userdata incl. the recieved UserID will be send to the API(Firebase Cloud Functions)\r\n  registerFormSave() {\r\n\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n    // get data from the inputfields\r\n    const userdata = {\r\n      firstname: this.registerForm.value.registerFormFirstname,\r\n      lastname: this.registerForm.value.registerFormLastname,\r\n      city: this.selectedCity,\r\n      dateOfBirth: this.registerForm.value.registerFormBirthday,\r\n      // get the only one item from selectedSex-Array\r\n      sex: this.parseSexValueForBackend(this.selectedSex[0]),\r\n      activities: this.selectedActivities,\r\n      offers: this.selectedOffers,\r\n      mail: this.registerForm.value.registerFormMail,\r\n      password: Md5.hashStr(this.registerForm.value.registerFormPassword)\r\n    };\r\n\r\n\r\n      // create new user in cloud firestore and take the UID from the new created User\r\n    this.userStoreService.createUser(userdata).subscribe(() => {\r\n      // then go to page 'home'\r\n      this.router.navigate(['/home']);\r\n    });\r\n\r\n  }\r\n\r\n  // shorten the male/female-word and return one letter or 'no choice'\r\n  parseSexValueForBackend(sex: string): string {\r\n    if (sex === 'male' || sex === 'männlich') {\r\n      return 'm';\r\n    } else if (sex === 'female' || sex === 'weiblich') {\r\n      return 'f';\r\n    } else {\r\n      return 'there was no choice of sex';\r\n    }\r\n  }\r\n\r\n  // getter for the inputfields\r\n  get registerFormFirstname() {\r\n    return this.registerForm.get('registerFormFirstname');\r\n  }\r\n\r\n  get registerFormLastname() {\r\n    return this.registerForm.get('registerFormLastname');\r\n  }\r\n\r\n  get registerFormBirthday() {\r\n    return this.registerForm.get('registerFormBirthday');\r\n  }\r\n\r\n  get registerFormMail() {\r\n    return this.registerForm.get('registerFormMail');\r\n  }\r\n\r\n  get registerFormPassword() {\r\n    return this.registerForm.get('registerFormPassword');\r\n  }\r\n\r\n  get registerFormPasswordConfirm() {\r\n    return this.registerForm.get('registerFormPasswordConfirm');\r\n  }\r\n\r\n}\r\n","module.exports = \"<p>\\r\\n  result-page works!\\r\\n</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVzdWx0LXBhZ2UvcmVzdWx0LXBhZ2UuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-result-page',\r\n  templateUrl: './result-page.component.html',\r\n  styleUrls: ['./result-page.component.scss']\r\n})\r\nexport class ResultPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-1\\\"></div>\\r\\n  <div class=\\\"col-10\\\">\\r\\n    <div class=\\\"card mx-auto my-5 shadow\\\">\\r\\n      <!--header-->\\r\\n      <div class=\\\"card-header h5 bg-transparent d-flex justify-content-between border-warning p-0\\\">\\r\\n        <div class=\\\"col-md-6 font-weight-light text-center pointer-cursor align-self-center border-right btn-outline-warning py-3\\\"\\r\\n          data-toggle=\\\"collapse\\\" href=\\\"#collapseNewSearch\\\"\\r\\n          [ngClass]=\\\"{'active':newSearchCollapsed === true}\\\"\\r\\n          role=\\\"button\\\" aria-expanded=\\\"false\\\"\\r\\n          aria-controls=\\\"collapseNewSearch\\\" (click)=\\\"recentRequestCollapsed=false\\\" (click)=\\\"newSearchCollapsed=true\\\">\\r\\n          {{'search.newSearch' | translate }}\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6 font-weight-light text-center pointer-cursor btn-outline-warning py-3\\\"\\r\\n            [ngClass]=\\\"{'active':recentRequestCollapsed === true}\\\"\\r\\n            data-toggle=\\\"collapse\\\" href=\\\"#collapseRecentSearches\\\"\\r\\n            role=\\\"button\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseRecentSearches\\\"\\r\\n            (click)=\\\"newSearchCollapsed=false\\\" (click)=\\\"recentRequestCollapsed=true\\\">\\r\\n            {{'search.recentSearches' | translate }}\\r\\n        </div>\\r\\n      </div><!--header-->\\r\\n\\r\\n      <!--new search area-->\\r\\n      <div *ngIf=\\\"newSearchCollapsed\\\" class=\\\"card-body collapse\\\" id=\\\"collapseNewSearch\\\">\\r\\n        <form class=\\\"\\\" [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"newSearchSave()\\\" novalidate>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"form-group col-md-6\\\">\\r\\n              <label for=\\\"searchFormOffer\\\">{{'search.offer' | translate }}:*</label>\\r\\n              <ng-multiselect-dropdown  class=\\\"form-control shadow-sm\\\" id=\\\"searchFormOffer\\\" #searchFormOffer=\\\"ngModel\\\"\\r\\n                [placeholder]=\\\"'search.offer' | translate\\\"\\r\\n                [data]=\\\"offers\\\"\\r\\n                [(ngModel)]=\\\"selectedOffer\\\" [ngModelOptions]=\\\"{ standalone : true }\\\"\\r\\n                [settings]=\\\"selectOnlyOneSettings\\\" required>\\r\\n              </ng-multiselect-dropdown>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n              <label for=\\\"searchFormCity\\\">{{'search.city' | translate }}</label>\\r\\n              <ng-multiselect-dropdown  class=\\\"form-control shadow-sm\\\" id=\\\"searchFormCity\\\" #searchFormCity=\\\"ngModel\\\"\\r\\n                [placeholder]=\\\"'register.pleaseChoose' | translate\\\"\\r\\n                [data]=\\\"cities\\\"\\r\\n                [(ngModel)]=\\\"selectedCity\\\" [ngModelOptions]=\\\"{ standalone : true }\\\"\\r\\n                [settings]=\\\"selectOnlyOneSettings\\\">\\r\\n              </ng-multiselect-dropdown>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n              <label for=\\\"searchFormActivities\\\">{{'search.activities' | translate }}:</label>\\r\\n              <ng-multiselect-dropdown  class=\\\"form-control shadow-sm\\\" id=\\\"searchFormActivities\\\" #searchFormActivities=\\\"ngModel\\\"\\r\\n                 [placeholder]=\\\"'register.pleaseChoose' | translate\\\"\\r\\n                 [data]=\\\"activities\\\"\\r\\n                 [(ngModel)]=\\\"selectedActivities\\\" [ngModelOptions]=\\\"{ standalone : true }\\\"\\r\\n                 [settings]=\\\"selectActivitiesSettings\\\">\\r\\n              </ng-multiselect-dropdown>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n              <label for=\\\"searchFormSex\\\">{{'register.sex' | translate }}:</label>\\r\\n              <ng-multiselect-dropdown  class=\\\"form-control shadow-sm\\\" id=\\\"searchFormSex\\\" #searchFormSex=\\\"ngModel\\\"\\r\\n                [placeholder]=\\\"'register.pleaseChoose' | translate\\\"\\r\\n                [data]=\\\"sexes\\\"\\r\\n                [(ngModel)]=\\\"selectedSex\\\" [ngModelOptions]=\\\"{ standalone : true }\\\"\\r\\n                [settings]=\\\"selectOnlyOneSettings\\\">\\r\\n              </ng-multiselect-dropdown>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>{{'search.minAge' | translate }}</label>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control shadow-sm\\\" id=\\\"searchFormMinAge\\\" formControlName=\\\"searchFormMinAge\\\" placeholder=\\\"{{'search.minAge' | translate }}\\\">\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 form-group\\\">\\r\\n                <label>{{'search.maxAge' | translate }}</label>\\r\\n                <input type=\\\"number\\\" class=\\\"form-control shadow-sm\\\" id=\\\"searchFormMaxAge\\\" formControlName=\\\"searchFormMaxAge\\\" placeholder=\\\"{{'search.maxAge' | translate }}\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"searchFormOffer.errors && (searchFormOffer.touched || searchFormOffer.dirty)\\\">\\r\\n            <div *ngIf=\\\"searchFormOffer.errors.required\\\" class=\\\"alert-danger\\\">{{'validators.minOffers' | translate }}</div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"alert-danger pl-2\\\" *ngIf=\\\"searchFormMinAge.value > searchFormMaxAge.value\\\">\\r\\n            {{'validators.ageMismatch' | translate }}\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\" role=\\\"toolbar\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <button type=\\\"button\\\" type=\\\"submit\\\" class=\\\"btn btn-warning d-flex mx-auto ml-md-auto mt-2\\\"\\r\\n                      [disabled]=\\\"!searchFormOffer.valid || (searchFormMinAge.value > searchFormMaxAge.value)\\\">\\r\\n                      {{'search.searchButton' | translate }}\\r\\n              </button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <button type=\\\"button\\\" [routerLink]=\\\"['/home']\\\" class=\\\"btn btn-outline-warning d-flex mx-auto mr-md-auto mt-2\\\" >{{'register.quitButton' | translate }}</button>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n      </div>\\r\\n\\r\\n      <!--recent searchrequests area-->\\r\\n      <div *ngIf=\\\"recentRequestCollapsed\\\" class=\\\"card-body collapse\\\" id=\\\"collapseRecentSearches\\\">\\r\\n        <div *ngFor=\\\"let request of recentSearchrequests\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <a class=\\\"pointer-cursor\\\" (click)=\\\"useRecentSearchrequest(request)\\\">\\r\\n                <h5 class=\\\"font-weight-light\\\">{{request.offerParam}}</h5>\\r\\n                <h6 class=\\\"font-weight-light\\\">{{request.minAgeParam}} - {{request.maxAgeParam}} Jahre </h6>\\r\\n                <h6 class=\\\"font-weight-light\\\">{{request.sexParam}}</h6>\\r\\n              </a>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div><!--ngfor-->\\r\\n      </div><!--recent searchrequests-->\\r\\n\\r\\n    </div>\\r\\n  </div><!--col-10-->\\r\\n  <div class=\\\"col-1\\\"></div>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2VhcmNoLXBhZ2Uvc2VhcmNoLXBhZ2UuY29tcG9uZW50LnNjc3MifQ== */\"","import { Searchrequest } from './../../models/searchrequest';\r\nimport { ActivitiesOffersCitiesStoreService } from './../../services/activities-offers-cities-store.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, AbstractControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { SearchService } from 'src/app/services/search.service';\r\n\r\n@Component({\r\n  selector: 'app-search-page',\r\n  templateUrl: './search-page.component.html',\r\n  styleUrls: ['./search-page.component.scss']\r\n})\r\nexport class SearchPageComponent implements OnInit {\r\n\r\n  searchForm: FormGroup;\r\n\r\n  sexes = ['female', 'male', 'both'];\r\n  offers: string[];\r\n  activities: string[];\r\n  cities: string[];\r\n\r\n  selectedOffer: string;\r\n  selectedActivities: string[];\r\n  selectedCity: string;\r\n  selectedSex: string;\r\n\r\n  selectOnlyOneSettings = {};\r\n  selectActivitiesSettings = {};\r\n\r\n  recentSearchrequests: Searchrequest[];\r\n\r\n  // getting active & collapsed state\r\n  newSearchCollapsed = false;\r\n  recentRequestCollapsed = false;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private router: Router,\r\n              private activitiesOffersCitiesStoreService: ActivitiesOffersCitiesStoreService,\r\n              private searchService: SearchService) {\r\n    this.searchForm = this.createSearchForm();\r\n              }\r\n\r\n  ngOnInit() {\r\n    // initialzie all available offers & activities\r\n    this.offers = this.activitiesOffersCitiesStoreService.getAllOffers();\r\n    this.activities = this.activitiesOffersCitiesStoreService.getAllActivities();\r\n    this.cities = this.activitiesOffersCitiesStoreService.getAllCities();\r\n\r\n    this.initializeMultiselectSettings();\r\n\r\n    // TODO: implement the currentUser\r\n    this.recentSearchrequests = this.searchService.getRecentSearchrequestsForSpecificUser('2');\r\n  }\r\n\r\n  createSearchForm() {\r\n     // create the formGroup\r\n     return this.formBuilder.group ({\r\n       searchFormMinAge: [''],\r\n\r\n       searchFormMaxAge: ['']\r\n     }, {validator: this.ageCheckValidator});\r\n  }\r\n\r\n  initializeMultiselectSettings() {\r\n  this.selectOnlyOneSettings = {\r\n    singleSelection: true,\r\n    idField: 'item_id',\r\n    textField: 'item_text',\r\n    enableCheckAll: false,\r\n    allowSearchFilter: false,\r\n    closeDropDownOnSelection: true\r\n  };\r\n\r\n  // selecting settings for the select fields of offers and activities\r\n  this.selectActivitiesSettings = {\r\n    singleSelection: false,\r\n    idField: 'item_id',\r\n    textField: 'item_text',\r\n    enableCheckAll: false,\r\n    itemsShowLimit: 3,\r\n    allowSearchFilter: false\r\n  };\r\n  }\r\n\r\n  ageCheckValidator(control: AbstractControl): { invalid: boolean} {\r\n    if (control.get('searchFormMinAge').value > control.get('searchFormMaxAge').value) {\r\n      return {invalid: true };\r\n    }\r\n  }\r\n\r\n  newSearchSave() {\r\n\r\n    const searchdata = {\r\n      offerParam: this.selectedOffer,\r\n      activities: this.selectedActivities,\r\n      sexParam: this.parseSexValueForBackend(this.selectedSex),\r\n      minAgeParam: this.searchForm.value.searchFormMinAge,\r\n      maxAgeParam: this.searchForm.value.searchFormMaxAge\r\n    };\r\n\r\n    this.searchService.createSearchrequest(searchdata);\r\n  }\r\n\r\n  useRecentSearchrequest(request: Searchrequest) {\r\n    this.searchService.takeExistingSearchrequest(request);\r\n  }\r\n\r\n  // shorten the male/female-word and return one letter or 'no choice'\r\n  parseSexValueForBackend(sex: string): string {\r\n    if (sex === 'male' || sex === 'männlich') {\r\n      return 'm';\r\n    } else if (sex === 'female' || sex === 'weiblich') {\r\n      return 'f';\r\n    } else if (sex === 'both' || sex === 'egal') {\r\n      return 'b';\r\n    } else {\r\n      return 'there was no choice of sex';\r\n    }\r\n  }\r\n\r\n  get searchFormMinAge() {\r\n    return this.searchForm.get('searchFormMinAge');\r\n  }\r\n\r\n  get searchFormMaxAge() {\r\n    return this.searchForm.get('searchFormMaxAge');\r\n  }\r\n\r\n}\r\n","export class Match {\r\n  constructor(\r\n    public initiatorID: string,\r\n    public partnerID: string,\r\n    public matchedOffer: string,\r\n    public accepted: boolean\r\n  ) {}\r\n}\r\n","export class Searchrequest {\r\n  constructor(\r\n  public minAgeParam: number,\r\n  public maxAgeParam: number,\r\n  public sexParam: string,\r\n  public offerParam: string\r\n  ) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ActivitiesOffersCitiesStoreService {\r\n\r\n  offers = ['spanisch', 'kochen'];\r\n  activities = ['kochen', 'turnen', 'schwimmen', 'rudern'];\r\n  cities = ['Hamburg', 'Berlin', 'München', 'Hannover'];\r\n\r\n  constructor() { }\r\n\r\n  getAllOffers() {\r\n    return this.offers;\r\n  }\r\n\r\n  getAllActivities() {\r\n    return this.activities;\r\n  }\r\n\r\n  getAllCities() {\r\n    return this.cities;\r\n  }\r\n}\r\n","import { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    const user = this.authService.getUser();\r\n    if (!user) {\r\n      this.router.navigate(['/']);\r\n    }\r\n    return !!user;\r\n  }\r\n// canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n//   const url: string = state.url;\r\n//   return this.checkLogin(url);\r\n// }\r\n// checkLogin(url: string) {\r\n//   if (this.authService.isloggedIn()) {\r\n//     return true;\r\n//   }\r\n//   // Store the attempted URL for redirecting\r\n//   this.authService.redirectUrl = url;\r\n//\r\n//   this.router.navigate(['/login']);\r\n//   return false;\r\n// }\r\n}\r\n","import { UserStoreService } from 'src/app/services/user-store.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AngularFireAuth } from '@angular/fire/auth';\r\nimport { User } from '../models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  public firebaseUser: firebase.User = null;\r\n  public currentUser: User;\r\n\r\n  isLoggedIn = false;\r\n   // store the URL so we can redirect after logging in\r\n   redirectUrl: string;\r\n\r\n  constructor(public angularFireAuth: AngularFireAuth,\r\n              public router: Router,\r\n              private userStoreService: UserStoreService) {\r\n    this.angularFireAuth.authState.subscribe( user => {\r\n      if (user) {\r\n        this.firebaseUser = user;\r\n        localStorage.setItem('user', JSON.stringify(this.currentUser));\r\n      } else {\r\n        localStorage.setItem('user', null);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  getUser() {\r\n    this.userStoreService.getUserById(this.firebaseUser.uid).subscribe( (recievedUser: User) => {\r\n      this.currentUser = recievedUser;\r\n    });\r\n\r\n    return this.currentUser;\r\n  }\r\n\r\n  isloggedIn(): boolean {\r\n    const user = this.angularFireAuth.auth.currentUser;\r\n    if (user) {\r\n      return this.isLoggedIn = true;\r\n    } else {\r\n      return this.isLoggedIn = false;\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.angularFireAuth.auth.signOut()\r\n    .then(() => {\r\n      localStorage.removeItem('user');\r\n      this.router.navigate(['/login']);\r\n    });\r\n\r\n  }\r\n\r\n  signUpWithMailAndPassword(mail: string, password: string) {\r\n    return new Promise<any>((resolve, reject) => {\r\n      this.angularFireAuth.auth.createUserWithEmailAndPassword(mail, password)\r\n      .then( res => {\r\n        this.isLoggedIn = true;\r\n        resolve(res);\r\n      }, error => reject(error));\r\n    });\r\n  }\r\n\r\n  async signInWithMailAndPassword(mail: string, password: string) {\r\n    try {\r\n      await this.angularFireAuth.auth.signInWithEmailAndPassword(mail, password);\r\n      this.isLoggedIn = true;\r\n      this.router.navigate(['/home']);\r\n    } catch (error) {\r\n      alert('Not able to sign in!' + error.message);\r\n    }\r\n  }\r\n}\r\n","import { Match } from './../models/match';\r\nimport { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/firestore';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MatchStoreService {\r\n\r\n  unacceptedMatches: any[];\r\n  allMatchesForSpecificUser: any[];\r\n\r\n  constructor(private angularFireStore: AngularFirestore) {\r\n this.allMatchesForSpecificUser = [\r\n   new Match(\r\n   'kycsoFi1RPaNy3hJxwmFhbD032I3',\r\n   'xMFp4LlYHPXZ3ntVWvRsq0cwzl02',\r\n   'kochen',\r\n   false),\r\n   new Match(\r\n   'a5WsJoGC2kbu0zto57mP',\r\n   'xMFp4LlYHPXZ3ntVWvRsq0cwzl02',\r\n   'schwimmen',\r\n   false)\r\n ];\r\n   }\r\n\r\n  async getAllUnacceptedMatchesForUser(id: string) {\r\n    try {\r\n        await this.angularFireStore.collection('matches').ref.where('partnerID', '==', id)\r\n        .get().then( snapshot => {\r\n          snapshot.docs.forEach( doc => {\r\n            this.unacceptedMatches.push(doc.data());\r\n          });\r\n        });\r\n        return this.unacceptedMatches;\r\n    } catch (error) {\r\n      console.log('Error getting unaccepted matches', error);\r\n  }\r\n  }\r\n\r\n  async getAllMatchesForSpecificUser(id: string) {\r\n    // get alle matches where initiatorID=currentUser.uid\r\n    try {\r\n      await this.angularFireStore.collection<Match>('matches').ref.where('initiatorID', '==', id)\r\n      .get().then(snapshot => {\r\n        snapshot.docs.forEach(doc => {\r\n          this.allMatchesForSpecificUser.push(doc.data() as Match);\r\n        });\r\n      });\r\n    } catch (error) {\r\n      console.log('Error getting  matches where initiatorID = UID', error);\r\n\r\n    }\r\n\r\n    // get all matches where patnerID=currentUser.uid and accepted=true\r\n    try {\r\n      await this.angularFireStore.collection<Match>('matches').ref.where('partnerID', '==', id).where('accepted', '==', true)\r\n      .get().then( snapshot => {\r\n        snapshot.docs.forEach(doc => {\r\n          this.allMatchesForSpecificUser.push(doc.data() as Match);\r\n        });\r\n      });\r\n      } catch (error) {\r\n        console.log('Error getting accepted matches where partnerID = UID', error);\r\n      }\r\n\r\n    return this.allMatchesForSpecificUser;\r\n\r\n  }\r\n\r\n  updateMatch(id: string, data: any) {\r\n  // TOD: add functionality\r\n  }\r\n\r\n  deleteMatch(matchId: string) {\r\n  // TOD: add functionality\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Searchrequest } from '../models/searchrequest';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchService {\r\n\r\n  recentSearchReaquets: Searchrequest[] = [\r\n    new Searchrequest( 18, 40, 'both', 'kochen'),\r\n    new Searchrequest( 19, 20, 'female', 'schwimmen'),\r\n    new Searchrequest( 20, 30, 'male', 'rudern')\r\n  ];\r\n\r\n  constructor() { }\r\n\r\n  createSearchRequest(searchdata: any) {}\r\n\r\n  getRecentSearchrequestsForSpecificUser(uid: string) {\r\n    return this.recentSearchReaquets;\r\n  }\r\n\r\n  createSearchrequest(searchdata: any) {\r\n    console.log(searchdata);\r\n  }\r\n\r\n  takeExistingSearchrequest(searchdata: any) {\r\n    console.log(searchdata);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { User } from '../models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserStoreService {\r\n\r\n  private apiUrl = 'https://us-central1-tandemdurchstichtest.cloudfunctions.net';\r\n  private headers: Headers = new Headers();\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.headers.append('Content-Type', 'application/json');\r\n   }\r\n\r\n   getAllUsers() {\r\n     return this.http.get(`${this.apiUrl}/users`);\r\n   }\r\n\r\n\r\n   getUserById(id: string) {\r\n     return this.http.get(`${this.apiUrl}/users/${id}`);\r\n   }\r\n\r\n   createUser(user: any) {\r\n     // generate new API-User\r\n     const data = {\r\n       firstname: user.firstname,\r\n       lastname: user.lastname,\r\n       dateOfBirth: user.dateOfBirth,\r\n       sex: user.sex,\r\n       city: user.city,\r\n       activities: user.activities,\r\n       offers: user.offers,\r\n       mail: user.mail,\r\n       password: user.password\r\n     };\r\n\r\n     return this.http.post(`${this.apiUrl}/users`, data);\r\n   }\r\n\r\n   updateUser(id: string, user: any) {\r\n    const data = {\r\n      uid: id,\r\n      firstname: user.firstname,\r\n      lastname: user.lastname,\r\n      dateOfBirth: user.dateOfBirth,\r\n      sex: user.sex,\r\n      city: user.city,\r\n      activities: user.activities,\r\n      offers: user.offers,\r\n      mail: user.mail,\r\n      password: user.password\r\n    };\r\n\r\n    return this.http.put(`${this.apiUrl}/users/${id}`, data);\r\n  }\r\n\r\n  public deleteUser(id: string) {\r\n    return this.http.delete(`${this.apiUrl}/users/${id}`);\r\n  }\r\n\r\n  private errorHandler(error: Error | any) {\r\n    return Observable.throw(error);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebase: {\r\n    apiKey: 'AIzaSyD3N0cvtiexqnzKGIE9iGfHgMHhu-ou8EU',\r\n    authDomain: 'experimentaltandem.firebaseapp.com',\r\n    databaseURL: 'https://experimentaltandem.firebaseio.com',\r\n    projectId: 'experimentaltandem',\r\n    storageBucket: 'experimentaltandem.appspot.com',\r\n    messagingSenderId: '263344694119'\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}